
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LANGRBRACKET LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RANGRBRACKET RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKETgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : ID DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptyio_expr : in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,78,],[-170,0,-1,-170,-170,-4,-2,-3,-5,-6,-7,-8,-21,-92,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,181,217,218,252,253,287,288,289,303,304,310,],[13,13,13,-5,-6,-7,-8,-21,13,13,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,13,-109,13,13,-170,-103,-98,13,-100,-99,13,-104,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,181,217,218,252,253,287,288,289,303,304,310,],[14,14,14,-5,-6,-7,-8,-21,14,14,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,14,-109,14,14,-170,-103,-98,14,-100,-99,14,-104,]),'FUNC':([0,3,4,21,22,23,24,25,78,216,244,247,275,277,278,279,284,285,301,313,],[15,15,15,-5,-6,-7,-8,-21,-92,251,251,251,251,-61,-62,-63,-65,-66,-64,-68,]),'TYPE':([0,3,4,21,22,23,24,25,78,],[16,16,16,-5,-6,-7,-8,-21,-92,]),'STRUCT':([0,3,4,21,22,23,24,25,78,],[17,17,17,-5,-6,-7,-8,-21,-92,]),'INTERFACE':([0,3,4,21,22,23,24,25,78,],[18,18,18,-5,-6,-7,-8,-21,-92,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,55,56,57,63,65,69,70,78,80,81,82,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,157,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,195,197,199,200,201,202,217,218,219,226,227,235,249,250,252,253,255,262,263,264,265,268,270,282,287,288,289,295,296,299,302,303,304,309,310,312,314,],[21,22,23,24,-9,-10,-11,-170,-170,-170,-170,-97,-84,-85,-86,-87,-88,-89,80,81,82,-96,-101,-102,103,104,-170,-110,-111,-112,-13,-15,-16,-20,-92,-90,-91,-95,-107,-108,181,-97,-170,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-170,-12,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-109,-170,-105,-106,-47,-41,-161,-42,-14,-17,-170,-170,254,-152,-151,-170,284,285,-170,-103,-158,-153,-154,-155,-44,-69,-73,-53,-98,-170,-100,-160,-72,-49,-67,-99,-170,313,-104,-167,-159,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,48,49,70,72,73,76,77,78,80,81,82,103,104,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,158,159,181,195,197,199,200,213,215,217,218,235,240,245,252,253,265,268,270,280,281,287,288,289,295,296,302,303,304,310,],[26,26,-50,-54,26,-84,-85,-86,-87,-88,-89,-101,-102,-20,-55,-56,-170,-170,-92,-90,-91,-95,-107,-108,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-170,216,-109,-47,-41,-161,-42,244,-52,26,26,-170,-77,-51,-170,-103,-44,-69,-73,26,26,-98,26,-100,-160,-72,-67,-99,26,-104,]),'ID':([13,14,15,16,17,18,25,26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,64,74,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,154,161,181,183,184,185,186,188,189,192,193,208,217,218,222,228,237,244,251,252,253,254,257,275,277,278,279,287,288,289,301,303,304,306,310,313,],[28,28,30,31,32,33,-21,-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,122,-133,-134,28,156,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,206,-137,-109,-170,-105,-106,-170,-170,226,-137,-170,156,-170,-170,-137,-170,206,273,30,-170,-103,-170,-170,273,-61,-62,-63,-98,-170,-100,-64,-99,-170,-170,-104,-68,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,48,49,78,79,80,81,82,103,104,181,216,244,246,247,248,252,253,274,275,276,277,278,279,283,284,285,287,289,300,301,303,310,313,],[-21,-170,78,-170,-94,-84,-85,-86,-87,-88,-89,-101,-102,-92,-93,-90,-91,-95,-107,-108,-109,-170,-170,282,-170,-60,-170,-103,299,-170,-58,-61,-62,-63,-59,-65,-66,-98,-100,-57,-64,-99,-104,-68,]),'INT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,194,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,117,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,231,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'HEXADECIMAL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,118,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'FLOAT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,119,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'DOUBLE':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,120,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'STRING':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,294,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,121,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,308,-99,-170,-170,-104,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,48,49,52,53,54,55,56,57,58,59,60,61,62,67,71,72,73,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,192,193,195,196,197,198,199,200,217,218,222,226,227,228,235,240,251,252,253,254,255,257,260,262,263,264,265,266,268,269,270,286,287,288,289,292,295,296,298,303,304,306,310,312,314,],[-170,-170,-170,-137,-84,-85,-86,-87,-88,-89,83,-101,-102,-170,107,108,-110,-111,-112,-135,-136,123,-133,-134,-170,154,-55,-56,-170,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,186,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-170,193,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-170,-137,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-109,-170,-105,-106,-170,-170,-170,-56,-170,-47,-170,-41,-170,-161,-42,-170,-170,-137,-152,-151,-170,-170,-77,-170,-170,-103,-170,-158,-170,-170,-153,-154,-155,-44,294,-69,-170,-73,-170,-98,-170,-100,306,-160,-72,-170,-99,-170,-170,-104,-167,-159,]),'IN':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,132,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'OUT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,188,192,193,217,218,222,228,252,253,254,257,287,288,289,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,133,-133,-134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,-170,-170,-137,-109,-170,-105,-106,-170,-170,-137,-170,-170,-170,-137,-170,-170,-103,-170,-170,-98,-170,-100,-99,-170,-170,-104,]),'VOID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,134,-133,-134,134,134,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,134,-170,-137,-109,-170,-105,-106,-170,134,-170,-137,-170,134,134,-170,-170,-137,-170,134,-170,-103,-170,-170,134,134,-98,-170,-100,134,-99,-170,-170,-104,]),'BOOL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,135,-133,-134,135,135,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,135,-170,-137,-109,-170,-105,-106,-170,135,-170,-137,-170,135,135,-170,-170,-137,-170,135,-170,-103,-170,-170,135,135,-98,-170,-100,135,-99,-170,-170,-104,]),'I8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,136,-133,-134,136,136,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,136,-170,-137,-109,-170,-105,-106,-170,136,-170,-137,-170,136,136,-170,-170,-137,-170,136,-170,-103,-170,-170,136,136,-98,-170,-100,136,-99,-170,-170,-104,]),'U8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,137,-133,-134,137,137,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,137,-170,-137,-109,-170,-105,-106,-170,137,-170,-137,-170,137,137,-170,-170,-137,-170,137,-170,-103,-170,-170,137,137,-98,-170,-100,137,-99,-170,-170,-104,]),'I16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,138,-133,-134,138,138,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,138,-170,-137,-109,-170,-105,-106,-170,138,-170,-137,-170,138,138,-170,-170,-137,-170,138,-170,-103,-170,-170,138,138,-98,-170,-100,138,-99,-170,-170,-104,]),'U16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,139,-133,-134,139,139,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,139,-170,-137,-109,-170,-105,-106,-170,139,-170,-137,-170,139,139,-170,-170,-137,-170,139,-170,-103,-170,-170,139,139,-98,-170,-100,139,-99,-170,-170,-104,]),'I32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,140,-133,-134,140,140,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,140,-170,-137,-109,-170,-105,-106,-170,140,-170,-137,-170,140,140,-170,-170,-137,-170,140,-170,-103,-170,-170,140,140,-98,-170,-100,140,-99,-170,-170,-104,]),'U32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,141,-133,-134,141,141,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,141,-170,-137,-109,-170,-105,-106,-170,141,-170,-137,-170,141,141,-170,-170,-137,-170,141,-170,-103,-170,-170,141,141,-98,-170,-100,141,-99,-170,-170,-104,]),'I64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,142,-133,-134,142,142,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,142,-170,-137,-109,-170,-105,-106,-170,142,-170,-137,-170,142,142,-170,-170,-137,-170,142,-170,-103,-170,-170,142,142,-98,-170,-100,142,-99,-170,-170,-104,]),'U64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,143,-133,-134,143,143,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,143,-170,-137,-109,-170,-105,-106,-170,143,-170,-137,-170,143,143,-170,-170,-137,-170,143,-170,-103,-170,-170,143,143,-98,-170,-100,143,-99,-170,-170,-104,]),'F16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,144,-133,-134,144,144,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,144,-170,-137,-109,-170,-105,-106,-170,144,-170,-137,-170,144,144,-170,-170,-137,-170,144,-170,-103,-170,-170,144,144,-98,-170,-100,144,-99,-170,-170,-104,]),'F32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,145,-133,-134,145,145,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,145,-170,-137,-109,-170,-105,-106,-170,145,-170,-137,-170,145,145,-170,-170,-137,-170,145,-170,-103,-170,-170,145,145,-98,-170,-100,145,-99,-170,-170,-104,]),'F64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,146,-133,-134,146,146,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,146,-170,-137,-109,-170,-105,-106,-170,146,-170,-137,-170,146,146,-170,-170,-137,-170,146,-170,-103,-170,-170,146,146,-98,-170,-100,146,-99,-170,-170,-104,]),'INTERFACEID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,211,214,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,147,-133,-134,147,147,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,147,-170,-137,-109,-170,-105,-106,-170,147,-170,-137,-170,147,147,147,147,-170,-170,-137,-170,147,-170,-103,-170,-170,147,147,-98,-170,-100,147,-99,-170,-170,-104,]),'STRUCTID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,211,214,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,148,-133,-134,148,148,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,148,-170,-137,-109,-170,-105,-106,-170,148,-170,-137,-170,148,148,148,148,-170,-170,-137,-170,148,-170,-103,-170,-170,148,148,-98,-170,-100,148,-99,-170,-170,-104,]),'GENERICID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,152,161,181,183,184,185,186,187,188,192,193,196,198,217,218,222,228,251,252,253,254,257,260,269,287,288,289,298,303,304,306,310,],[-170,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-135,-136,149,-133,-134,149,149,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,149,-170,-137,-109,-170,-105,-106,-170,149,-170,-137,-170,149,149,-170,-170,-137,-170,149,-170,-103,-170,-170,149,149,-98,-170,-100,149,-99,-170,-170,-104,]),'LANGRBRACKET':([26,30,32,33,35,36,37,38,39,40,41,42,48,49,52,55,56,57,58,59,60,61,62,67,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,152,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,192,193,195,196,197,198,199,200,217,218,222,226,227,228,235,251,252,253,254,255,257,260,262,263,264,265,268,269,270,286,287,288,289,295,296,298,303,304,306,310,312,314,],[-170,74,-50,-54,-170,-137,-84,-85,-86,-87,-88,-89,-101,-102,-170,-110,-111,-112,-135,-136,74,-133,-134,74,74,74,74,-92,-90,-91,-95,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-107,-108,-137,-170,-170,187,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,74,196,-22,-23,-24,-25,-26,-27,-168,-169,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,198,198,-43,-48,-170,-137,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-109,-170,-105,-106,-170,74,-170,-137,-170,-47,74,-41,74,-161,-42,-170,-170,-137,-152,-151,-170,-170,74,-170,-103,-170,-158,-170,74,-153,-154,-155,-44,-69,74,-73,74,-98,-170,-100,-160,-72,74,-99,-170,-170,-104,-167,-159,]),'IF':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[46,46,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,46,46,-170,-103,-98,46,-100,-99,46,-104,]),'BREAK':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[50,50,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,50,50,-170,-103,-98,50,-100,-99,50,-104,]),'CONTINUE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[51,51,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,51,51,-170,-103,-98,51,-100,-99,51,-104,]),'RETURN':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[52,52,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,52,52,-170,-103,-98,52,-100,-99,52,-104,]),'WHILE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[53,53,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,53,53,-170,-103,-98,53,-100,-99,53,-104,]),'FOR':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,217,218,252,253,287,288,289,303,304,310,],[54,54,-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,54,54,-170,-103,-98,54,-100,-99,54,-104,]),'NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,152,181,183,184,185,186,188,193,217,218,228,252,253,254,257,287,288,289,303,304,306,310,],[61,61,-84,-85,-86,-87,-88,-89,-101,-102,61,-92,-90,-91,-95,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-107,-108,61,61,61,61,-109,61,-105,-106,61,61,61,61,61,61,-170,-103,61,61,-98,61,-100,-99,61,61,-104,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,152,181,183,184,185,186,188,193,217,218,228,252,253,254,257,287,288,289,303,304,306,310,],[62,62,-84,-85,-86,-87,-88,-89,-101,-102,62,-92,-90,-91,-95,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-107,-108,62,62,62,62,-109,62,-105,-106,62,62,62,62,62,62,-170,-103,62,62,-98,62,-100,-99,62,62,-104,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,152,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,193,202,217,218,223,225,226,227,228,252,253,254,255,257,262,263,264,287,288,289,290,291,303,304,306,310,312,314,],[58,58,-84,-85,-86,-87,-88,-89,85,-101,-102,58,-110,-111,-112,-92,-90,-91,-95,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-107,-108,58,58,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,58,58,85,85,-114,-115,-116,-117,85,85,85,-121,85,85,85,85,85,85,85,85,85,85,-109,85,58,-105,-106,58,58,85,58,85,58,58,85,85,-152,-151,58,-170,-103,58,-158,58,-153,85,-155,-98,58,-100,85,85,-99,58,58,-104,-167,-159,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,152,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,188,190,193,202,217,218,223,225,226,227,228,252,253,254,255,257,262,263,264,287,288,289,290,291,303,304,306,310,312,314,],[59,59,-84,-85,-86,-87,-88,-89,86,-101,-102,59,-110,-111,-112,-92,-90,-91,-95,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-107,-108,59,59,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,59,59,86,86,-114,-115,-116,-117,86,86,86,-121,86,86,86,86,86,86,86,86,86,86,-109,86,59,-105,-106,59,59,86,59,86,59,59,86,86,-152,-151,59,-170,-103,59,-158,59,-153,86,-155,-98,59,-100,86,86,-99,59,59,-104,-167,-159,]),'COMMA':([27,29,55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,155,156,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,195,197,199,200,202,204,206,210,212,223,224,226,227,234,235,239,241,242,243,255,262,263,264,265,268,270,271,291,293,295,296,312,314,],[64,64,-110,-111,-112,-19,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,64,-18,208,-170,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-47,-41,-161,-42,-17,237,-170,-80,-82,257,260,-152,-151,260,-170,-76,208,-81,-83,-158,-153,-154,-155,-44,-69,-73,237,257,260,-160,-72,-167,-159,]),'COLON':([28,32,72,73,76,156,158,206,240,273,],[67,-50,-55,-56,-170,211,214,67,-77,298,]),'ASSIGN':([28,31,47,55,56,57,66,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,195,197,199,200,202,223,225,226,227,235,255,262,263,264,265,268,270,290,291,295,296,312,314,],[-170,75,84,-110,-111,-112,152,-19,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-18,84,84,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,84,84,-47,-41,-161,-42,84,84,84,-152,-151,-170,-158,-153,84,-155,-44,-69,-73,84,84,-160,-72,-167,-159,]),'ELSE':([37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,252,253,287,289,303,310,],[-84,-85,-86,-87,-88,-89,-101,-102,-92,-90,-91,-95,-107,-108,-109,288,-103,-98,-100,-99,-104,]),'MUL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[87,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,87,87,87,87,-116,-117,87,87,87,-121,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-152,-151,-158,-153,87,-155,87,87,-167,-159,]),'DIV':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[88,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,88,88,88,88,-116,-117,88,88,88,-121,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-152,-151,-158,-153,88,-155,88,88,-167,-159,]),'AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[89,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,89,89,-114,-115,-116,-117,-118,89,89,-121,-122,-123,89,89,-126,-127,-128,-129,-130,-131,89,89,89,89,89,-152,-151,-158,-153,89,-155,89,89,-167,-159,]),'OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[90,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,90,90,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,90,90,-126,-127,-128,-129,-130,-131,90,90,90,90,90,-152,-151,-158,-153,90,-155,90,90,-167,-159,]),'XOR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[91,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,91,91,-114,-115,-116,-117,-118,91,-120,-121,-122,-123,91,91,-126,-127,-128,-129,-130,-131,91,91,91,91,91,-152,-151,-158,-153,91,-155,91,91,-167,-159,]),'MOD':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[92,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,92,92,92,92,-116,-117,92,92,92,-121,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-152,-151,-158,-153,92,-155,92,92,-167,-159,]),'LSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[93,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,93,93,-114,-115,-116,-117,93,93,93,-121,-122,-123,93,93,93,93,93,93,93,93,93,93,93,93,93,-152,-151,-158,-153,93,-155,93,93,-167,-159,]),'RSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[94,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,94,94,-114,-115,-116,-117,94,94,94,-121,-122,-123,94,94,94,94,94,94,94,94,94,94,94,94,94,-152,-151,-158,-153,94,-155,94,94,-167,-159,]),'LOGICAL_OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[95,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,95,95,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,95,95,95,95,95,-152,-151,-158,-153,95,-155,95,95,-167,-159,]),'LOGICAL_AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[96,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,96,96,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,96,-125,-126,-127,-128,-129,-130,-131,96,96,96,96,96,-152,-151,-158,-153,96,-155,96,96,-167,-159,]),'NOT_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[97,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,97,97,-114,-115,-116,-117,97,97,97,-121,-122,-123,97,97,-126,-127,-128,-129,-130,-131,97,97,97,97,97,-152,-151,-158,-153,97,-155,97,97,-167,-159,]),'EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[98,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,98,98,-114,-115,-116,-117,98,98,98,-121,-122,-123,98,98,-126,-127,-128,-129,-130,-131,98,98,98,98,98,-152,-151,-158,-153,98,-155,98,98,-167,-159,]),'LESS_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[99,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,99,99,-114,-115,-116,-117,99,99,99,-121,-122,-123,99,99,99,99,-128,-129,-130,-131,99,99,99,99,99,-152,-151,-158,-153,99,-155,99,99,-167,-159,]),'LESS':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[100,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,100,100,-114,-115,-116,-117,100,100,100,-121,-122,-123,100,100,100,100,-128,-129,-130,-131,100,100,100,100,100,-152,-151,-158,-153,100,-155,100,100,-167,-159,]),'GREATER_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[101,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,101,101,-114,-115,-116,-117,101,101,101,-121,-122,-123,101,101,101,101,-128,-129,-130,-131,101,101,101,101,101,-152,-151,-158,-153,101,-155,101,101,-167,-159,]),'GREATER':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,190,202,223,225,226,227,255,262,263,264,290,291,312,314,],[102,-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,102,102,-114,-115,-116,-117,102,102,102,-121,-122,-123,102,102,102,102,-128,-129,-130,-131,102,102,102,102,102,-152,-151,-158,-153,102,-155,102,102,-167,-159,]),'RPAREN':([55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,186,190,191,193,195,197,199,200,203,204,205,206,220,221,222,223,226,227,229,235,236,238,239,255,256,258,262,263,264,265,268,270,271,290,291,295,296,297,305,306,308,311,312,314,],[-110,-111,-112,-19,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-18,-170,217,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,218,-170,227,228,-170,-47,-41,-161,-42,235,-170,-71,-170,255,-156,-157,-170,-152,-151,264,-170,-70,-75,-76,-158,-164,-166,-153,-154,-155,-44,-69,-73,-170,304,-170,-160,-72,-74,-165,-170,312,314,-167,-159,]),'LBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,157,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,191,195,197,199,200,224,226,227,233,234,235,255,262,263,264,265,268,270,286,293,295,296,309,312,314,],[-110,-111,-112,188,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,194,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,194,194,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,194,-47,-41,-161,-42,194,-152,-151,194,194,-170,-158,-153,-154,-155,-44,-69,-73,194,194,-160,194,194,-167,-159,]),'RBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,194,225,226,227,230,231,232,255,262,263,264,312,314,],[-110,-111,-112,-132,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-170,262,-152,-151,265,-45,-46,-158,-153,-154,-155,-167,-159,]),'DOT':([122,],[189,]),'REF':([124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,157,191,195,197,199,200,224,233,234,235,265,268,270,286,293,295,296,309,],[195,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,195,195,195,-47,-41,-161,-42,195,195,195,-170,-44,-69,-73,195,195,-160,195,195,]),'RANGRBRACKET':([126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,195,197,199,200,207,209,210,212,224,233,234,235,241,242,243,259,261,265,267,268,270,272,293,295,296,307,],[-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-170,-170,-43,-48,-170,-170,-47,-41,-161,-42,240,-79,-80,-82,-170,266,-170,-170,-170,-81,-83,292,-163,-44,295,-69,-73,-78,-170,-160,-72,-162,]),'ASSIGNTYPE':([235,],[269,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,244,275,],[4,4,4,278,278,]),'empty':([0,3,4,26,27,28,29,30,35,52,60,67,75,76,77,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,147,148,151,152,154,155,156,158,183,186,187,188,193,194,196,198,204,206,216,217,218,223,224,228,234,235,241,244,247,251,252,254,257,260,269,271,275,286,288,291,293,298,304,306,],[5,5,5,36,65,68,65,73,36,106,73,73,73,73,73,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,106,192,199,199,65,161,205,209,212,215,106,222,73,161,222,232,73,73,238,68,248,106,106,258,261,161,261,270,209,276,248,73,289,161,161,73,73,238,276,73,106,258,261,73,106,222,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,108,217,218,288,304,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,108,217,218,288,304,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,216,244,247,275,],[9,9,9,249,280,249,280,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,217,218,280,281,288,304,],[25,38,38,38,38,25,301,38,38,]),'declarator':([13,14,64,],[27,29,151,]),'statement_nest':([26,35,],[34,79,]),'statement':([26,35,217,218,288,304,],[35,35,252,253,303,310,]),'decl_statement':([26,35,108,217,218,288,304,],[37,37,185,37,37,37,37,]),'expression_statement':([26,35,108,217,218,288,304,],[39,39,184,39,39,39,39,]),'if_statement':([26,35,217,218,288,304,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,217,218,288,304,],[41,41,41,41,41,41,]),'jump_statement':([26,35,217,218,288,304,],[42,42,42,42,42,42,]),'expression_opt':([26,35,52,108,183,217,218,288,304,],[45,45,105,45,219,45,45,45,45,]),'expression':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,152,183,186,188,193,217,218,228,254,257,288,304,306,],[47,47,47,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,47,190,202,47,223,225,223,47,47,263,290,291,47,47,223,]),'while_clause':([26,35,217,218,288,304,],[48,48,48,48,48,48,]),'for_clause':([26,35,217,218,288,304,],[49,49,49,49,49,49,]),'assign_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,152,183,186,188,193,217,218,228,254,257,288,304,306,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'binary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,152,183,186,188,193,217,218,228,254,257,288,304,306,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'unary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,152,183,186,188,193,217,218,228,254,257,288,304,306,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_operation_opt':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,152,183,186,188,193,217,218,228,254,257,288,304,306,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declarator_nest':([27,29,151,],[63,69,201,]),'type_spec_colon_opt':([28,206,],[66,239,]),'function_sign':([30,60,67,75,123,187,196,198,251,260,269,286,298,],[70,150,150,150,150,150,150,150,150,150,150,302,150,]),'generics_type_list_opt':([30,60,67,75,76,77,123,187,196,198,251,260,269,286,298,],[71,71,71,71,158,159,71,71,71,71,71,71,71,71,71,]),'generics_type_list':([30,60,67,75,76,77,123,187,196,198,251,260,269,286,298,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'new_struct':([32,],[76,]),'new_interface':([33,],[77,]),'primary_expr':([60,],[109,]),'operand':([60,],[110,]),'call_expr':([60,],[111,]),'index_expr':([60,],[112,]),'cast_expr':([60,],[113,]),'new_expr':([60,],[114,]),'member_expr':([60,],[115,]),'io_expr':([60,],[116,]),'type_spec':([60,67,75,123,187,196,198,251,260,269,298,],[124,153,157,191,224,233,234,286,293,296,309,]),'in_out':([60,],[125,]),'simple_type':([60,67,75,123,187,196,198,251,260,269,298,],[126,126,126,126,126,126,126,126,126,126,126,]),'complex_type':([60,67,75,123,187,196,198,211,214,251,260,269,298,],[127,127,127,127,127,127,127,243,245,127,127,127,127,]),'generic_type':([60,67,75,123,187,196,198,251,260,269,298,],[128,128,128,128,128,128,128,128,128,128,128,]),'array_type':([60,67,75,123,187,196,198,251,260,269,298,],[129,129,129,129,129,129,129,129,129,129,129,]),'reference_type':([60,67,75,123,187,196,198,251,260,269,298,],[130,130,130,130,130,130,130,130,130,130,130,]),'function_type':([60,67,75,123,187,196,198,251,260,269,298,],[131,131,131,131,131,131,131,131,131,131,131,]),'generics_type':([74,208,],[155,241,]),'for_init_statement':([108,],[183,]),'generics_specialization_list_opt':([147,148,],[197,200,]),'parameter_decl_list_opt':([154,],[203,]),'parameter_decl':([154,237,],[204,271,]),'generics_type_comma_nest':([155,241,],[207,272,]),'generics_type_range_colon_opt':([156,],[210,]),'complex_type_colon_opt':([158,],[213,]),'parameter_list_opt':([186,193,306,],[220,229,311,]),'parameter_list':([186,193,306,],[221,221,221,]),'int_literal_opt':([194,],[230,]),'parameter_decl_comma_nest':([204,271,],[236,297,]),'generics_type_range':([211,],[242,]),'interface_member_decl_nest':([216,247,],[246,283,]),'interface_member_decl':([216,247,],[247,247,]),'type_function_decl':([216,244,247,275,],[250,281,250,281,]),'expression_comma_nest':([223,291,],[256,305,]),'type_spec_comma_nest':([224,234,293,],[259,267,307,]),'type_spec_assigntype_opt':([235,],[268,]),'member_decl_nest':([244,275,],[274,300,]),'member_decl':([244,275,],[275,275,]),'member_declarator':([244,275,],[277,277,]),'type_function_def':([244,275,],[279,279,]),'statement_else_opt':([252,],[287,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',13),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',20),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',21),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',22),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',30),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',35),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',37),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',43),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',48),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',54),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',55),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',59),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',63),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',68),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',69),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',72),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',77),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',83),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',84),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',85),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',86),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',87),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',88),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',94),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',95),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',96),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',97),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',106),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',112),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',113),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',117),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',121),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',125),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',126),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',131),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',135),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',139),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',145),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',151),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',152),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',159),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',165),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',170),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',171),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',177),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',178),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',183),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',184),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',189),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',190),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',191),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',195),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',199),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',200),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',205),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',209),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',214),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',219),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',220),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',226),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',227),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',233),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',234),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',240),
  ('generics_type_list -> LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKET','generics_type_list',4,'p_generics_type_list','parser.py',248),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',253),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',254),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',259),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',264),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',265),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',270),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',278),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',279),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',280),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',281),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',282),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',283),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',287),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',288),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',292),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',296),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',297),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',302),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',306),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',307),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',311),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',315),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',316),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',320),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',321),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',325),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',329),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',333),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',334),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',338),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',339),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',340),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',348),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',349),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',350),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',355),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',360),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',361),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',362),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',363),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',364),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',365),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',366),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',367),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',368),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',369),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',370),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',371),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',372),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',373),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',374),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',375),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',376),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',377),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',383),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',389),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',390),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',391),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',392),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',393),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',397),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',398),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',399),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',400),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',401),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',402),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',403),
  ('operand -> INT','operand',1,'p_operand','parser.py',407),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',408),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',409),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',410),
  ('operand -> STRING','operand',1,'p_operand','parser.py',411),
  ('operand -> ID','operand',1,'p_operand','parser.py',412),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',413),
  ('member_expr -> ID DOT ID','member_expr',3,'p_member_expr','parser.py',419),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',423),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',427),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',431),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',436),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',437),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',441),
  ('call_expr -> primary_expr LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET LPAREN parameter_list_opt RPAREN','call_expr',8,'p_call_expr','parser.py',442),
  ('generics_specialization_list_opt -> LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',447),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',448),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',452),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',453),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',458),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',462),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',463),
  ('io_expr -> in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',467),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',470),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',471),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',475),
]
