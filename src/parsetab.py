
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GENERICMARK GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE TYPEALIASID U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | alias_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDalias_type : TYPEALIASIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LESS generics_type generics_type_comma_nest GREATERgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | lambda_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : primary_expr DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LESS type_spec type_spec_comma_nest GREATER\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptylambda_expr : FUNC function_sign block_statementio_expr : in_out LESS type_spec GREATER LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,78,],[-174,0,-1,-174,-174,-4,-2,-3,-5,-6,-7,-8,-21,-94,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,185,222,223,258,259,293,294,295,309,310,316,],[13,13,13,-5,-6,-7,-8,-21,13,13,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,13,-111,13,13,-174,-105,-100,13,-102,-101,13,-106,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,185,222,223,258,259,293,294,295,309,310,316,],[14,14,14,-5,-6,-7,-8,-21,14,14,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,14,-111,14,14,-174,-105,-100,14,-102,-101,14,-106,]),'FUNC':([0,3,4,21,22,23,24,25,26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,221,222,223,227,233,250,253,258,259,260,263,281,283,284,285,290,291,293,294,295,307,309,310,316,317,319,],[15,15,15,-5,-6,-7,-8,-21,-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,126,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,257,-174,-174,-139,-174,257,257,-174,-105,-174,-174,257,-63,-64,-65,-67,-68,-100,-174,-102,-66,-101,-174,-106,-174,-70,]),'TYPE':([0,3,4,21,22,23,24,25,78,],[16,16,16,-5,-6,-7,-8,-21,-94,]),'STRUCT':([0,3,4,21,22,23,24,25,78,],[17,17,17,-5,-6,-7,-8,-21,-94,]),'INTERFACE':([0,3,4,21,22,23,24,25,78,],[18,18,18,-5,-6,-7,-8,-21,-94,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,55,56,57,63,65,69,70,78,80,81,82,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,199,202,204,205,206,207,222,223,224,231,232,238,241,255,256,258,259,261,266,267,268,269,274,276,288,293,294,295,300,302,305,308,309,310,315,316,318,321,],[21,22,23,24,-9,-10,-11,-174,-174,-174,-174,-99,-86,-87,-88,-89,-90,-91,80,81,82,-98,-103,-104,103,104,-174,-112,-113,-114,-13,-15,-16,-20,-94,-92,-93,-97,-109,-110,185,-99,-174,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-174,-12,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-111,-174,-107,-108,-49,-42,-164,-43,-14,-17,-174,-174,260,-155,-154,-170,-174,290,291,-174,-105,-161,-156,-157,-158,-46,-71,-75,-55,-100,-174,-102,-163,-74,-51,-69,-101,-174,319,-106,-171,-162,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,48,49,70,72,73,76,77,78,80,81,82,103,104,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,162,163,185,199,200,202,204,205,218,220,222,223,241,246,251,258,259,269,274,276,286,287,293,294,295,300,302,308,309,310,316,],[26,26,-52,-56,26,-86,-87,-88,-89,-90,-91,-103,-104,-20,-57,-58,-174,-174,-94,-92,-93,-97,-109,-110,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-174,221,-111,-49,26,-42,-164,-43,250,-54,26,26,-174,-79,-53,-174,-105,-46,-71,-75,26,26,-100,26,-102,-163,-74,-69,-101,26,-106,]),'ID':([13,14,15,16,17,18,25,26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,64,74,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,158,165,185,187,188,189,190,192,193,196,197,213,222,223,227,233,243,250,257,258,259,260,263,281,283,284,285,293,294,295,307,309,310,316,317,319,],[28,28,30,31,32,33,-21,-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,123,-135,-136,28,160,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,211,-139,-111,-174,-107,-108,-174,-174,231,-139,-174,160,-174,-174,-139,-174,211,279,30,-174,-105,-174,-174,279,-63,-64,-65,-100,-174,-102,-66,-101,-174,-106,-174,-70,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,48,49,78,79,80,81,82,103,104,185,221,250,252,253,254,258,259,280,281,282,283,284,285,289,290,291,293,295,306,307,309,316,319,],[-21,-174,78,-174,-96,-86,-87,-88,-89,-90,-91,-103,-104,-94,-95,-92,-93,-97,-109,-110,-111,-174,-174,288,-174,-62,-174,-105,305,-174,-60,-63,-64,-65,-61,-67,-68,-100,-102,-59,-66,-101,-106,-70,]),'INT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,198,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,118,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,236,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'HEXADECIMAL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,119,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'FLOAT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,120,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'DOUBLE':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,121,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'STRING':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,299,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,122,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,313,-101,-174,-106,-174,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,48,49,52,53,54,55,56,57,58,59,60,61,62,67,71,72,73,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,188,189,190,192,196,197,199,201,202,203,204,205,222,223,227,229,231,232,233,238,241,246,257,258,259,260,261,263,266,267,268,269,270,272,274,275,276,292,293,294,295,300,302,304,309,310,312,316,317,318,321,],[-174,-174,-174,-139,-86,-87,-88,-89,-90,-91,83,-103,-104,-174,107,108,-112,-113,-114,-137,-138,124,-135,-136,-174,158,-57,-58,-174,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,190,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-174,197,-174,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-174,-139,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-111,-174,-107,-108,-174,-174,-58,-174,-49,-174,-42,-174,-164,-43,-174,-174,-139,-174,-155,-154,-174,-170,-174,-79,-174,-174,-105,-174,-161,-174,-156,-157,-158,-46,299,-174,-71,-174,-75,-174,-100,-174,-102,-163,-74,-174,-101,-174,317,-106,-174,-171,-162,]),'IN':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,136,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'OUT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,222,223,227,233,258,259,260,263,293,294,295,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,137,-135,-136,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-174,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,-174,-174,-139,-174,-174,-105,-174,-174,-100,-174,-102,-101,-174,-106,-174,]),'VOID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,138,-135,-136,138,138,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,138,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,138,138,-174,-174,-139,138,-174,138,-174,-105,-174,-174,138,138,-100,-174,-102,138,-101,-174,-106,-174,]),'BOOL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,139,-135,-136,139,139,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,139,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,139,139,-174,-174,-139,139,-174,139,-174,-105,-174,-174,139,139,-100,-174,-102,139,-101,-174,-106,-174,]),'I8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,140,-135,-136,140,140,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,140,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,140,140,-174,-174,-139,140,-174,140,-174,-105,-174,-174,140,140,-100,-174,-102,140,-101,-174,-106,-174,]),'U8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,141,-135,-136,141,141,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,141,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,141,141,-174,-174,-139,141,-174,141,-174,-105,-174,-174,141,141,-100,-174,-102,141,-101,-174,-106,-174,]),'I16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,142,-135,-136,142,142,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,142,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,142,142,-174,-174,-139,142,-174,142,-174,-105,-174,-174,142,142,-100,-174,-102,142,-101,-174,-106,-174,]),'U16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,143,-135,-136,143,143,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,143,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,143,143,-174,-174,-139,143,-174,143,-174,-105,-174,-174,143,143,-100,-174,-102,143,-101,-174,-106,-174,]),'I32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,144,-135,-136,144,144,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,144,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,144,144,-174,-174,-139,144,-174,144,-174,-105,-174,-174,144,144,-100,-174,-102,144,-101,-174,-106,-174,]),'U32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,145,-135,-136,145,145,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,145,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,145,145,-174,-174,-139,145,-174,145,-174,-105,-174,-174,145,145,-100,-174,-102,145,-101,-174,-106,-174,]),'I64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,146,-135,-136,146,146,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,146,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,146,146,-174,-174,-139,146,-174,146,-174,-105,-174,-174,146,146,-100,-174,-102,146,-101,-174,-106,-174,]),'U64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,147,-135,-136,147,147,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,147,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,147,147,-174,-174,-139,147,-174,147,-174,-105,-174,-174,147,147,-100,-174,-102,147,-101,-174,-106,-174,]),'F16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,148,-135,-136,148,148,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,148,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,148,148,-174,-174,-139,148,-174,148,-174,-105,-174,-174,148,148,-100,-174,-102,148,-101,-174,-106,-174,]),'F32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,149,-135,-136,149,149,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,149,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,149,149,-174,-174,-139,149,-174,149,-174,-105,-174,-174,149,149,-100,-174,-102,149,-101,-174,-106,-174,]),'F64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,150,-135,-136,150,150,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,150,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,150,150,-174,-174,-139,150,-174,150,-174,-105,-174,-174,150,150,-100,-174,-102,150,-101,-174,-106,-174,]),'INTERFACEID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,216,219,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,151,-135,-136,151,151,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,151,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,151,151,151,151,-174,-174,-139,151,-174,151,-174,-105,-174,-174,151,151,-100,-174,-102,151,-101,-174,-106,-174,]),'STRUCTID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,216,219,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,152,-135,-136,152,152,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,152,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,152,152,152,152,-174,-174,-139,152,-174,152,-174,-105,-174,-174,152,152,-100,-174,-102,152,-101,-174,-106,-174,]),'GENERICID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,153,-135,-136,153,153,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,153,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,153,153,-174,-174,-139,153,-174,153,-174,-105,-174,-174,153,153,-100,-174,-102,153,-101,-174,-106,-174,]),'TYPEALIASID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,124,156,165,185,187,188,189,190,192,196,197,201,203,222,223,227,229,233,257,258,259,260,263,272,275,293,294,295,304,309,310,316,317,],[-174,-174,-139,-86,-87,-88,-89,-90,-91,-103,-104,-174,-137,-138,154,-135,-136,154,154,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,154,-174,-139,-111,-174,-107,-108,-174,-174,-139,-174,154,154,-174,-174,-139,154,-174,154,-174,-105,-174,-174,154,154,-100,-174,-102,154,-101,-174,-106,-174,]),'LESS':([26,30,32,33,35,36,37,38,39,40,41,42,47,48,49,52,55,56,57,58,59,60,61,62,67,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,194,196,197,199,201,202,203,204,205,207,222,223,227,228,229,230,231,232,233,238,241,257,258,259,260,261,263,266,267,268,269,272,274,275,276,292,293,294,295,296,297,300,302,304,309,310,316,317,318,321,],[-174,74,-52,-56,-174,-139,-86,-87,-88,-89,-90,-91,100,-103,-104,-174,-112,-113,-114,-137,-138,74,-135,-136,74,74,74,74,-94,-92,-93,-97,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-174,-109,-110,-139,-174,-174,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,74,74,-50,201,-22,-23,-24,-25,-26,-27,-28,-172,-173,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,203,203,-44,-45,-174,100,-139,100,-116,-117,-118,-119,100,100,100,-123,-124,-125,100,100,100,100,-130,-131,-132,-133,-111,100,-174,-107,-108,-174,229,-174,100,-139,-174,-49,74,-42,74,-164,-43,100,-174,-174,-139,100,74,100,-155,-154,-174,-170,-174,74,-174,-105,-174,-161,-174,-156,100,-158,-46,74,-71,74,-75,74,-100,-174,-102,100,100,-163,-74,74,-101,-174,-106,-174,-171,-162,]),'IF':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[46,46,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,46,46,-174,-105,-100,46,-102,-101,46,-106,]),'BREAK':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[50,50,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,50,50,-174,-105,-100,50,-102,-101,50,-106,]),'CONTINUE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[51,51,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,51,51,-174,-105,-100,51,-102,-101,51,-106,]),'RETURN':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[52,52,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,52,52,-174,-105,-100,52,-102,-101,52,-106,]),'WHILE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[53,53,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,53,53,-174,-105,-100,53,-102,-101,53,-106,]),'FOR':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,222,223,258,259,293,294,295,309,310,316,],[54,54,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,54,54,-174,-105,-100,54,-102,-101,54,-106,]),'NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,124,156,185,187,188,189,190,192,197,222,223,233,258,259,260,263,293,294,295,309,310,316,317,],[61,61,-86,-87,-88,-89,-90,-91,-103,-104,61,-94,-92,-93,-97,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-109,-110,61,61,61,61,-111,61,-107,-108,61,61,61,61,61,61,-174,-105,61,61,-100,61,-102,-101,61,-106,61,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,124,156,185,187,188,189,190,192,197,222,223,233,258,259,260,263,293,294,295,309,310,316,317,],[62,62,-86,-87,-88,-89,-90,-91,-103,-104,62,-94,-92,-93,-97,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-109,-110,62,62,62,62,-111,62,-107,-108,62,62,62,62,62,62,-174,-105,62,62,-100,62,-102,-101,62,-106,62,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,156,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,194,197,207,222,223,228,230,231,232,233,238,258,259,260,261,263,266,267,268,293,294,295,296,297,309,310,316,317,318,321,],[58,58,-86,-87,-88,-89,-90,-91,85,-103,-104,58,-112,-113,-114,-94,-92,-93,-97,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-109,-110,58,58,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,58,58,85,85,-116,-117,-118,-119,85,85,85,-123,85,85,85,85,85,85,85,85,85,85,-111,85,58,-107,-108,58,58,85,58,85,58,58,85,85,-155,-154,58,-170,-174,-105,58,-161,58,-156,85,-158,-100,58,-102,85,85,-101,58,-106,58,-171,-162,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,156,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,192,194,197,207,222,223,228,230,231,232,233,238,258,259,260,261,263,266,267,268,293,294,295,296,297,309,310,316,317,318,321,],[59,59,-86,-87,-88,-89,-90,-91,86,-103,-104,59,-112,-113,-114,-94,-92,-93,-97,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-109,-110,59,59,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,59,59,86,86,-116,-117,-118,-119,86,86,86,-123,86,86,86,86,86,86,86,86,86,86,-111,86,59,-107,-108,59,59,86,59,86,59,59,86,86,-155,-154,59,-170,-174,-105,59,-161,59,-156,86,-158,-100,59,-102,86,86,-101,59,-106,59,-171,-162,]),'COMMA':([27,29,55,56,57,68,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,199,202,204,205,207,209,211,215,217,228,231,232,238,240,241,245,247,248,249,261,265,266,267,268,269,274,276,277,297,300,301,302,318,321,],[64,64,-112,-113,-114,-19,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,64,-18,213,-174,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-49,-42,-164,-43,-17,243,-174,-82,-84,263,-155,-154,-170,272,-174,-78,213,-83,-85,-161,272,-156,-157,-158,-46,-71,-75,243,263,-163,272,-74,-171,-162,]),'COLON':([28,32,72,73,76,160,162,211,246,279,],[67,-52,-57,-58,-174,216,219,67,-79,304,]),'ASSIGN':([28,31,47,55,56,57,66,68,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,199,202,204,205,207,228,230,231,232,238,241,261,266,267,268,269,274,276,296,297,300,302,318,321,],[-174,75,84,-112,-113,-114,156,-19,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-18,84,84,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,84,84,-49,-42,-164,-43,84,84,84,-155,-154,-170,-174,-161,-156,84,-158,-46,-71,-75,84,84,-163,-74,-171,-162,]),'ELSE':([37,38,39,40,41,42,48,49,78,80,81,82,103,104,185,258,259,293,295,309,316,],[-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,294,-105,-100,-102,-101,-106,]),'MUL':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[87,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,87,87,87,87,-118,-119,87,87,87,-123,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-155,-154,-170,-161,-156,87,-158,87,87,-171,-162,]),'DIV':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[88,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,88,88,88,88,-118,-119,88,88,88,-123,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-155,-154,-170,-161,-156,88,-158,88,88,-171,-162,]),'AND':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[89,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,89,89,-116,-117,-118,-119,-120,89,89,-123,-124,-125,89,89,-128,-129,-130,-131,-132,-133,89,89,89,89,89,-155,-154,-170,-161,-156,89,-158,89,89,-171,-162,]),'OR':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[90,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,90,90,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,90,90,-128,-129,-130,-131,-132,-133,90,90,90,90,90,-155,-154,-170,-161,-156,90,-158,90,90,-171,-162,]),'XOR':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[91,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,91,91,-116,-117,-118,-119,-120,91,-122,-123,-124,-125,91,91,-128,-129,-130,-131,-132,-133,91,91,91,91,91,-155,-154,-170,-161,-156,91,-158,91,91,-171,-162,]),'MOD':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[92,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,92,92,92,92,-118,-119,92,92,92,-123,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-155,-154,-170,-161,-156,92,-158,92,92,-171,-162,]),'LSHIFT':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[93,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,93,93,-116,-117,-118,-119,93,93,93,-123,-124,-125,93,93,93,93,93,93,93,93,93,93,93,93,93,-155,-154,-170,-161,-156,93,-158,93,93,-171,-162,]),'RSHIFT':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[94,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,94,94,-116,-117,-118,-119,94,94,94,-123,-124,-125,94,94,94,94,94,94,94,94,94,94,94,94,94,-155,-154,-170,-161,-156,94,-158,94,94,-171,-162,]),'LOGICAL_OR':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[95,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,95,95,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,95,95,95,95,95,-155,-154,-170,-161,-156,95,-158,95,95,-171,-162,]),'LOGICAL_AND':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[96,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,96,96,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,96,-127,-128,-129,-130,-131,-132,-133,96,96,96,96,96,-155,-154,-170,-161,-156,96,-158,96,96,-171,-162,]),'NOT_EQUAL':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[97,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,97,97,-116,-117,-118,-119,97,97,97,-123,-124,-125,97,97,-128,-129,-130,-131,-132,-133,97,97,97,97,97,-155,-154,-170,-161,-156,97,-158,97,97,-171,-162,]),'EQUAL':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[98,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,98,98,-116,-117,-118,-119,98,98,98,-123,-124,-125,98,98,-128,-129,-130,-131,-132,-133,98,98,98,98,98,-155,-154,-170,-161,-156,98,-158,98,98,-171,-162,]),'LESS_EQUAL':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[99,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,99,99,-116,-117,-118,-119,99,99,99,-123,-124,-125,99,99,99,99,-130,-131,-132,-133,99,99,99,99,99,-155,-154,-170,-161,-156,99,-158,99,99,-171,-162,]),'GREATER_EQUAL':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,207,228,230,231,232,238,261,266,267,268,296,297,318,321,],[101,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,101,101,-116,-117,-118,-119,101,101,101,-123,-124,-125,101,101,101,101,-130,-131,-132,-133,101,101,101,101,101,-155,-154,-170,-161,-156,101,-158,101,101,-171,-162,]),'GREATER':([47,55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,159,160,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,194,199,202,204,205,207,212,214,215,217,228,230,231,232,238,239,240,241,247,248,249,261,265,266,267,268,269,271,273,274,276,278,296,297,298,300,301,302,314,318,321,],[102,-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-174,-174,102,102,-116,-117,-118,-119,102,102,102,-123,-124,-125,102,102,102,102,-130,-131,-132,-133,102,102,-49,-42,-164,-43,102,246,-81,-82,-84,102,102,-155,-154,-170,270,-174,-174,-174,-83,-85,-161,-174,-156,102,-158,-46,300,-166,-71,-75,-80,102,102,312,-163,-174,-74,-165,-171,-162,]),'RPAREN':([55,56,57,68,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,190,194,195,197,199,202,204,205,208,209,210,211,225,226,227,228,231,232,234,238,241,242,244,245,261,262,264,266,267,268,269,274,276,277,296,297,300,302,303,311,313,317,318,320,321,],[-112,-113,-114,-19,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-18,-174,222,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,223,-174,232,233,-174,-49,-42,-164,-43,241,-174,-73,-174,261,-159,-160,-174,-155,-154,268,-170,-174,-72,-77,-78,-161,-167,-169,-156,-157,-158,-46,-71,-75,-174,310,-174,-163,-74,-76,-168,318,-174,-171,321,-162,]),'GENERICMARK':([55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,231,232,238,261,266,267,268,318,321,],[-112,-113,-114,-94,191,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-155,-154,-170,-161,-156,-157,-158,-171,-162,]),'LBRACKET':([55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,161,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,195,199,202,204,205,231,232,238,239,240,241,261,265,266,267,268,269,274,276,292,300,301,302,315,318,321,],[-112,-113,-114,-94,192,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,198,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,198,198,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,198,-49,-42,-164,-43,-155,-154,-170,198,198,-174,-161,198,-156,-157,-158,-46,-71,-75,198,-163,198,198,198,-171,-162,]),'DOT':([55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,231,232,238,261,266,267,268,318,321,],[-112,-113,-114,-94,193,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-155,-154,-170,-161,-156,-157,-158,-171,-162,]),'RBRACKET':([55,56,57,78,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,198,230,231,232,235,236,237,238,261,266,267,268,318,321,],[-112,-113,-114,-94,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-174,266,-155,-154,269,-47,-48,-170,-161,-156,-157,-158,-171,-162,]),'REF':([125,127,129,130,131,132,133,134,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,161,195,199,202,204,205,239,240,241,265,269,274,276,292,300,301,302,315,],[199,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,199,199,199,-49,-42,-164,-43,199,199,-174,199,-46,-71,-75,199,-163,199,199,199,]),'ASSIGNTYPE':([241,],[275,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,250,281,],[4,4,4,284,284,]),'empty':([0,3,4,26,27,28,29,30,35,52,60,67,75,76,77,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,126,151,152,155,156,158,159,160,162,187,190,192,197,198,201,203,209,211,221,222,223,228,229,233,240,241,247,250,253,257,258,260,263,265,272,275,277,281,292,294,297,301,304,310,317,],[5,5,5,36,65,68,65,73,36,106,73,73,73,73,73,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,106,196,73,204,204,65,165,210,214,217,220,106,227,165,227,237,73,73,244,68,254,106,106,264,73,165,273,276,214,282,254,73,295,165,165,273,73,73,244,282,73,106,264,273,73,106,227,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,108,222,223,294,310,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,108,222,223,294,310,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,221,250,253,281,],[9,9,9,255,286,255,286,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,200,222,223,286,287,294,310,],[25,38,38,238,38,38,25,307,38,38,]),'declarator':([13,14,64,],[27,29,155,]),'statement_nest':([26,35,],[34,79,]),'statement':([26,35,222,223,294,310,],[35,35,258,259,309,316,]),'decl_statement':([26,35,108,222,223,294,310,],[37,37,189,37,37,37,37,]),'expression_statement':([26,35,108,222,223,294,310,],[39,39,188,39,39,39,39,]),'if_statement':([26,35,222,223,294,310,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,222,223,294,310,],[41,41,41,41,41,41,]),'jump_statement':([26,35,222,223,294,310,],[42,42,42,42,42,42,]),'expression_opt':([26,35,52,108,187,222,223,294,310,],[45,45,105,45,224,45,45,45,45,]),'expression':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,156,187,190,192,197,222,223,233,260,263,294,310,317,],[47,47,47,164,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,47,194,207,47,228,230,228,47,47,267,296,297,47,47,228,]),'while_clause':([26,35,222,223,294,310,],[48,48,48,48,48,48,]),'for_clause':([26,35,222,223,294,310,],[49,49,49,49,49,49,]),'assign_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,156,187,190,192,197,222,223,233,260,263,294,310,317,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'binary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,156,187,190,192,197,222,223,233,260,263,294,310,317,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'unary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,156,187,190,192,197,222,223,233,260,263,294,310,317,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_operation_opt':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,124,156,187,190,192,197,222,223,233,260,263,294,310,317,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declarator_nest':([27,29,155,],[63,69,206,]),'type_spec_colon_opt':([28,211,],[66,245,]),'function_sign':([30,60,67,75,124,126,201,203,229,257,272,275,292,304,],[70,127,127,127,127,200,127,127,127,127,127,127,308,127,]),'generics_type_list_opt':([30,60,67,75,76,77,124,126,201,203,229,257,272,275,292,304,],[71,71,71,71,162,163,71,71,71,71,71,71,71,71,71,71,]),'generics_type_list':([30,60,67,75,76,77,124,126,201,203,229,257,272,275,292,304,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'new_struct':([32,],[76,]),'new_interface':([33,],[77,]),'primary_expr':([60,],[109,]),'operand':([60,],[110,]),'call_expr':([60,],[111,]),'index_expr':([60,],[112,]),'cast_expr':([60,],[113,]),'new_expr':([60,],[114,]),'member_expr':([60,],[115,]),'lambda_expr':([60,],[116,]),'io_expr':([60,],[117,]),'type_spec':([60,67,75,124,201,203,229,257,272,275,304,],[125,157,161,195,239,240,265,292,301,302,315,]),'in_out':([60,],[128,]),'simple_type':([60,67,75,124,201,203,229,257,272,275,304,],[129,129,129,129,129,129,129,129,129,129,129,]),'complex_type':([60,67,75,124,201,203,216,219,229,257,272,275,304,],[130,130,130,130,130,130,249,251,130,130,130,130,130,]),'generic_type':([60,67,75,124,201,203,229,257,272,275,304,],[131,131,131,131,131,131,131,131,131,131,131,]),'alias_type':([60,67,75,124,201,203,229,257,272,275,304,],[132,132,132,132,132,132,132,132,132,132,132,]),'array_type':([60,67,75,124,201,203,229,257,272,275,304,],[133,133,133,133,133,133,133,133,133,133,133,]),'reference_type':([60,67,75,124,201,203,229,257,272,275,304,],[134,134,134,134,134,134,134,134,134,134,134,]),'function_type':([60,67,75,124,201,203,229,257,272,275,304,],[135,135,135,135,135,135,135,135,135,135,135,]),'generics_type':([74,213,],[159,247,]),'for_init_statement':([108,],[187,]),'generics_specialization_list_opt':([151,152,],[202,205,]),'parameter_decl_list_opt':([158,],[208,]),'parameter_decl':([158,243,],[209,277,]),'generics_type_comma_nest':([159,247,],[212,278,]),'generics_type_range_colon_opt':([160,],[215,]),'complex_type_colon_opt':([162,],[218,]),'parameter_list_opt':([190,197,317,],[225,234,320,]),'parameter_list':([190,197,317,],[226,226,226,]),'int_literal_opt':([198,],[235,]),'parameter_decl_comma_nest':([209,277,],[242,303,]),'generics_type_range':([216,],[248,]),'interface_member_decl_nest':([221,253,],[252,289,]),'interface_member_decl':([221,253,],[253,253,]),'type_function_decl':([221,250,253,281,],[256,287,256,287,]),'expression_comma_nest':([228,297,],[262,311,]),'type_spec_comma_nest':([240,265,301,],[271,298,314,]),'type_spec_assigntype_opt':([241,],[274,]),'member_decl_nest':([250,281,],[280,306,]),'member_decl':([250,281,],[281,281,]),'member_declarator':([250,281,],[283,283,]),'type_function_def':([250,281,],[285,285,]),'statement_else_opt':([258,],[293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',13),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',20),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',21),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',22),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',30),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',35),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',37),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',43),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',49),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',55),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',56),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',60),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',64),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',68),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',69),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',72),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',77),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',83),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',84),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',85),
  ('type_spec -> alias_type','type_spec',1,'p_type_spec','parser.py',86),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',87),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',89),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',95),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',96),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',97),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',107),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',113),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',114),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',118),
  ('alias_type -> TYPEALIASID','alias_type',1,'p_alias_type','parser.py',122),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',126),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',130),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',131),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',136),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',140),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',144),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',150),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',156),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',157),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',164),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',170),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',175),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',176),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',182),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',183),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',188),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',189),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',194),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',195),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',196),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',200),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',204),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',205),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',210),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',214),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',219),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',224),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',225),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',231),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',232),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',238),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',239),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',245),
  ('generics_type_list -> LESS generics_type generics_type_comma_nest GREATER','generics_type_list',4,'p_generics_type_list','parser.py',253),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',258),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',259),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',264),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',269),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',270),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',275),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',283),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',284),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',285),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',286),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',287),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',288),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',293),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',294),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',298),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',302),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',303),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',308),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',312),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',313),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',317),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',322),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',323),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',327),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',328),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',332),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',336),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',340),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',341),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',345),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',346),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',347),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',355),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',356),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',357),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',362),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',367),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',368),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',369),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',370),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',371),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',372),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',373),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',374),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',375),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',376),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',377),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',378),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',379),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',380),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',381),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',382),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',383),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',384),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',390),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',396),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',397),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',398),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',399),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',400),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',404),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',405),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',406),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',407),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',408),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',409),
  ('primary_expr -> lambda_expr','primary_expr',1,'p_primary_expr','parser.py',410),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',411),
  ('operand -> INT','operand',1,'p_operand','parser.py',415),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',416),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',417),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',418),
  ('operand -> STRING','operand',1,'p_operand','parser.py',419),
  ('operand -> ID','operand',1,'p_operand','parser.py',420),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',421),
  ('member_expr -> primary_expr DOT ID','member_expr',3,'p_member_expr','parser.py',427),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',431),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',435),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',439),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',444),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',445),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',449),
  ('call_expr -> primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPAREN','call_expr',9,'p_call_expr','parser.py',450),
  ('generics_specialization_list_opt -> LESS type_spec type_spec_comma_nest GREATER','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',455),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',456),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',460),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',461),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',466),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',470),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',471),
  ('lambda_expr -> FUNC function_sign block_statement','lambda_expr',3,'p_lambda_expr','parser.py',475),
  ('io_expr -> in_out LESS type_spec GREATER LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',478),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',481),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',482),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',486),
]
