
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LANGRBRACKET LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RANGRBRACKET RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE TYPEALIASID U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | alias_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDalias_type : TYPEALIASIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKETgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : ID DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptyio_expr : in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,78,],[-172,0,-1,-172,-172,-4,-2,-3,-5,-6,-7,-8,-21,-94,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,183,219,220,254,255,289,290,291,305,306,312,],[13,13,13,-5,-6,-7,-8,-21,13,13,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,13,-111,13,13,-172,-105,-100,13,-102,-101,13,-106,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,183,219,220,254,255,289,290,291,305,306,312,],[14,14,14,-5,-6,-7,-8,-21,14,14,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,14,-111,14,14,-172,-105,-100,14,-102,-101,14,-106,]),'FUNC':([0,3,4,21,22,23,24,25,78,218,246,249,277,279,280,281,286,287,303,315,],[15,15,15,-5,-6,-7,-8,-21,-94,253,253,253,253,-63,-64,-65,-67,-68,-66,-70,]),'TYPE':([0,3,4,21,22,23,24,25,78,],[16,16,16,-5,-6,-7,-8,-21,-94,]),'STRUCT':([0,3,4,21,22,23,24,25,78,],[17,17,17,-5,-6,-7,-8,-21,-94,]),'INTERFACE':([0,3,4,21,22,23,24,25,78,],[18,18,18,-5,-6,-7,-8,-21,-94,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,55,56,57,63,65,69,70,78,80,81,82,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,197,199,201,202,203,204,219,220,221,228,229,237,251,252,254,255,257,264,265,266,267,270,272,284,289,290,291,297,298,301,304,305,306,311,312,314,316,],[21,22,23,24,-9,-10,-11,-172,-172,-172,-172,-99,-86,-87,-88,-89,-90,-91,80,81,82,-98,-103,-104,103,104,-172,-112,-113,-114,-13,-15,-16,-20,-94,-92,-93,-97,-109,-110,183,-99,-172,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-172,-12,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-111,-172,-107,-108,-49,-42,-163,-43,-14,-17,-172,-172,256,-154,-153,-172,286,287,-172,-105,-160,-155,-156,-157,-46,-71,-75,-55,-100,-172,-102,-162,-74,-51,-69,-101,-172,315,-106,-169,-161,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,48,49,70,72,73,76,77,78,80,81,82,103,104,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,160,161,183,197,199,201,202,215,217,219,220,237,242,247,254,255,267,270,272,282,283,289,290,291,297,298,304,305,306,312,],[26,26,-52,-56,26,-86,-87,-88,-89,-90,-91,-103,-104,-20,-57,-58,-172,-172,-94,-92,-93,-97,-109,-110,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-172,218,-111,-49,-42,-163,-43,246,-54,26,26,-172,-79,-53,-172,-105,-46,-71,-75,26,26,-100,26,-102,-162,-74,-69,-101,26,-106,]),'ID':([13,14,15,16,17,18,25,26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,64,74,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,156,163,183,185,186,187,188,190,191,194,195,210,219,220,224,230,239,246,253,254,255,256,259,277,279,280,281,289,290,291,303,305,306,308,312,315,],[28,28,30,31,32,33,-21,-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,122,-135,-136,28,158,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,208,-139,-111,-172,-107,-108,-172,-172,228,-139,-172,158,-172,-172,-139,-172,208,275,30,-172,-105,-172,-172,275,-63,-64,-65,-100,-172,-102,-66,-101,-172,-172,-106,-70,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,48,49,78,79,80,81,82,103,104,183,218,246,248,249,250,254,255,276,277,278,279,280,281,285,286,287,289,291,302,303,305,312,315,],[-21,-172,78,-172,-96,-86,-87,-88,-89,-90,-91,-103,-104,-94,-95,-92,-93,-97,-109,-110,-111,-172,-172,284,-172,-62,-172,-105,301,-172,-60,-63,-64,-65,-61,-67,-68,-100,-102,-59,-66,-101,-106,-70,]),'INT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,196,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,117,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,233,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'HEXADECIMAL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,118,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'FLOAT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,119,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'DOUBLE':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,120,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'STRING':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,296,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,121,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,310,-101,-172,-172,-106,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,48,49,52,53,54,55,56,57,58,59,60,61,62,67,71,72,73,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,194,195,197,198,199,200,201,202,219,220,224,228,229,230,237,242,253,254,255,256,257,259,262,264,265,266,267,268,270,271,272,288,289,290,291,294,297,298,300,305,306,308,312,314,316,],[-172,-172,-172,-139,-86,-87,-88,-89,-90,-91,83,-103,-104,-172,107,108,-112,-113,-114,-137,-138,123,-135,-136,-172,156,-57,-58,-172,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,188,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-172,195,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-172,-139,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-111,-172,-107,-108,-172,-172,-172,-58,-172,-49,-172,-42,-172,-163,-43,-172,-172,-139,-154,-153,-172,-172,-79,-172,-172,-105,-172,-160,-172,-172,-155,-156,-157,-46,296,-71,-172,-75,-172,-100,-172,-102,308,-162,-74,-172,-101,-172,-172,-106,-169,-161,]),'IN':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,133,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'OUT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,190,194,195,219,220,224,230,254,255,256,259,289,290,291,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,134,-135,-136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,-172,-172,-139,-111,-172,-107,-108,-172,-172,-139,-172,-172,-172,-139,-172,-172,-105,-172,-172,-100,-172,-102,-101,-172,-172,-106,]),'VOID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,135,-135,-136,135,135,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,135,-172,-139,-111,-172,-107,-108,-172,135,-172,-139,-172,135,135,-172,-172,-139,-172,135,-172,-105,-172,-172,135,135,-100,-172,-102,135,-101,-172,-172,-106,]),'BOOL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,136,-135,-136,136,136,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,136,-172,-139,-111,-172,-107,-108,-172,136,-172,-139,-172,136,136,-172,-172,-139,-172,136,-172,-105,-172,-172,136,136,-100,-172,-102,136,-101,-172,-172,-106,]),'I8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,137,-135,-136,137,137,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,137,-172,-139,-111,-172,-107,-108,-172,137,-172,-139,-172,137,137,-172,-172,-139,-172,137,-172,-105,-172,-172,137,137,-100,-172,-102,137,-101,-172,-172,-106,]),'U8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,138,-135,-136,138,138,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,138,-172,-139,-111,-172,-107,-108,-172,138,-172,-139,-172,138,138,-172,-172,-139,-172,138,-172,-105,-172,-172,138,138,-100,-172,-102,138,-101,-172,-172,-106,]),'I16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,139,-135,-136,139,139,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,139,-172,-139,-111,-172,-107,-108,-172,139,-172,-139,-172,139,139,-172,-172,-139,-172,139,-172,-105,-172,-172,139,139,-100,-172,-102,139,-101,-172,-172,-106,]),'U16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,140,-135,-136,140,140,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,140,-172,-139,-111,-172,-107,-108,-172,140,-172,-139,-172,140,140,-172,-172,-139,-172,140,-172,-105,-172,-172,140,140,-100,-172,-102,140,-101,-172,-172,-106,]),'I32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,141,-135,-136,141,141,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,141,-172,-139,-111,-172,-107,-108,-172,141,-172,-139,-172,141,141,-172,-172,-139,-172,141,-172,-105,-172,-172,141,141,-100,-172,-102,141,-101,-172,-172,-106,]),'U32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,142,-135,-136,142,142,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,142,-172,-139,-111,-172,-107,-108,-172,142,-172,-139,-172,142,142,-172,-172,-139,-172,142,-172,-105,-172,-172,142,142,-100,-172,-102,142,-101,-172,-172,-106,]),'I64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,143,-135,-136,143,143,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,143,-172,-139,-111,-172,-107,-108,-172,143,-172,-139,-172,143,143,-172,-172,-139,-172,143,-172,-105,-172,-172,143,143,-100,-172,-102,143,-101,-172,-172,-106,]),'U64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,144,-135,-136,144,144,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,144,-172,-139,-111,-172,-107,-108,-172,144,-172,-139,-172,144,144,-172,-172,-139,-172,144,-172,-105,-172,-172,144,144,-100,-172,-102,144,-101,-172,-172,-106,]),'F16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,145,-135,-136,145,145,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,145,-172,-139,-111,-172,-107,-108,-172,145,-172,-139,-172,145,145,-172,-172,-139,-172,145,-172,-105,-172,-172,145,145,-100,-172,-102,145,-101,-172,-172,-106,]),'F32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,146,-135,-136,146,146,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,146,-172,-139,-111,-172,-107,-108,-172,146,-172,-139,-172,146,146,-172,-172,-139,-172,146,-172,-105,-172,-172,146,146,-100,-172,-102,146,-101,-172,-172,-106,]),'F64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,147,-135,-136,147,147,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,147,-172,-139,-111,-172,-107,-108,-172,147,-172,-139,-172,147,147,-172,-172,-139,-172,147,-172,-105,-172,-172,147,147,-100,-172,-102,147,-101,-172,-172,-106,]),'INTERFACEID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,213,216,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,148,-135,-136,148,148,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,148,-172,-139,-111,-172,-107,-108,-172,148,-172,-139,-172,148,148,148,148,-172,-172,-139,-172,148,-172,-105,-172,-172,148,148,-100,-172,-102,148,-101,-172,-172,-106,]),'STRUCTID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,213,216,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,149,-135,-136,149,149,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,149,-172,-139,-111,-172,-107,-108,-172,149,-172,-139,-172,149,149,149,149,-172,-172,-139,-172,149,-172,-105,-172,-172,149,149,-100,-172,-102,149,-101,-172,-172,-106,]),'GENERICID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,150,-135,-136,150,150,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,150,-172,-139,-111,-172,-107,-108,-172,150,-172,-139,-172,150,150,-172,-172,-139,-172,150,-172,-105,-172,-172,150,150,-100,-172,-102,150,-101,-172,-172,-106,]),'TYPEALIASID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,154,163,183,185,186,187,188,189,190,194,195,198,200,219,220,224,230,253,254,255,256,259,262,271,289,290,291,300,305,306,308,312,],[-172,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-137,-138,151,-135,-136,151,151,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,151,-172,-139,-111,-172,-107,-108,-172,151,-172,-139,-172,151,151,-172,-172,-139,-172,151,-172,-105,-172,-172,151,151,-100,-172,-102,151,-101,-172,-172,-106,]),'LANGRBRACKET':([26,30,32,33,35,36,37,38,39,40,41,42,48,49,52,55,56,57,58,59,60,61,62,67,75,76,77,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,194,195,197,198,199,200,201,202,219,220,224,228,229,230,237,253,254,255,256,257,259,262,264,265,266,267,270,271,272,288,289,290,291,297,298,300,305,306,308,312,314,316,],[-172,74,-52,-56,-172,-139,-86,-87,-88,-89,-90,-91,-103,-104,-172,-112,-113,-114,-137,-138,74,-135,-136,74,74,74,74,-94,-92,-93,-97,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-172,-109,-110,-139,-172,-172,189,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,74,198,-22,-23,-24,-25,-26,-27,-28,-170,-171,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,200,200,-44,-45,-50,-172,-139,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-111,-172,-107,-108,-172,74,-172,-139,-172,-49,74,-42,74,-163,-43,-172,-172,-139,-154,-153,-172,-172,74,-172,-105,-172,-160,-172,74,-155,-156,-157,-46,-71,74,-75,74,-100,-172,-102,-162,-74,74,-101,-172,-172,-106,-169,-161,]),'IF':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[46,46,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,46,46,-172,-105,-100,46,-102,-101,46,-106,]),'BREAK':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[50,50,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,50,50,-172,-105,-100,50,-102,-101,50,-106,]),'CONTINUE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[51,51,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,51,51,-172,-105,-100,51,-102,-101,51,-106,]),'RETURN':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[52,52,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,52,52,-172,-105,-100,52,-102,-101,52,-106,]),'WHILE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[53,53,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,53,53,-172,-105,-100,53,-102,-101,53,-106,]),'FOR':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,219,220,254,255,289,290,291,305,306,312,],[54,54,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,54,54,-172,-105,-100,54,-102,-101,54,-106,]),'NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,154,183,185,186,187,188,190,195,219,220,230,254,255,256,259,289,290,291,305,306,308,312,],[61,61,-86,-87,-88,-89,-90,-91,-103,-104,61,-94,-92,-93,-97,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-109,-110,61,61,61,61,-111,61,-107,-108,61,61,61,61,61,61,-172,-105,61,61,-100,61,-102,-101,61,61,-106,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,154,183,185,186,187,188,190,195,219,220,230,254,255,256,259,289,290,291,305,306,308,312,],[62,62,-86,-87,-88,-89,-90,-91,-103,-104,62,-94,-92,-93,-97,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-109,-110,62,62,62,62,-111,62,-107,-108,62,62,62,62,62,62,-172,-105,62,62,-100,62,-102,-101,62,62,-106,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,154,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,195,204,219,220,225,227,228,229,230,254,255,256,257,259,264,265,266,289,290,291,292,293,305,306,308,312,314,316,],[58,58,-86,-87,-88,-89,-90,-91,85,-103,-104,58,-112,-113,-114,-94,-92,-93,-97,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-109,-110,58,58,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,58,58,85,85,-116,-117,-118,-119,85,85,85,-123,85,85,85,85,85,85,85,85,85,85,-111,85,58,-107,-108,58,58,85,58,85,58,58,85,85,-154,-153,58,-172,-105,58,-160,58,-155,85,-157,-100,58,-102,85,85,-101,58,58,-106,-169,-161,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,154,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,192,195,204,219,220,225,227,228,229,230,254,255,256,257,259,264,265,266,289,290,291,292,293,305,306,308,312,314,316,],[59,59,-86,-87,-88,-89,-90,-91,86,-103,-104,59,-112,-113,-114,-94,-92,-93,-97,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-109,-110,59,59,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,59,59,86,86,-116,-117,-118,-119,86,86,86,-123,86,86,86,86,86,86,86,86,86,86,-111,86,59,-107,-108,59,59,86,59,86,59,59,86,86,-154,-153,59,-172,-105,59,-160,59,-155,86,-157,-100,59,-102,86,86,-101,59,59,-106,-169,-161,]),'COMMA':([27,29,55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,157,158,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,197,199,201,202,204,206,208,212,214,225,226,228,229,236,237,241,243,244,245,257,264,265,266,267,270,272,273,293,295,297,298,314,316,],[64,64,-112,-113,-114,-19,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,64,-18,210,-172,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-49,-42,-163,-43,-17,239,-172,-82,-84,259,262,-154,-153,262,-172,-78,210,-83,-85,-160,-155,-156,-157,-46,-71,-75,239,259,262,-162,-74,-169,-161,]),'COLON':([28,32,72,73,76,158,160,208,242,275,],[67,-52,-57,-58,-172,213,216,67,-79,300,]),'ASSIGN':([28,31,47,55,56,57,66,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,197,199,201,202,204,225,227,228,229,237,257,264,265,266,267,270,272,292,293,297,298,314,316,],[-172,75,84,-112,-113,-114,154,-19,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-18,84,84,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,84,84,-49,-42,-163,-43,84,84,84,-154,-153,-172,-160,-155,84,-157,-46,-71,-75,84,84,-162,-74,-169,-161,]),'ELSE':([37,38,39,40,41,42,48,49,78,80,81,82,103,104,183,254,255,289,291,305,312,],[-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,290,-105,-100,-102,-101,-106,]),'MUL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[87,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,87,87,87,87,-118,-119,87,87,87,-123,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-154,-153,-160,-155,87,-157,87,87,-169,-161,]),'DIV':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[88,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,88,88,88,88,-118,-119,88,88,88,-123,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-154,-153,-160,-155,88,-157,88,88,-169,-161,]),'AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[89,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,89,89,-116,-117,-118,-119,-120,89,89,-123,-124,-125,89,89,-128,-129,-130,-131,-132,-133,89,89,89,89,89,-154,-153,-160,-155,89,-157,89,89,-169,-161,]),'OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[90,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,90,90,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,90,90,-128,-129,-130,-131,-132,-133,90,90,90,90,90,-154,-153,-160,-155,90,-157,90,90,-169,-161,]),'XOR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[91,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,91,91,-116,-117,-118,-119,-120,91,-122,-123,-124,-125,91,91,-128,-129,-130,-131,-132,-133,91,91,91,91,91,-154,-153,-160,-155,91,-157,91,91,-169,-161,]),'MOD':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[92,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,92,92,92,92,-118,-119,92,92,92,-123,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-154,-153,-160,-155,92,-157,92,92,-169,-161,]),'LSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[93,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,93,93,-116,-117,-118,-119,93,93,93,-123,-124,-125,93,93,93,93,93,93,93,93,93,93,93,93,93,-154,-153,-160,-155,93,-157,93,93,-169,-161,]),'RSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[94,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,94,94,-116,-117,-118,-119,94,94,94,-123,-124,-125,94,94,94,94,94,94,94,94,94,94,94,94,94,-154,-153,-160,-155,94,-157,94,94,-169,-161,]),'LOGICAL_OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[95,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,95,95,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,95,95,95,95,95,-154,-153,-160,-155,95,-157,95,95,-169,-161,]),'LOGICAL_AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[96,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,96,96,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,96,-127,-128,-129,-130,-131,-132,-133,96,96,96,96,96,-154,-153,-160,-155,96,-157,96,96,-169,-161,]),'NOT_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[97,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,97,97,-116,-117,-118,-119,97,97,97,-123,-124,-125,97,97,-128,-129,-130,-131,-132,-133,97,97,97,97,97,-154,-153,-160,-155,97,-157,97,97,-169,-161,]),'EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[98,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,98,98,-116,-117,-118,-119,98,98,98,-123,-124,-125,98,98,-128,-129,-130,-131,-132,-133,98,98,98,98,98,-154,-153,-160,-155,98,-157,98,98,-169,-161,]),'LESS_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[99,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,99,99,-116,-117,-118,-119,99,99,99,-123,-124,-125,99,99,99,99,-130,-131,-132,-133,99,99,99,99,99,-154,-153,-160,-155,99,-157,99,99,-169,-161,]),'LESS':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[100,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,100,100,-116,-117,-118,-119,100,100,100,-123,-124,-125,100,100,100,100,-130,-131,-132,-133,100,100,100,100,100,-154,-153,-160,-155,100,-157,100,100,-169,-161,]),'GREATER_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[101,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,101,101,-116,-117,-118,-119,101,101,101,-123,-124,-125,101,101,101,101,-130,-131,-132,-133,101,101,101,101,101,-154,-153,-160,-155,101,-157,101,101,-169,-161,]),'GREATER':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,192,204,225,227,228,229,257,264,265,266,292,293,314,316,],[102,-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,102,102,-116,-117,-118,-119,102,102,102,-123,-124,-125,102,102,102,102,-130,-131,-132,-133,102,102,102,102,102,-154,-153,-160,-155,102,-157,102,102,-169,-161,]),'RPAREN':([55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,188,192,193,195,197,199,201,202,205,206,207,208,222,223,224,225,228,229,231,237,238,240,241,257,258,260,264,265,266,267,270,272,273,292,293,297,298,299,307,308,310,313,314,316,],[-112,-113,-114,-19,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-18,-172,219,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,220,-172,229,230,-172,-49,-42,-163,-43,237,-172,-73,-172,257,-158,-159,-172,-154,-153,266,-172,-72,-77,-78,-160,-166,-168,-155,-156,-157,-46,-71,-75,-172,306,-172,-162,-74,-76,-167,-172,314,316,-169,-161,]),'LBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,159,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,193,197,199,201,202,226,228,229,235,236,237,257,264,265,266,267,270,272,288,295,297,298,311,314,316,],[-112,-113,-114,190,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,196,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,196,196,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,196,-49,-42,-163,-43,196,-154,-153,196,196,-172,-160,-155,-156,-157,-46,-71,-75,196,196,-162,196,196,-169,-161,]),'RBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,196,227,228,229,232,233,234,257,264,265,266,314,316,],[-112,-113,-114,-134,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-172,264,-154,-153,267,-47,-48,-160,-155,-156,-157,-169,-161,]),'DOT':([122,],[191,]),'REF':([124,126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,159,193,197,199,201,202,226,235,236,237,267,270,272,288,295,297,298,311,],[197,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,197,197,197,-49,-42,-163,-43,197,197,197,-172,-46,-71,-75,197,197,-162,197,197,]),'RANGRBRACKET':([126,127,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,197,199,201,202,209,211,212,214,226,235,236,237,243,244,245,261,263,267,269,270,272,274,295,297,298,309,],[-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-172,-172,-44,-45,-50,-172,-172,-49,-42,-163,-43,242,-81,-82,-84,-172,268,-172,-172,-172,-83,-85,294,-165,-46,297,-71,-75,-80,-172,-162,-74,-164,]),'ASSIGNTYPE':([237,],[271,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,246,277,],[4,4,4,280,280,]),'empty':([0,3,4,26,27,28,29,30,35,52,60,67,75,76,77,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,148,149,153,154,156,157,158,160,185,188,189,190,195,196,198,200,206,208,218,219,220,225,226,230,236,237,243,246,249,253,254,256,259,262,271,273,277,288,290,293,295,300,306,308,],[5,5,5,36,65,68,65,73,36,106,73,73,73,73,73,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,106,194,201,201,65,163,207,211,214,217,106,224,73,163,224,234,73,73,240,68,250,106,106,260,263,163,263,272,211,278,250,73,291,163,163,73,73,240,278,73,106,260,263,73,106,224,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,108,219,220,290,306,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,108,219,220,290,306,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,218,246,249,277,],[9,9,9,251,282,251,282,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,219,220,282,283,290,306,],[25,38,38,38,38,25,303,38,38,]),'declarator':([13,14,64,],[27,29,153,]),'statement_nest':([26,35,],[34,79,]),'statement':([26,35,219,220,290,306,],[35,35,254,255,305,312,]),'decl_statement':([26,35,108,219,220,290,306,],[37,37,187,37,37,37,37,]),'expression_statement':([26,35,108,219,220,290,306,],[39,39,186,39,39,39,39,]),'if_statement':([26,35,219,220,290,306,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,219,220,290,306,],[41,41,41,41,41,41,]),'jump_statement':([26,35,219,220,290,306,],[42,42,42,42,42,42,]),'expression_opt':([26,35,52,108,185,219,220,290,306,],[45,45,105,45,221,45,45,45,45,]),'expression':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,154,185,188,190,195,219,220,230,256,259,290,306,308,],[47,47,47,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,184,47,192,204,47,225,227,225,47,47,265,292,293,47,47,225,]),'while_clause':([26,35,219,220,290,306,],[48,48,48,48,48,48,]),'for_clause':([26,35,219,220,290,306,],[49,49,49,49,49,49,]),'assign_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,154,185,188,190,195,219,220,230,256,259,290,306,308,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'binary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,154,185,188,190,195,219,220,230,256,259,290,306,308,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'unary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,154,185,188,190,195,219,220,230,256,259,290,306,308,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_operation_opt':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,154,185,188,190,195,219,220,230,256,259,290,306,308,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declarator_nest':([27,29,153,],[63,69,203,]),'type_spec_colon_opt':([28,208,],[66,241,]),'function_sign':([30,60,67,75,123,189,198,200,253,262,271,288,300,],[70,152,152,152,152,152,152,152,152,152,152,304,152,]),'generics_type_list_opt':([30,60,67,75,76,77,123,189,198,200,253,262,271,288,300,],[71,71,71,71,160,161,71,71,71,71,71,71,71,71,71,]),'generics_type_list':([30,60,67,75,76,77,123,189,198,200,253,262,271,288,300,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'new_struct':([32,],[76,]),'new_interface':([33,],[77,]),'primary_expr':([60,],[109,]),'operand':([60,],[110,]),'call_expr':([60,],[111,]),'index_expr':([60,],[112,]),'cast_expr':([60,],[113,]),'new_expr':([60,],[114,]),'member_expr':([60,],[115,]),'io_expr':([60,],[116,]),'type_spec':([60,67,75,123,189,198,200,253,262,271,300,],[124,155,159,193,226,235,236,288,295,298,311,]),'in_out':([60,],[125,]),'simple_type':([60,67,75,123,189,198,200,253,262,271,300,],[126,126,126,126,126,126,126,126,126,126,126,]),'complex_type':([60,67,75,123,189,198,200,213,216,253,262,271,300,],[127,127,127,127,127,127,127,245,247,127,127,127,127,]),'generic_type':([60,67,75,123,189,198,200,253,262,271,300,],[128,128,128,128,128,128,128,128,128,128,128,]),'alias_type':([60,67,75,123,189,198,200,253,262,271,300,],[129,129,129,129,129,129,129,129,129,129,129,]),'array_type':([60,67,75,123,189,198,200,253,262,271,300,],[130,130,130,130,130,130,130,130,130,130,130,]),'reference_type':([60,67,75,123,189,198,200,253,262,271,300,],[131,131,131,131,131,131,131,131,131,131,131,]),'function_type':([60,67,75,123,189,198,200,253,262,271,300,],[132,132,132,132,132,132,132,132,132,132,132,]),'generics_type':([74,210,],[157,243,]),'for_init_statement':([108,],[185,]),'generics_specialization_list_opt':([148,149,],[199,202,]),'parameter_decl_list_opt':([156,],[205,]),'parameter_decl':([156,239,],[206,273,]),'generics_type_comma_nest':([157,243,],[209,274,]),'generics_type_range_colon_opt':([158,],[212,]),'complex_type_colon_opt':([160,],[215,]),'parameter_list_opt':([188,195,308,],[222,231,313,]),'parameter_list':([188,195,308,],[223,223,223,]),'int_literal_opt':([196,],[232,]),'parameter_decl_comma_nest':([206,273,],[238,299,]),'generics_type_range':([213,],[244,]),'interface_member_decl_nest':([218,249,],[248,285,]),'interface_member_decl':([218,249,],[249,249,]),'type_function_decl':([218,246,249,277,],[252,283,252,283,]),'expression_comma_nest':([225,293,],[258,307,]),'type_spec_comma_nest':([226,236,295,],[261,269,309,]),'type_spec_assigntype_opt':([237,],[270,]),'member_decl_nest':([246,277,],[276,302,]),'member_decl':([246,277,],[277,277,]),'member_declarator':([246,277,],[279,279,]),'type_function_def':([246,277,],[281,281,]),'statement_else_opt':([254,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',13),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',20),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',21),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',22),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',30),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',35),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',37),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',43),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',49),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',55),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',56),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',60),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',64),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',69),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',70),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',73),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',78),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',84),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',85),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',86),
  ('type_spec -> alias_type','type_spec',1,'p_type_spec','parser.py',87),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',90),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',96),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',97),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',107),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',108),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',114),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',115),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',119),
  ('alias_type -> TYPEALIASID','alias_type',1,'p_alias_type','parser.py',123),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',127),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',131),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',132),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',137),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',141),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',145),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',151),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',157),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',158),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',165),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',171),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',176),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',177),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',183),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',184),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',189),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',190),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',195),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',196),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',197),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',201),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',205),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',206),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',211),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',215),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',220),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',225),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',226),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',232),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',233),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',239),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',240),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',246),
  ('generics_type_list -> LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKET','generics_type_list',4,'p_generics_type_list','parser.py',254),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',259),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',260),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',265),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',270),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',271),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',276),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',284),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',285),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',286),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',287),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',288),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',289),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',293),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',294),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',298),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',302),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',303),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',308),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',312),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',313),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',317),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',321),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',322),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',326),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',327),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',331),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',335),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',339),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',340),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',344),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',345),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',346),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',354),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',355),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',356),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',361),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',366),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',367),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',368),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',369),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',370),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',371),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',372),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',373),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',374),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',375),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',376),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',377),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',378),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',379),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',380),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',381),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',382),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',383),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',389),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',395),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',396),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',397),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',398),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',399),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',403),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',404),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',405),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',406),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',407),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',408),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',409),
  ('operand -> INT','operand',1,'p_operand','parser.py',413),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',414),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',415),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',416),
  ('operand -> STRING','operand',1,'p_operand','parser.py',417),
  ('operand -> ID','operand',1,'p_operand','parser.py',418),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',419),
  ('member_expr -> ID DOT ID','member_expr',3,'p_member_expr','parser.py',425),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',429),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',433),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',437),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',442),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',443),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',447),
  ('call_expr -> primary_expr LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET LPAREN parameter_list_opt RPAREN','call_expr',8,'p_call_expr','parser.py',448),
  ('generics_specialization_list_opt -> LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',453),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',454),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',458),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',459),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',464),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',468),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',469),
  ('io_expr -> in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',473),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',476),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',477),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',481),
]
