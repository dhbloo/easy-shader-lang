
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICS GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE LANGRBRACKET LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RANGRBRACKET RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT TYPE U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : IDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT generics_type_list_opt ID LBRACE member_decl_nest RBRACEinterface_decl : INTERFACE generics_type_list_opt ID LBRACE interface_member_decl_nest RBRACEgenerics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl SEMICOLON interface_member_decl_nest\n                                  | emptymember_decl : member_declarator SEMICOLON\n                   | function_definterface_member_decl : member_declarator\n                             | function_declmember_declarator : ID type_spec_colon_optfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKETgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : ID DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptyio_expr : in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,80,],[-159,0,-1,-159,-159,-4,-2,-3,-5,-6,-7,-8,-21,-82,]),'LET':([0,3,4,21,22,23,24,25,26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,110,184,223,224,252,253,272,273,274,283,284,288,],[13,13,13,-5,-6,-7,-8,-21,13,13,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,13,-99,13,13,-159,-93,-88,13,-90,-89,13,-94,]),'CONST':([0,3,4,21,22,23,24,25,26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,110,184,223,224,252,253,272,273,274,283,284,288,],[14,14,14,-5,-6,-7,-8,-21,14,14,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,14,-99,14,14,-159,-93,-88,14,-90,-89,14,-94,]),'FUNC':([0,3,4,21,22,23,24,25,80,155,162,209,212,248,251,],[15,15,15,-5,-6,-7,-8,-21,-82,15,15,15,-55,-54,15,]),'TYPE':([0,3,4,21,22,23,24,25,80,],[16,16,16,-5,-6,-7,-8,-21,-82,]),'STRUCT':([0,3,4,21,22,23,24,25,80,],[17,17,17,-5,-6,-7,-8,-21,-82,]),'INTERFACE':([0,3,4,21,22,23,24,25,80,],[18,18,18,-5,-6,-7,-8,-21,-82,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,58,59,60,66,68,71,72,73,80,82,83,84,105,106,107,108,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,154,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,199,201,202,207,211,219,221,222,223,224,225,229,230,240,245,246,250,252,253,256,260,261,265,267,269,272,273,274,276,281,283,284,288,289,],[21,22,23,24,-9,-10,-11,-159,-159,-159,-159,-87,-74,-75,-76,-77,-78,-79,82,83,84,-86,-91,-92,105,106,-159,-100,-101,-102,-13,-15,-19,-16,-20,-82,-80,-81,-85,-97,-98,184,-87,-159,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-159,-18,-40,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-99,-159,-95,-96,-44,-14,-17,-159,248,251,-56,-57,-159,-159,254,-142,-141,-159,-58,-46,-47,-159,-93,-143,-144,-145,-41,-59,-63,-88,-159,-90,-148,-62,-89,-159,-94,-156,]),'LBRACE':([9,26,38,40,41,42,43,44,45,51,52,73,76,79,80,82,83,84,105,106,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,184,199,213,223,224,240,252,253,265,267,269,272,273,274,281,283,284,288,],[26,26,26,-74,-75,-76,-77,-78,-79,-91,-92,-20,155,162,-82,-80,-81,-85,-97,-98,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-40,-99,-44,26,26,26,-159,-159,-93,-41,-59,-63,-88,26,-90,-62,-89,26,-94,]),'ID':([13,14,15,16,17,18,25,26,32,33,34,35,36,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,67,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,153,155,157,160,162,164,184,186,187,188,190,191,193,196,197,200,209,212,214,223,224,226,231,234,242,248,251,252,253,254,258,263,268,272,273,274,283,284,288,],[28,28,30,31,-159,-159,-21,-159,76,-48,-49,78,79,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,124,-123,-124,28,152,152,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,152,-159,206,207,78,152,207,-127,-99,-159,-95,-96,-159,152,229,-127,-159,152,207,-55,-67,-159,-159,-159,-159,-127,206,-54,207,-159,-93,-159,152,-159,152,-88,-159,-90,-89,-159,-94,]),'LANGRBRACKET':([17,18,26,30,38,39,40,41,42,43,44,45,51,52,55,58,59,60,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,133,134,150,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,190,191,196,197,200,223,224,226,229,230,231,234,252,253,254,256,258,260,261,263,268,272,273,274,276,283,284,288,289,],[35,35,-159,35,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-100,-101,-102,-125,-126,35,-123,-124,35,35,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,191,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,35,200,-157,-158,-159,-127,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-99,-159,-95,-96,-159,35,-127,-159,35,-159,-159,-159,-142,-141,-159,-127,-159,-93,-159,-143,35,-144,-145,-159,35,-88,-159,-90,-148,-89,-159,-94,-156,]),'RBRACE':([25,26,37,38,39,40,41,42,43,44,45,51,52,80,81,82,83,84,105,106,155,162,184,208,209,210,212,218,220,247,248,251,252,253,271,272,274,283,288,],[-21,-159,80,-159,-84,-74,-75,-76,-77,-78,-79,-91,-92,-82,-83,-80,-81,-85,-97,-98,-159,-159,-99,246,-159,-51,-55,250,-53,-50,-54,-159,-159,-93,-52,-88,-90,-89,-94,]),'INT':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,198,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,119,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,237,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'HEXADECIMAL':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,120,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'FLOAT':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,121,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'DOUBLE':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,122,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'STRING':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,280,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,123,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,287,-89,-159,-94,]),'LPAREN':([26,30,33,34,38,39,40,41,42,43,44,45,49,51,52,55,56,57,58,59,60,61,62,63,64,65,70,74,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,152,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,186,187,188,189,190,191,192,196,197,199,200,214,223,224,226,229,230,231,234,240,252,253,254,256,258,260,261,263,265,266,267,268,269,272,273,274,276,277,281,283,284,288,289,],[-159,-159,-48,-49,-159,-127,-74,-75,-76,-77,-78,-79,85,-91,-92,-159,109,110,-100,-101,-102,-125,-126,125,-123,-124,-159,153,-159,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-40,-159,197,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-159,-40,-127,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-99,-159,-95,-96,226,-159,-159,-150,-49,-159,-44,-159,-67,-159,-159,-159,-142,-141,-159,-127,-159,-159,-93,-159,-143,-159,-144,-145,-159,-41,280,-59,-159,-63,-88,-159,-90,-148,-149,-62,-89,-159,-94,-156,]),'IN':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,133,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'OUT':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,196,197,223,224,226,231,234,252,253,254,263,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,134,-123,-124,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,-159,-159,-127,-99,-159,-95,-96,-159,-127,-159,-159,-159,-159,-159,-127,-159,-93,-159,-159,-88,-159,-90,-89,-159,-94,]),'VOID':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,135,-123,-124,135,135,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,135,-159,-127,-99,-159,-95,-96,-159,135,-127,-159,135,-159,-159,-159,-159,-127,-159,-93,-159,135,-159,135,-88,-159,-90,-89,-159,-94,]),'BOOL':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,136,-123,-124,136,136,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,136,-159,-127,-99,-159,-95,-96,-159,136,-127,-159,136,-159,-159,-159,-159,-127,-159,-93,-159,136,-159,136,-88,-159,-90,-89,-159,-94,]),'I8':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,137,-123,-124,137,137,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,137,-159,-127,-99,-159,-95,-96,-159,137,-127,-159,137,-159,-159,-159,-159,-127,-159,-93,-159,137,-159,137,-88,-159,-90,-89,-159,-94,]),'U8':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,138,-123,-124,138,138,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,138,-159,-127,-99,-159,-95,-96,-159,138,-127,-159,138,-159,-159,-159,-159,-127,-159,-93,-159,138,-159,138,-88,-159,-90,-89,-159,-94,]),'I16':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,139,-123,-124,139,139,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,139,-159,-127,-99,-159,-95,-96,-159,139,-127,-159,139,-159,-159,-159,-159,-127,-159,-93,-159,139,-159,139,-88,-159,-90,-89,-159,-94,]),'U16':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,140,-123,-124,140,140,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,140,-159,-127,-99,-159,-95,-96,-159,140,-127,-159,140,-159,-159,-159,-159,-127,-159,-93,-159,140,-159,140,-88,-159,-90,-89,-159,-94,]),'I32':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,141,-123,-124,141,141,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,141,-159,-127,-99,-159,-95,-96,-159,141,-127,-159,141,-159,-159,-159,-159,-127,-159,-93,-159,141,-159,141,-88,-159,-90,-89,-159,-94,]),'U32':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,142,-123,-124,142,142,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,142,-159,-127,-99,-159,-95,-96,-159,142,-127,-159,142,-159,-159,-159,-159,-127,-159,-93,-159,142,-159,142,-88,-159,-90,-89,-159,-94,]),'I64':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,143,-123,-124,143,143,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,143,-159,-127,-99,-159,-95,-96,-159,143,-127,-159,143,-159,-159,-159,-159,-127,-159,-93,-159,143,-159,143,-88,-159,-90,-89,-159,-94,]),'U64':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,144,-123,-124,144,144,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,144,-159,-127,-99,-159,-95,-96,-159,144,-127,-159,144,-159,-159,-159,-159,-127,-159,-93,-159,144,-159,144,-88,-159,-90,-89,-159,-94,]),'F16':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,145,-123,-124,145,145,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,145,-159,-127,-99,-159,-95,-96,-159,145,-127,-159,145,-159,-159,-159,-159,-127,-159,-93,-159,145,-159,145,-88,-159,-90,-89,-159,-94,]),'F32':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,146,-123,-124,146,146,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,146,-159,-127,-99,-159,-95,-96,-159,146,-127,-159,146,-159,-159,-159,-159,-127,-159,-93,-159,146,-159,146,-88,-159,-90,-89,-159,-94,]),'F64':([26,38,39,40,41,42,43,44,45,51,52,55,61,62,63,64,65,70,75,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,109,110,125,150,164,184,186,187,188,190,191,196,197,200,223,224,226,231,234,252,253,254,258,263,268,272,273,274,283,284,288,],[-159,-159,-127,-74,-75,-76,-77,-78,-79,-91,-92,-159,-125,-126,147,-123,-124,147,147,-82,-80,-81,-85,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-159,-97,-98,-127,-159,-159,147,-159,-127,-99,-159,-95,-96,-159,147,-127,-159,147,-159,-159,-159,-159,-127,-159,-93,-159,147,-159,147,-88,-159,-90,-89,-159,-94,]),'IF':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[49,49,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,49,49,-159,-93,-88,49,-90,-89,49,-94,]),'BREAK':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[53,53,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,53,53,-159,-93,-88,53,-90,-89,53,-94,]),'CONTINUE':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[54,54,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,54,54,-159,-93,-88,54,-90,-89,54,-94,]),'RETURN':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[55,55,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,55,55,-159,-93,-88,55,-90,-89,55,-94,]),'WHILE':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[56,56,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,56,56,-159,-93,-88,56,-90,-89,56,-94,]),'FOR':([26,38,40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,223,224,252,253,272,273,274,283,284,288,],[57,57,-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,57,57,-159,-93,-88,57,-90,-89,57,-94,]),'NOT':([26,38,40,41,42,43,44,45,51,52,55,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,125,150,184,186,187,188,190,197,223,224,226,231,252,253,254,263,272,273,274,283,284,288,],[64,64,-74,-75,-76,-77,-78,-79,-91,-92,64,-82,-80,-81,-85,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-97,-98,64,64,64,64,-99,64,-95,-96,64,64,64,64,64,64,-159,-93,64,64,-88,64,-90,-89,64,-94,]),'LOGICAL_NOT':([26,38,40,41,42,43,44,45,51,52,55,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,125,150,184,186,187,188,190,197,223,224,226,231,252,253,254,263,272,273,274,283,284,288,],[65,65,-74,-75,-76,-77,-78,-79,-91,-92,65,-82,-80,-81,-85,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-97,-98,65,65,65,65,-99,65,-95,-96,65,65,65,65,65,65,-159,-93,65,65,-88,65,-90,-89,65,-94,]),'PLUS':([26,38,40,41,42,43,44,45,50,51,52,55,58,59,60,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,150,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,194,197,202,223,224,226,227,229,230,231,235,252,253,254,256,260,261,263,272,273,274,275,276,279,283,284,288,289,],[61,61,-74,-75,-76,-77,-78,-79,87,-91,-92,61,-100,-101,-102,-82,-80,-81,-85,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-97,-98,61,61,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,61,61,87,87,-104,-105,-106,-107,87,87,87,-111,87,87,87,87,87,87,87,87,87,87,-99,87,61,-95,-96,61,87,61,87,61,61,61,87,-142,-141,61,87,-159,-93,61,-143,87,-145,61,-88,61,-90,87,-148,87,-89,61,-94,-156,]),'MINUS':([26,38,40,41,42,43,44,45,50,51,52,55,58,59,60,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,150,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,190,194,197,202,223,224,226,227,229,230,231,235,252,253,254,256,260,261,263,272,273,274,275,276,279,283,284,288,289,],[62,62,-74,-75,-76,-77,-78,-79,88,-91,-92,62,-100,-101,-102,-82,-80,-81,-85,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-97,-98,62,62,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,62,62,88,88,-104,-105,-106,-107,88,88,88,-111,88,88,88,88,88,88,88,88,88,88,-99,88,62,-95,-96,62,88,62,88,62,62,62,88,-142,-141,62,88,-159,-93,62,-143,88,-145,62,-88,62,-90,88,-148,88,-89,62,-94,-156,]),'COMMA':([27,29,58,59,60,71,77,78,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,159,161,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,199,202,204,206,215,216,217,228,229,230,235,240,244,256,260,261,265,267,269,270,276,278,279,281,289,],[67,67,-100,-101,-102,-19,157,-159,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,67,-18,-40,-70,-72,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-44,-17,242,-159,157,-71,-73,258,-142,-141,263,-159,-66,-143,-144,-145,-41,-59,-63,242,-148,258,263,-62,-156,]),'COLON':([28,78,206,207,],[70,160,70,70,]),'ASSIGN':([28,31,50,58,59,60,69,71,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,199,202,227,229,230,235,240,256,260,261,265,267,269,275,276,279,281,289,],[-159,75,86,-100,-101,-102,150,-19,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-18,-40,86,86,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,86,86,-44,86,86,-142,-141,86,-159,-143,86,-145,-41,-59,-63,86,-148,86,-62,-156,]),'ELSE':([40,41,42,43,44,45,51,52,80,82,83,84,105,106,184,252,253,272,274,283,288,],[-74,-75,-76,-77,-78,-79,-91,-92,-82,-80,-81,-85,-97,-98,-99,273,-93,-88,-90,-89,-94,]),'MUL':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[89,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,89,89,89,89,-106,-107,89,89,89,-111,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-142,-141,89,-143,89,-145,89,-148,89,-156,]),'DIV':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[90,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,90,90,90,90,-106,-107,90,90,90,-111,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-142,-141,90,-143,90,-145,90,-148,90,-156,]),'AND':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[91,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,91,91,-104,-105,-106,-107,-108,91,91,-111,-112,-113,91,91,-116,-117,-118,-119,-120,-121,91,91,91,91,-142,-141,91,-143,91,-145,91,-148,91,-156,]),'OR':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[92,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,92,92,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,92,92,-116,-117,-118,-119,-120,-121,92,92,92,92,-142,-141,92,-143,92,-145,92,-148,92,-156,]),'XOR':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[93,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,93,93,-104,-105,-106,-107,-108,93,-110,-111,-112,-113,93,93,-116,-117,-118,-119,-120,-121,93,93,93,93,-142,-141,93,-143,93,-145,93,-148,93,-156,]),'MOD':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[94,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,94,94,94,94,-106,-107,94,94,94,-111,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-142,-141,94,-143,94,-145,94,-148,94,-156,]),'LSHIFT':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[95,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,95,95,-104,-105,-106,-107,95,95,95,-111,-112,-113,95,95,95,95,95,95,95,95,95,95,95,95,-142,-141,95,-143,95,-145,95,-148,95,-156,]),'RSHIFT':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[96,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,96,96,-104,-105,-106,-107,96,96,96,-111,-112,-113,96,96,96,96,96,96,96,96,96,96,96,96,-142,-141,96,-143,96,-145,96,-148,96,-156,]),'LOGICAL_OR':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[97,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,97,97,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,97,97,97,97,-142,-141,97,-143,97,-145,97,-148,97,-156,]),'LOGICAL_AND':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[98,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,98,98,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,98,-115,-116,-117,-118,-119,-120,-121,98,98,98,98,-142,-141,98,-143,98,-145,98,-148,98,-156,]),'NOT_EQUAL':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[99,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,99,99,-104,-105,-106,-107,99,99,99,-111,-112,-113,99,99,-116,-117,-118,-119,-120,-121,99,99,99,99,-142,-141,99,-143,99,-145,99,-148,99,-156,]),'EQUAL':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[100,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,100,100,-104,-105,-106,-107,100,100,100,-111,-112,-113,100,100,-116,-117,-118,-119,-120,-121,100,100,100,100,-142,-141,100,-143,100,-145,100,-148,100,-156,]),'LESS_EQUAL':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[101,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,101,101,-104,-105,-106,-107,101,101,101,-111,-112,-113,101,101,101,101,-118,-119,-120,-121,101,101,101,101,-142,-141,101,-143,101,-145,101,-148,101,-156,]),'LESS':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[102,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,102,102,-104,-105,-106,-107,102,102,102,-111,-112,-113,102,102,102,102,-118,-119,-120,-121,102,102,102,102,-142,-141,102,-143,102,-145,102,-148,102,-156,]),'GREATER_EQUAL':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[103,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,103,103,-104,-105,-106,-107,103,103,103,-111,-112,-113,103,103,103,103,-118,-119,-120,-121,103,103,103,103,-142,-141,103,-143,103,-145,103,-148,103,-156,]),'GREATER':([50,58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,202,227,229,230,235,256,260,261,275,276,279,289,],[104,-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,104,104,-104,-105,-106,-107,104,104,104,-111,-112,-113,104,104,104,104,-118,-119,-120,-121,104,104,104,104,-142,-141,104,-143,104,-145,104,-148,104,-156,]),'RPAREN':([58,59,60,71,111,112,113,114,115,116,117,118,119,120,121,122,123,124,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,153,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,194,195,197,199,203,204,205,206,226,229,230,232,233,234,235,240,241,243,244,255,256,260,261,262,264,265,267,269,270,275,276,279,281,282,286,287,289,],[-100,-101,-102,-19,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-18,-40,-159,223,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,224,230,231,-159,-44,240,-159,-61,-159,-159,-142,-141,261,-146,-147,-159,-159,-60,-65,-66,276,-143,-144,-145,-153,-155,-41,-59,-63,-159,284,-148,-159,-62,-64,-154,289,-156,]),'LBRACKET':([58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,154,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,195,199,228,229,230,239,240,256,260,261,265,267,269,276,278,281,289,],[-100,-101,-102,190,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-40,198,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,198,-40,198,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,198,-44,198,-142,-141,198,-159,-143,-144,-145,-41,-59,-63,-148,198,198,-156,]),'RBRACKET':([58,59,60,111,112,113,114,115,116,117,118,119,120,121,122,123,124,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,198,227,229,230,236,237,238,256,260,261,276,289,],[-100,-101,-102,-122,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-103,-104,-105,-106,-107,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-159,256,-142,-141,265,-42,-43,-143,-144,-145,-148,-156,]),'RANGRBRACKET':([77,78,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,152,156,158,159,161,199,215,216,217,228,239,240,249,257,259,265,267,269,278,281,285,],[-159,-159,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,-40,214,-69,-70,-72,-44,-159,-71,-73,-159,266,-159,-68,277,-152,-41,-59,-63,-159,-62,-151,]),'DOT':([124,],[193,]),'REF':([124,126,128,129,130,131,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,152,154,195,199,228,239,240,265,267,269,278,281,],[-40,199,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-45,199,-40,199,199,-44,199,199,-159,-41,-59,-63,199,199,]),'ASSIGNTYPE':([240,],[268,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,155,209,],[4,4,4,212,212,]),'empty':([0,3,4,17,18,26,27,28,29,30,38,55,63,70,75,77,78,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,111,125,149,150,153,155,162,186,190,191,197,198,200,204,206,207,209,215,223,224,226,228,231,235,240,251,252,254,258,263,268,270,273,278,279,284,],[5,5,5,34,34,39,68,71,68,34,39,108,34,34,34,158,161,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,108,192,196,68,164,205,210,220,108,164,34,234,238,34,243,71,71,210,158,108,108,234,259,164,264,269,220,274,164,34,164,34,243,108,259,264,108,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,38,110,223,224,273,284,],[7,7,7,46,46,46,46,46,46,46,]),'constant_decl':([0,3,4,26,38,110,223,224,273,284,],[8,8,8,47,47,47,47,47,47,47,]),'function_decl':([0,3,4,155,162,209,251,],[9,9,9,213,222,213,222,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,38,213,223,224,273,284,],[25,41,41,25,41,41,41,41,]),'declarator':([13,14,67,],[27,29,149,]),'generics_type_list_opt':([17,18,30,63,70,75,125,191,200,258,268,],[32,36,74,74,74,74,74,74,74,74,74,]),'generics_type_list':([17,18,30,63,70,75,125,191,200,258,268,],[33,33,33,33,33,33,33,33,33,33,33,]),'statement_nest':([26,38,],[37,81,]),'statement':([26,38,223,224,273,284,],[38,38,252,253,283,288,]),'decl_statement':([26,38,110,223,224,273,284,],[40,40,188,40,40,40,40,]),'expression_statement':([26,38,110,223,224,273,284,],[42,42,187,42,42,42,42,]),'if_statement':([26,38,223,224,273,284,],[43,43,43,43,43,43,]),'iteration_statement':([26,38,223,224,273,284,],[44,44,44,44,44,44,]),'jump_statement':([26,38,223,224,273,284,],[45,45,45,45,45,45,]),'expression_opt':([26,38,55,110,186,223,224,273,284,],[48,48,107,48,225,48,48,48,48,]),'expression':([26,38,55,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,125,150,186,190,197,223,224,226,231,254,263,273,284,],[50,50,50,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,50,194,202,50,227,235,50,50,235,260,275,279,50,50,]),'while_clause':([26,38,223,224,273,284,],[51,51,51,51,51,51,]),'for_clause':([26,38,223,224,273,284,],[52,52,52,52,52,52,]),'assign_expr':([26,38,55,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,125,150,186,190,197,223,224,226,231,254,263,273,284,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'binary_expr':([26,38,55,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,125,150,186,190,197,223,224,226,231,254,263,273,284,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unary_expr':([26,38,55,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,125,150,186,190,197,223,224,226,231,254,263,273,284,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'unary_operation_opt':([26,38,55,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,109,110,125,150,186,190,197,223,224,226,231,254,263,273,284,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'declarator_nest':([27,29,149,],[66,72,201,]),'type_spec_colon_opt':([28,206,207,],[69,244,245,]),'function_sign':([30,63,70,75,125,191,200,258,268,],[73,148,148,148,148,148,148,148,148,]),'generics_type':([35,157,],[77,215,]),'primary_expr':([63,],[111,]),'operand':([63,],[112,]),'call_expr':([63,],[113,]),'index_expr':([63,],[114,]),'cast_expr':([63,],[115,]),'new_expr':([63,],[116,]),'member_expr':([63,],[117,]),'io_expr':([63,],[118,]),'type_spec':([63,70,75,125,191,200,258,268,],[126,151,154,195,228,239,278,281,]),'in_out':([63,],[127,]),'simple_type':([63,70,75,125,191,200,258,268,],[128,128,128,128,128,128,128,128,]),'complex_type':([63,70,75,125,160,191,200,258,268,],[129,129,129,129,217,129,129,129,129,]),'array_type':([63,70,75,125,191,200,258,268,],[130,130,130,130,130,130,130,130,]),'reference_type':([63,70,75,125,191,200,258,268,],[131,131,131,131,131,131,131,131,]),'function_type':([63,70,75,125,191,200,258,268,],[132,132,132,132,132,132,132,132,]),'generics_type_comma_nest':([77,215,],[156,249,]),'generics_type_range_colon_opt':([78,],[159,]),'for_init_statement':([110,],[186,]),'generics_specialization_list_opt':([111,],[189,]),'parameter_decl_list_opt':([153,],[203,]),'parameter_decl':([153,242,],[204,270,]),'member_decl_nest':([155,209,],[208,247,]),'member_decl':([155,209,],[209,209,]),'member_declarator':([155,162,209,251,],[211,221,211,221,]),'generics_type_range':([160,],[216,]),'interface_member_decl_nest':([162,251,],[218,271,]),'interface_member_decl':([162,251,],[219,219,]),'parameter_list_opt':([197,226,],[232,255,]),'parameter_list':([197,226,],[233,233,]),'int_literal_opt':([198,],[236,]),'parameter_decl_comma_nest':([204,270,],[241,282,]),'type_spec_comma_nest':([228,278,],[257,285,]),'expression_comma_nest':([235,279,],[262,286,]),'type_spec_assigntype_opt':([240,],[267,]),'statement_else_opt':([252,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',11),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',18),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',19),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',20),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',26),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',34),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',35),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',42),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',48),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',54),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',55),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',60),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',65),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',71),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',72),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_functio_decl','parser.py',76),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',82),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',90),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',91),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',92),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',107),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',108),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',109),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',110),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',111),
  ('complex_type -> ID','complex_type',1,'p_complex_type','parser.py',117),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',122),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',127),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',128),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',134),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',139),
  ('struct_decl -> STRUCT generics_type_list_opt ID LBRACE member_decl_nest RBRACE','struct_decl',6,'p_struct_decl','parser.py',144),
  ('interface_decl -> INTERFACE generics_type_list_opt ID LBRACE interface_member_decl_nest RBRACE','interface_decl',6,'p_interface_decl','parser.py',151),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',157),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',158),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',164),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',165),
  ('interface_member_decl_nest -> interface_member_decl SEMICOLON interface_member_decl_nest','interface_member_decl_nest',3,'p_interface_member_decl_nest','parser.py',171),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',172),
  ('member_decl -> member_declarator SEMICOLON','member_decl',2,'p_member_decl','parser.py',178),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',179),
  ('interface_member_decl -> member_declarator','interface_member_decl',1,'p_interface_member_decl','parser.py',184),
  ('interface_member_decl -> function_decl','interface_member_decl',1,'p_interface_member_decl','parser.py',185),
  ('member_declarator -> ID type_spec_colon_opt','member_declarator',2,'p_member_declarator','parser.py',189),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',195),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',200),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',201),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',207),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',208),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',220),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',221),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',228),
  ('generics_type_list -> LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKET','generics_type_list',4,'p_generics_type_list','parser.py',237),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',242),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',243),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',249),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',254),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',255),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',261),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',270),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',271),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',272),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',273),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',274),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',275),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',280),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',281),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',286),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',291),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',292),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',298),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',302),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',303),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',308),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',312),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',313),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',319),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',320),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',324),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',328),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',332),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',333),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',337),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',338),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',339),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',347),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',348),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',349),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',353),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',358),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',359),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',360),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',361),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',362),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',363),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',364),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',365),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',366),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',367),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',368),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',369),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',370),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',371),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',372),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',373),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',374),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',375),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',380),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',385),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',386),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',387),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',388),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',389),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',393),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',394),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',395),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',396),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',397),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',398),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',399),
  ('operand -> INT','operand',1,'p_operand','parser.py',403),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',404),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',405),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',406),
  ('operand -> STRING','operand',1,'p_operand','parser.py',407),
  ('operand -> ID','operand',1,'p_operand','parser.py',408),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',409),
  ('member_expr -> ID DOT ID','member_expr',3,'p_member_expr','parser.py',413),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',417),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',421),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',425),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',429),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',430),
  ('call_expr -> primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPAREN','call_expr',5,'p_call_expr','parser.py',434),
  ('generics_specialization_list_opt -> LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',439),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',440),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',448),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',449),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',453),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',457),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',458),
  ('io_expr -> in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',462),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',465),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',466),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',470),
]
