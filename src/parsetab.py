
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LANGRBRACKET LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RANGRBRACKET RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC enter_func ID function_sign enter_func :function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : ID generics_specialization_list_optgeneric_type : IDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl SEMICOLON interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : member_declarator\n                             | function_decl\n                             | type_function_decltype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKETgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : ID DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptyio_expr : in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,77,],[-170,0,-1,-170,-170,-4,-2,-3,-5,-6,-7,-8,-22,-93,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,107,181,212,213,253,254,281,282,283,297,298,305,],[13,13,13,-5,-6,-7,-8,-22,13,13,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,13,-110,13,13,-170,-104,-99,13,-101,-100,13,-105,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,107,181,212,213,253,254,281,282,283,297,298,305,],[14,14,14,-5,-6,-7,-8,-22,14,14,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,14,-110,14,14,-170,-104,-99,14,-101,-100,14,-105,]),'FUNC':([0,3,4,21,22,23,24,25,77,202,211,235,237,238,239,276,280,304,],[15,15,15,-5,-6,-7,-8,-22,-93,242,242,242,-61,-62,-63,-64,242,-69,]),'TYPE':([0,3,4,21,22,23,24,25,77,],[16,16,16,-5,-6,-7,-8,-22,-93,]),'STRUCT':([0,3,4,21,22,23,24,25,77,],[17,17,17,-5,-6,-7,-8,-22,-93,]),'INTERFACE':([0,3,4,21,22,23,24,25,77,],[18,18,18,-5,-6,-7,-8,-22,-93,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,55,56,57,63,65,69,77,79,80,81,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,151,152,153,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,189,191,197,200,201,212,213,214,218,219,248,250,251,252,253,254,257,261,262,266,268,274,279,281,282,283,285,286,290,292,294,295,297,298,302,304,305,306,],[21,22,23,24,-9,-10,-11,-170,-170,-170,-170,-98,-85,-86,-87,-88,-89,-90,79,80,81,-97,-102,-103,102,103,-170,-111,-112,-113,-13,-15,-16,-93,-91,-92,-96,-108,-109,181,-98,-170,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-170,-43,-20,-12,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-110,-170,-106,-107,-161,-42,-47,-14,-17,-170,-170,255,-153,-152,280,-65,-66,-67,-170,-104,-154,-155,-156,-44,-170,-49,-53,-99,-170,-101,-159,-160,-70,-74,304,-68,-100,-170,-73,-69,-105,-167,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,48,49,72,73,74,76,77,79,80,81,102,103,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,152,154,156,159,181,189,191,197,203,204,212,213,240,241,243,253,254,266,268,281,282,283,286,290,292,295,297,298,302,305,],[26,26,-170,-54,26,-85,-86,-87,-88,-89,-90,-102,-103,-170,-55,-56,-170,-93,-91,-92,-96,-108,-109,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-43,-20,202,-52,211,-110,-161,-42,-47,-51,-170,26,26,26,26,-78,-170,-104,-44,-170,-99,26,-101,-160,-70,-74,-68,-100,26,-73,-105,]),'ID':([13,14,15,16,17,18,25,26,30,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,64,67,71,75,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,155,161,181,183,184,185,187,188,190,194,195,198,199,202,206,209,211,212,213,215,220,223,235,237,238,239,242,253,254,255,259,264,270,273,276,280,281,282,283,291,297,298,304,305,],[28,28,-21,31,32,33,-22,-170,70,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,121,-134,-135,28,151,151,158,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,151,-170,204,-138,-110,-170,-106,-107,-170,151,218,-138,-170,151,232,233,158,204,233,-170,-170,-170,-170,-138,233,-61,-62,-63,151,-170,-104,-170,151,-170,232,151,-64,233,-99,-170,-101,151,-100,-170,-69,-105,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,48,49,77,78,79,80,81,102,103,181,202,211,234,235,236,237,238,239,247,249,253,254,275,276,280,281,283,296,297,304,305,],[-22,-170,77,-170,-95,-85,-86,-87,-88,-89,-90,-102,-103,-93,-94,-91,-92,-96,-108,-109,-110,-170,-170,274,-170,-58,-61,-62,-63,279,-60,-170,-104,-57,-64,-170,-99,-101,-59,-100,-69,-105,]),'INT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,196,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,116,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,226,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'HEXADECIMAL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,117,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'FLOAT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,118,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'DOUBLE':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,119,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'STRING':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,289,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,120,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,301,-100,-170,-105,]),'LPAREN':([26,35,36,37,38,39,40,41,42,46,48,49,52,53,54,55,56,57,58,59,60,61,62,67,70,71,73,74,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,191,194,195,197,198,212,213,215,218,219,220,223,242,243,253,254,255,257,259,261,262,264,266,267,268,273,277,281,282,283,285,286,290,291,292,297,298,302,305,306,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,82,-102,-103,-170,106,107,-111,-112,-113,-136,-137,122,-134,-135,-170,-170,-170,-55,-56,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-43,-170,195,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,199,-170,-43,-138,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-110,-170,-106,-107,215,-170,-170,-161,-42,-56,-170,-47,-170,-170,-170,-170,-153,-152,-170,-138,-170,-78,-170,-104,-170,-154,-170,-155,-156,-170,-44,289,-170,-170,-170,-99,-170,-101,-159,-160,-70,-170,-74,-100,-170,-73,-105,-167,]),'IN':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,131,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'OUT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,194,195,212,213,215,220,223,253,254,255,264,281,282,283,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,132,-134,-135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,-170,-170,-138,-110,-170,-106,-107,-170,-138,-170,-170,-170,-170,-170,-138,-170,-104,-170,-170,-99,-170,-101,-100,-170,-105,]),'VOID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,133,-134,-135,133,133,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,133,-170,-138,-110,-170,-106,-107,-170,133,-138,-170,133,-170,-170,-170,-170,-138,133,-170,-104,-170,133,-170,133,-99,-170,-101,133,-100,-170,-105,]),'BOOL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,134,-134,-135,134,134,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,134,-170,-138,-110,-170,-106,-107,-170,134,-138,-170,134,-170,-170,-170,-170,-138,134,-170,-104,-170,134,-170,134,-99,-170,-101,134,-100,-170,-105,]),'I8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,135,-134,-135,135,135,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,135,-170,-138,-110,-170,-106,-107,-170,135,-138,-170,135,-170,-170,-170,-170,-138,135,-170,-104,-170,135,-170,135,-99,-170,-101,135,-100,-170,-105,]),'U8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,136,-134,-135,136,136,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,136,-170,-138,-110,-170,-106,-107,-170,136,-138,-170,136,-170,-170,-170,-170,-138,136,-170,-104,-170,136,-170,136,-99,-170,-101,136,-100,-170,-105,]),'I16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,137,-134,-135,137,137,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,137,-170,-138,-110,-170,-106,-107,-170,137,-138,-170,137,-170,-170,-170,-170,-138,137,-170,-104,-170,137,-170,137,-99,-170,-101,137,-100,-170,-105,]),'U16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,138,-134,-135,138,138,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,138,-170,-138,-110,-170,-106,-107,-170,138,-138,-170,138,-170,-170,-170,-170,-138,138,-170,-104,-170,138,-170,138,-99,-170,-101,138,-100,-170,-105,]),'I32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,139,-134,-135,139,139,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,139,-170,-138,-110,-170,-106,-107,-170,139,-138,-170,139,-170,-170,-170,-170,-138,139,-170,-104,-170,139,-170,139,-99,-170,-101,139,-100,-170,-105,]),'U32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,140,-134,-135,140,140,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,140,-170,-138,-110,-170,-106,-107,-170,140,-138,-170,140,-170,-170,-170,-170,-138,140,-170,-104,-170,140,-170,140,-99,-170,-101,140,-100,-170,-105,]),'I64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,141,-134,-135,141,141,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,141,-170,-138,-110,-170,-106,-107,-170,141,-138,-170,141,-170,-170,-170,-170,-138,141,-170,-104,-170,141,-170,141,-99,-170,-101,141,-100,-170,-105,]),'U64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,142,-134,-135,142,142,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,142,-170,-138,-110,-170,-106,-107,-170,142,-138,-170,142,-170,-170,-170,-170,-138,142,-170,-104,-170,142,-170,142,-99,-170,-101,142,-100,-170,-105,]),'F16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,143,-134,-135,143,143,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,143,-170,-138,-110,-170,-106,-107,-170,143,-138,-170,143,-170,-170,-170,-170,-138,143,-170,-104,-170,143,-170,143,-99,-170,-101,143,-100,-170,-105,]),'F32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,144,-134,-135,144,144,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,144,-170,-138,-110,-170,-106,-107,-170,144,-138,-170,144,-170,-170,-170,-170,-138,144,-170,-104,-170,144,-170,144,-99,-170,-101,144,-100,-170,-105,]),'F64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,71,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,122,149,161,181,183,184,185,187,188,194,195,198,212,213,215,220,223,242,253,254,255,259,264,273,281,282,283,291,297,298,305,],[-170,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-136,-137,145,-134,-135,145,145,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,145,-170,-138,-110,-170,-106,-107,-170,145,-138,-170,145,-170,-170,-170,-170,-138,145,-170,-104,-170,145,-170,145,-99,-170,-101,145,-100,-170,-105,]),'LANGRBRACKET':([26,32,33,35,36,37,38,39,40,41,42,48,49,52,55,56,57,58,59,60,61,62,67,70,71,76,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,187,188,189,191,194,195,197,198,204,212,213,215,218,219,220,223,242,253,254,255,257,259,261,262,264,266,268,273,277,281,282,283,285,286,290,291,292,297,298,302,305,306,],[-170,75,-54,-170,-138,-85,-86,-87,-88,-89,-90,-102,-103,-170,-111,-112,-113,-136,-137,75,-134,-135,75,75,75,75,-93,-91,-92,-96,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,-108,-109,-138,-170,-170,188,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,188,75,198,-23,-24,-25,-26,-27,-28,-168,-169,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-170,188,-138,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-110,-170,-106,-107,-170,75,-161,-42,-138,-170,-47,75,188,-170,-170,-170,-153,-152,-170,-138,75,-170,-104,-170,-154,75,-155,-156,-170,-44,-170,75,75,-99,-170,-101,-159,-160,-70,75,-74,-100,-170,-73,-105,-167,]),'IF':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[46,46,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,46,46,-170,-104,-99,46,-101,-100,46,-105,]),'BREAK':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[50,50,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,50,50,-170,-104,-99,50,-101,-100,50,-105,]),'CONTINUE':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[51,51,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,51,51,-170,-104,-99,51,-101,-100,51,-105,]),'RETURN':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[52,52,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,52,52,-170,-104,-99,52,-101,-100,52,-105,]),'WHILE':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[53,53,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,53,53,-170,-104,-99,53,-101,-100,53,-105,]),'FOR':([26,35,37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,212,213,253,254,281,282,283,297,298,305,],[54,54,-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,54,54,-170,-104,-99,54,-101,-100,54,-105,]),'NOT':([26,35,37,38,39,40,41,42,48,49,52,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,122,149,181,183,184,185,187,195,212,213,215,220,253,254,255,264,281,282,283,297,298,305,],[61,61,-85,-86,-87,-88,-89,-90,-102,-103,61,-93,-91,-92,-96,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-108,-109,61,61,61,61,-110,61,-106,-107,61,61,61,61,61,61,-170,-104,61,61,-99,61,-101,-100,61,-105,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,48,49,52,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,122,149,181,183,184,185,187,195,212,213,215,220,253,254,255,264,281,282,283,297,298,305,],[62,62,-85,-86,-87,-88,-89,-90,-102,-103,62,-93,-91,-92,-96,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-108,-109,62,62,62,62,-110,62,-106,-107,62,62,62,62,62,62,-170,-104,62,62,-99,62,-101,-100,62,-105,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,192,195,201,212,213,215,216,218,219,220,224,253,254,255,257,261,262,264,281,282,283,284,285,288,297,298,305,306,],[58,58,-85,-86,-87,-88,-89,-90,84,-102,-103,58,-111,-112,-113,-93,-91,-92,-96,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-108,-109,58,58,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,58,58,84,84,-115,-116,-117,-118,84,84,84,-122,84,84,84,84,84,84,84,84,84,84,-110,84,58,-106,-107,58,84,58,84,58,58,58,84,-153,-152,58,84,-170,-104,58,-154,84,-156,58,-99,58,-101,84,-159,84,-100,58,-105,-167,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,77,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,192,195,201,212,213,215,216,218,219,220,224,253,254,255,257,261,262,264,281,282,283,284,285,288,297,298,305,306,],[59,59,-85,-86,-87,-88,-89,-90,85,-102,-103,59,-111,-112,-113,-93,-91,-92,-96,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-108,-109,59,59,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,59,59,85,85,-115,-116,-117,-118,85,85,85,-122,85,85,85,85,85,85,85,85,85,85,-110,85,59,-106,-107,59,85,59,85,59,59,59,85,-153,-152,59,85,-170,-104,59,-154,85,-156,59,-99,59,-101,85,-159,85,-100,59,-105,-167,]),'COMMA':([27,29,55,56,57,68,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,148,150,151,157,158,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,189,191,197,201,204,208,210,217,218,219,224,230,232,244,245,246,257,261,262,266,268,272,285,286,287,288,290,292,293,302,306,],[64,64,-111,-112,-113,-19,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,64,-18,-43,206,-170,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-161,-42,-47,-17,-170,-81,-83,259,-153,-152,264,270,-170,206,-82,-84,-154,-155,-156,-44,-170,-77,-159,-160,259,264,-70,-74,270,-73,-167,]),'COLON':([28,32,72,73,74,158,232,233,243,],[67,-170,155,-55,-56,209,67,273,-78,]),'ASSIGN':([28,31,47,55,56,57,66,68,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,189,191,192,197,201,216,218,219,224,257,261,262,266,268,284,285,286,288,290,292,302,306,],[-170,71,83,-111,-112,-113,149,-19,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-18,-43,83,83,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,83,-161,-42,83,-47,83,83,-153,-152,83,-154,83,-156,-44,-170,83,-159,-160,83,-70,-74,-73,-167,]),'ELSE':([37,38,39,40,41,42,48,49,77,79,80,81,102,103,181,253,254,281,283,297,305,],[-85,-86,-87,-88,-89,-90,-102,-103,-93,-91,-92,-96,-108,-109,-110,282,-104,-99,-101,-100,-105,]),'MUL':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[86,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,86,86,86,86,-117,-118,86,86,86,-122,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-153,-152,86,-154,86,-156,86,-159,86,-167,]),'DIV':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[87,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,87,87,87,87,-117,-118,87,87,87,-122,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-153,-152,87,-154,87,-156,87,-159,87,-167,]),'AND':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[88,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,88,88,-115,-116,-117,-118,-119,88,88,-122,-123,-124,88,88,-127,-128,-129,-130,-131,-132,88,88,88,88,-153,-152,88,-154,88,-156,88,-159,88,-167,]),'OR':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[89,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,89,89,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,89,89,-127,-128,-129,-130,-131,-132,89,89,89,89,-153,-152,89,-154,89,-156,89,-159,89,-167,]),'XOR':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[90,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,90,90,-115,-116,-117,-118,-119,90,-121,-122,-123,-124,90,90,-127,-128,-129,-130,-131,-132,90,90,90,90,-153,-152,90,-154,90,-156,90,-159,90,-167,]),'MOD':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[91,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,91,91,91,91,-117,-118,91,91,91,-122,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-153,-152,91,-154,91,-156,91,-159,91,-167,]),'LSHIFT':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[92,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,92,92,-115,-116,-117,-118,92,92,92,-122,-123,-124,92,92,92,92,92,92,92,92,92,92,92,92,-153,-152,92,-154,92,-156,92,-159,92,-167,]),'RSHIFT':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[93,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,93,93,-115,-116,-117,-118,93,93,93,-122,-123,-124,93,93,93,93,93,93,93,93,93,93,93,93,-153,-152,93,-154,93,-156,93,-159,93,-167,]),'LOGICAL_OR':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[94,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,94,94,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,94,94,94,94,-153,-152,94,-154,94,-156,94,-159,94,-167,]),'LOGICAL_AND':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[95,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,95,95,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,95,-126,-127,-128,-129,-130,-131,-132,95,95,95,95,-153,-152,95,-154,95,-156,95,-159,95,-167,]),'NOT_EQUAL':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[96,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,96,96,-115,-116,-117,-118,96,96,96,-122,-123,-124,96,96,-127,-128,-129,-130,-131,-132,96,96,96,96,-153,-152,96,-154,96,-156,96,-159,96,-167,]),'EQUAL':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[97,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,97,97,-115,-116,-117,-118,97,97,97,-122,-123,-124,97,97,-127,-128,-129,-130,-131,-132,97,97,97,97,-153,-152,97,-154,97,-156,97,-159,97,-167,]),'LESS_EQUAL':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[98,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,98,98,-115,-116,-117,-118,98,98,98,-122,-123,-124,98,98,98,98,-129,-130,-131,-132,98,98,98,98,-153,-152,98,-154,98,-156,98,-159,98,-167,]),'LESS':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[99,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,99,99,-115,-116,-117,-118,99,99,99,-122,-123,-124,99,99,99,99,-129,-130,-131,-132,99,99,99,99,-153,-152,99,-154,99,-156,99,-159,99,-167,]),'GREATER_EQUAL':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[100,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,100,100,-115,-116,-117,-118,100,100,100,-122,-123,-124,100,100,100,100,-129,-130,-131,-132,100,100,100,100,-153,-152,100,-154,100,-156,100,-159,100,-167,]),'GREATER':([47,55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,201,216,218,219,224,257,261,262,284,285,288,306,],[101,-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,101,101,-115,-116,-117,-118,101,101,101,-122,-123,-124,101,101,101,101,-129,-130,-131,-132,101,101,101,101,-153,-152,101,-154,101,-156,101,-159,101,-167,]),'RPAREN':([55,56,57,68,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,189,191,192,193,195,197,199,215,218,219,221,222,223,224,229,230,231,232,256,257,261,262,263,265,266,268,269,271,272,284,285,286,288,290,292,293,300,301,302,303,306,],[-111,-112,-113,-19,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-18,-43,212,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,213,-161,-42,219,220,-170,-47,-170,-170,-153,-152,262,-157,-158,-170,268,-170,-72,-170,285,-154,-155,-156,-164,-166,-44,-170,-71,-76,-77,298,-159,-160,-170,-70,-74,-170,-165,306,-73,-75,-167,]),'LBRACKET':([55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,153,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,189,191,193,197,217,218,219,228,257,261,262,266,268,277,285,286,287,290,292,294,302,306,],[-111,-112,-113,187,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-43,196,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,196,-43,196,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-161,-42,196,-47,196,-153,-152,196,-154,-155,-156,-44,-170,196,-159,-160,196,-70,-74,196,196,-167,]),'RBRACKET':([55,56,57,108,109,110,111,112,113,114,115,116,117,118,119,120,121,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,196,216,218,219,225,226,227,257,261,262,285,306,],[-111,-112,-113,-133,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-170,257,-153,-152,266,-45,-46,-154,-155,-156,-159,-167,]),'DOT':([121,],[190,]),'REF':([121,123,125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,150,151,153,189,191,193,197,217,228,266,268,277,286,287,290,292,294,302,],[-43,197,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,197,-43,197,-161,-42,197,-47,197,197,-44,-170,197,-160,197,-70,-74,197,197,]),'RANGRBRACKET':([125,126,127,128,129,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,151,157,158,189,191,197,204,205,207,208,210,217,228,244,245,246,258,260,266,268,278,286,287,290,292,299,302,],[-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-48,-43,-170,-170,-161,-42,-47,-170,243,-80,-81,-83,-170,267,-170,-82,-84,286,-163,-44,-170,-79,-160,-170,-70,-74,-162,-73,]),'ASSIGNTYPE':([268,],[291,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,202,235,],[4,4,4,238,238,]),'empty':([0,3,4,26,27,28,29,32,35,52,60,67,70,71,72,76,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,108,121,122,148,149,151,157,158,183,187,188,195,196,198,199,202,204,211,212,213,215,217,220,224,230,232,235,242,244,253,255,259,264,268,273,277,280,282,287,288,291,293,298,],[5,5,5,36,65,68,65,74,36,105,74,74,74,74,156,74,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,105,189,189,194,65,161,189,207,210,105,161,74,223,227,74,231,236,189,249,105,105,223,260,161,265,271,68,236,74,207,283,161,74,161,292,74,74,249,105,260,265,74,271,105,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,107,212,213,282,298,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,107,212,213,282,298,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,202,211,235,280,],[9,9,9,240,251,240,251,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,212,213,240,241,282,298,],[25,38,38,38,38,25,276,38,38,]),'declarator':([13,14,64,],[27,29,148,]),'enter_func':([15,242,],[30,30,]),'statement_nest':([26,35,],[34,78,]),'statement':([26,35,212,213,282,298,],[35,35,253,254,297,305,]),'decl_statement':([26,35,107,212,213,282,298,],[37,37,185,37,37,37,37,]),'expression_statement':([26,35,107,212,213,282,298,],[39,39,184,39,39,39,39,]),'if_statement':([26,35,212,213,282,298,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,212,213,282,298,],[41,41,41,41,41,41,]),'jump_statement':([26,35,212,213,282,298,],[42,42,42,42,42,42,]),'expression_opt':([26,35,52,107,183,212,213,282,298,],[45,45,104,45,214,45,45,45,45,]),'expression':([26,35,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,122,149,183,187,195,212,213,215,220,255,264,282,298,],[47,47,47,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,47,192,201,47,216,224,47,47,224,261,284,288,47,47,]),'while_clause':([26,35,212,213,282,298,],[48,48,48,48,48,48,]),'for_clause':([26,35,212,213,282,298,],[49,49,49,49,49,49,]),'assign_expr':([26,35,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,122,149,183,187,195,212,213,215,220,255,264,282,298,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'binary_expr':([26,35,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,122,149,183,187,195,212,213,215,220,255,264,282,298,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'unary_expr':([26,35,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,122,149,183,187,195,212,213,215,220,255,264,282,298,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_operation_opt':([26,35,52,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,106,107,122,149,183,187,195,212,213,215,220,255,264,282,298,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declarator_nest':([27,29,148,],[63,69,200,]),'type_spec_colon_opt':([28,232,],[66,272,]),'generics_type_list_opt':([32,60,67,70,71,76,122,188,198,242,259,273,277,291,],[72,147,147,147,147,159,147,147,147,147,147,147,147,147,]),'generics_type_list':([32,60,67,70,71,76,122,188,198,242,259,273,277,291,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'new_interface':([33,],[76,]),'primary_expr':([60,],[108,]),'operand':([60,],[109,]),'call_expr':([60,],[110,]),'index_expr':([60,],[111,]),'cast_expr':([60,],[112,]),'new_expr':([60,],[113,]),'member_expr':([60,],[114,]),'io_expr':([60,],[115,]),'type_spec':([60,67,71,122,188,198,242,259,273,291,],[123,150,153,193,217,228,277,287,294,302,]),'in_out':([60,],[124,]),'simple_type':([60,67,71,122,188,198,242,259,273,291,],[125,125,125,125,125,125,125,125,125,125,]),'complex_type':([60,67,71,122,155,188,198,209,242,259,273,291,],[126,126,126,126,203,126,126,246,126,126,126,126,]),'generic_type':([60,67,71,122,188,198,242,259,273,291,],[127,127,127,127,127,127,127,127,127,127,]),'array_type':([60,67,71,122,188,198,242,259,273,291,],[128,128,128,128,128,128,128,128,128,128,]),'reference_type':([60,67,71,122,188,198,242,259,273,291,],[129,129,129,129,129,129,129,129,129,129,]),'function_type':([60,67,71,122,188,198,242,259,273,291,],[130,130,130,130,130,130,130,130,130,130,]),'function_sign':([60,67,70,71,122,188,198,242,259,273,277,291,],[146,146,152,146,146,146,146,146,146,146,295,146,]),'complex_type_colon_opt':([72,],[154,]),'generics_type':([75,206,],[157,244,]),'for_init_statement':([107,],[183,]),'generics_specialization_list_opt':([108,121,151,204,],[186,191,191,191,]),'generics_type_comma_nest':([157,244,],[205,278,]),'generics_type_range_colon_opt':([158,],[208,]),'parameter_list_opt':([195,215,],[221,256,]),'parameter_list':([195,215,],[222,222,]),'int_literal_opt':([196,],[225,]),'parameter_decl_list_opt':([199,],[229,]),'parameter_decl':([199,270,],[230,293,]),'member_decl_nest':([202,235,],[234,275,]),'member_decl':([202,235,],[235,235,]),'member_declarator':([202,211,235,280,],[237,250,237,250,]),'type_function_def':([202,235,],[239,239,]),'type_function_decl':([202,211,235,280,],[241,252,241,252,]),'generics_type_range':([209,],[245,]),'interface_member_decl_nest':([211,280,],[247,296,]),'interface_member_decl':([211,280,],[248,248,]),'type_spec_comma_nest':([217,287,],[258,299,]),'expression_comma_nest':([224,288,],[263,300,]),'parameter_decl_comma_nest':([230,293,],[269,303,]),'statement_else_opt':([253,],[281,]),'type_spec_assigntype_opt':([268,],[290,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',11),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',18),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',19),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',20),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',26),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',37),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',38),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',44),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',50),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',56),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',57),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',62),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',67),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',73),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',74),
  ('function_decl -> FUNC enter_func ID function_sign','function_decl',4,'p_function_decl','parser.py',78),
  ('enter_func -> <empty>','enter_func',0,'p_enter_func','parser.py',83),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',88),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',96),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',97),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',98),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',99),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',100),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',101),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',108),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',109),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',110),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',111),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',112),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',113),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',114),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',115),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',116),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',117),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',118),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',119),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',120),
  ('complex_type -> ID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',126),
  ('generic_type -> ID','generic_type',1,'p_generic_type','parser.py',131),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',136),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',141),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',142),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',148),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',153),
  ('struct_decl -> STRUCT ID generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',7,'p_struct_decl','parser.py',158),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',164),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',169),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',170),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',178),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',184),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',189),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',190),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',196),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',197),
  ('interface_member_decl_nest -> interface_member_decl SEMICOLON interface_member_decl_nest','interface_member_decl_nest',3,'p_interface_member_decl_nest','parser.py',203),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',204),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',210),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',211),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',212),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',216),
  ('interface_member_decl -> member_declarator','interface_member_decl',1,'p_interface_member_decl','parser.py',222),
  ('interface_member_decl -> function_decl','interface_member_decl',1,'p_interface_member_decl','parser.py',223),
  ('interface_member_decl -> type_function_decl','interface_member_decl',1,'p_interface_member_decl','parser.py',224),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',230),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',234),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',240),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',245),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',246),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',252),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',253),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',265),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',266),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',273),
  ('generics_type_list -> LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKET','generics_type_list',4,'p_generics_type_list','parser.py',282),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',288),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',289),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',295),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',301),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',302),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',308),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',317),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',318),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',319),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',320),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',321),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',322),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',327),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',328),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',333),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',338),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',339),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',345),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',349),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',350),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',355),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',359),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',360),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',366),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',367),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',371),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',375),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',379),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',380),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',384),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',385),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',386),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',394),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',395),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',396),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',400),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',405),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',406),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',407),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',408),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',409),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',410),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',411),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',412),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',413),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',414),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',415),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',416),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',417),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',418),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',419),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',420),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',421),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',422),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',428),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',433),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',434),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',435),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',436),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',437),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',441),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',442),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',443),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',444),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',445),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',446),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',447),
  ('operand -> INT','operand',1,'p_operand','parser.py',451),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',452),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',453),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',454),
  ('operand -> STRING','operand',1,'p_operand','parser.py',455),
  ('operand -> ID','operand',1,'p_operand','parser.py',456),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',457),
  ('member_expr -> ID DOT ID','member_expr',3,'p_member_expr','parser.py',463),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',467),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',471),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',475),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',479),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',480),
  ('call_expr -> primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPAREN','call_expr',5,'p_call_expr','parser.py',484),
  ('generics_specialization_list_opt -> LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',489),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',490),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',498),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',499),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',503),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',507),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',508),
  ('io_expr -> in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',512),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',515),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',516),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',520),
]
