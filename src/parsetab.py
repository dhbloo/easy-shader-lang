
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GENERICMARK GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE TYPEALIASID U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | alias_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDalias_type : TYPEALIASIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_optparameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LESS generics_type generics_type_comma_nest GREATERgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_expr\n                  | primary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation primary_expr unary_operation : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUSprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | lambda_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : primary_expr DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LESS type_spec type_spec_comma_nest GREATER\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptylambda_expr : FUNC function_sign block_statementio_expr : in_out LESS type_spec GREATER LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,124,],[-174,0,-1,-174,-174,-4,-2,-3,-5,-6,-7,-8,-21,-94,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,156,202,237,239,270,271,297,298,299,312,313,317,],[13,13,13,-5,-6,-7,-8,-21,13,13,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,13,-111,13,13,-174,-105,-100,13,-102,-101,13,-106,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,156,202,237,239,270,271,297,298,299,312,313,317,],[14,14,14,-5,-6,-7,-8,-21,14,14,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,14,-111,14,14,-174,-105,-100,14,-102,-101,14,-106,]),'FUNC':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,236,237,239,243,262,265,270,271,272,285,287,288,289,294,295,297,298,299,310,312,313,314,317,319,],[15,15,15,-5,-6,-7,-8,-21,81,81,-86,-87,-88,-89,-90,-91,81,-103,-104,81,-138,-139,81,-136,-137,-94,-92,-93,-97,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-109,-110,81,81,81,81,81,81,81,-111,81,-107,-108,269,81,81,81,269,269,-174,-105,81,269,-63,-64,-65,-67,-68,-100,81,-102,-66,-101,81,81,-106,-70,]),'TYPE':([0,3,4,21,22,23,24,25,124,],[16,16,16,-5,-6,-7,-8,-21,-94,]),'STRUCT':([0,3,4,21,22,23,24,25,124,],[17,17,17,-5,-6,-7,-8,-21,-94,]),'INTERFACE':([0,3,4,21,22,23,24,25,124,],[18,18,18,-5,-6,-7,-8,-21,-94,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,112,114,118,119,124,126,127,128,151,152,153,154,156,163,166,169,171,172,174,177,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,213,224,231,232,237,238,239,240,241,246,251,252,257,267,268,270,271,277,279,281,292,297,298,299,305,308,311,312,313,315,316,317,320,],[21,22,23,24,-9,-10,-11,-174,-174,-174,-174,-99,-86,-87,-88,-89,-90,-91,126,127,128,-98,-103,-104,151,152,-174,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-13,-15,-16,-20,-94,-92,-93,-97,-109,-110,202,-99,-174,-135,-49,-42,-164,-43,-174,-12,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-111,-174,-107,-108,-155,-170,-14,-17,-174,-157,-174,272,-161,-156,-158,-46,-174,294,295,-174,-105,-163,-71,-75,-55,-100,-174,-102,-74,-51,-69,-101,-174,-171,319,-106,-162,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,49,50,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,111,119,120,122,123,124,126,127,128,151,152,166,167,169,171,172,178,179,202,233,235,237,239,247,252,257,263,270,271,277,279,281,290,291,297,298,299,305,311,312,313,317,],[26,26,-52,-56,26,-86,-87,-88,-89,-90,-91,-103,-104,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-57,-20,-58,-174,-174,-94,-92,-93,-97,-109,-110,-49,26,-42,-164,-43,-174,236,-111,262,-54,26,26,-79,-46,-174,-53,-174,-105,-163,-71,-75,26,26,-100,26,-102,-74,-69,-101,26,-106,]),'ID':([13,14,15,16,17,18,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,62,63,72,73,113,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,160,164,173,175,182,202,204,205,206,215,237,239,243,259,262,269,270,271,272,285,287,288,289,297,298,299,310,312,313,314,317,319,],[28,28,30,31,32,33,-21,79,79,-86,-87,-88,-89,-90,-91,79,-103,-104,79,-138,-139,162,79,-136,-137,28,-94,-92,-93,-97,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-109,-110,79,79,79,79,213,79,230,79,79,-111,79,-107,-108,162,79,79,79,230,283,30,-174,-105,79,283,-63,-64,-65,-100,79,-102,-66,-101,79,79,-106,-70,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,49,50,124,125,126,127,128,151,152,202,236,262,264,265,266,270,271,284,285,286,287,288,289,293,294,295,297,299,309,310,312,317,319,],[-21,-174,124,-174,-96,-86,-87,-88,-89,-90,-91,-103,-104,-94,-95,-92,-93,-97,-109,-110,-111,-174,-174,292,-174,-62,-174,-105,308,-174,-60,-63,-64,-65,-61,-67,-68,-100,-102,-59,-66,-101,-106,-70,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,47,49,50,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,116,120,121,124,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,157,159,163,164,166,168,169,170,171,172,175,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,209,211,213,224,237,238,239,241,243,246,247,251,252,253,255,257,269,270,271,272,277,279,280,281,296,297,298,299,302,305,307,312,313,314,315,317,320,],[47,-174,47,-58,-86,-87,-88,-89,-90,-91,129,47,-103,-104,47,155,156,-112,-113,-114,157,-138,-139,47,-140,-141,-142,-143,-144,-145,-146,-147,-136,-137,-148,-149,-150,-151,-152,-153,164,-174,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,173,-57,-174,-58,-174,-94,-92,-93,-97,47,164,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-109,-110,-58,47,47,47,47,157,47,-49,-174,-42,-174,-164,-43,47,-154,47,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-111,47,-107,-108,-58,-174,-155,-170,47,-157,47,-161,47,-156,-79,-158,-46,276,-174,-174,-174,-174,-105,47,-163,-71,-174,-75,-174,-100,47,-102,314,-74,-174,-101,47,47,-171,-106,-162,]),'IF':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[46,46,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,46,46,-174,-105,-100,46,-102,-101,46,-106,]),'BREAK':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[51,51,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,51,51,-174,-105,-100,51,-102,-101,51,-106,]),'CONTINUE':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[52,52,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,52,52,-174,-105,-100,52,-102,-101,52,-106,]),'RETURN':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[53,53,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,53,53,-174,-105,-100,53,-102,-101,53,-106,]),'WHILE':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[54,54,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,54,54,-174,-105,-100,54,-102,-101,54,-106,]),'FOR':([26,35,37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,237,239,270,271,297,298,299,312,313,317,],[55,55,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,55,55,-174,-105,-100,55,-102,-101,55,-106,]),'NOT':([26,35,37,38,39,40,41,42,47,49,50,53,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[72,72,-86,-87,-88,-89,-90,-91,72,-103,-104,72,-94,-92,-93,-97,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-109,-110,72,72,72,72,72,72,72,-111,72,-107,-108,72,72,72,-174,-105,72,-100,72,-102,-101,72,72,-106,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,47,49,50,53,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[73,73,-86,-87,-88,-89,-90,-91,73,-103,-104,73,-94,-92,-93,-97,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-109,-110,73,73,73,73,73,73,73,-111,73,-107,-108,73,73,73,-174,-105,73,-100,73,-102,-101,73,73,-106,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,163,164,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,212,213,224,232,237,238,239,241,243,246,251,270,271,272,273,297,298,299,300,312,313,314,315,317,320,],[60,60,-86,-87,-88,-89,-90,-91,60,133,-103,-104,60,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,-92,-93,-97,60,133,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-109,-110,60,60,60,60,-135,60,60,133,-154,60,133,-117,-118,-119,-120,133,133,133,-124,133,133,133,133,133,133,133,133,133,133,-111,133,60,-107,-108,133,133,-155,-170,133,60,133,60,-161,60,-156,-158,-174,-105,60,133,-100,60,-102,133,-101,60,60,-171,-106,-162,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,163,164,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,212,213,224,232,237,238,239,241,243,246,251,270,271,272,273,297,298,299,300,312,313,314,315,317,320,],[61,61,-86,-87,-88,-89,-90,-91,61,134,-103,-104,61,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,-92,-93,-97,61,134,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-109,-110,61,61,61,61,-135,61,61,134,-154,61,134,-117,-118,-119,-120,134,134,134,-124,134,134,134,134,134,134,134,134,134,134,-111,134,61,-107,-108,134,134,-155,-170,134,61,134,61,-161,61,-156,-158,-174,-105,61,134,-100,61,-102,134,-101,61,61,-171,-106,-162,]),'INT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,165,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[74,74,-86,-87,-88,-89,-90,-91,74,-103,-104,74,-138,-139,74,-136,-137,-94,-92,-93,-97,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-109,-110,74,74,74,74,74,222,74,74,-111,74,-107,-108,74,74,74,-174,-105,74,-100,74,-102,-101,74,74,-106,]),'HEXADECIMAL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[75,75,-86,-87,-88,-89,-90,-91,75,-103,-104,75,-138,-139,75,-136,-137,-94,-92,-93,-97,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-109,-110,75,75,75,75,75,75,75,-111,75,-107,-108,75,75,75,-174,-105,75,-100,75,-102,-101,75,75,-106,]),'FLOAT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[76,76,-86,-87,-88,-89,-90,-91,76,-103,-104,76,-138,-139,76,-136,-137,-94,-92,-93,-97,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-109,-110,76,76,76,76,76,76,76,-111,76,-107,-108,76,76,76,-174,-105,76,-100,76,-102,-101,76,76,-106,]),'DOUBLE':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[77,77,-86,-87,-88,-89,-90,-91,77,-103,-104,77,-138,-139,77,-136,-137,-94,-92,-93,-97,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-109,-110,77,77,77,77,77,77,77,-111,77,-107,-108,77,77,77,-174,-105,77,-100,77,-102,-101,77,77,-106,]),'STRING':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,276,297,298,299,312,313,314,317,],[78,78,-86,-87,-88,-89,-90,-91,78,-103,-104,78,-138,-139,78,-136,-137,-94,-92,-93,-97,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-109,-110,78,78,78,78,78,78,78,-111,78,-107,-108,78,78,78,-174,-105,78,303,-100,78,-102,-101,78,78,-106,]),'IN':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[91,91,-86,-87,-88,-89,-90,-91,91,-103,-104,91,-138,-139,91,-136,-137,-94,-92,-93,-97,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-109,-110,91,91,91,91,91,91,91,-111,91,-107,-108,91,91,91,-174,-105,91,-100,91,-102,-101,91,91,-106,]),'OUT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,175,182,202,204,205,206,237,239,243,270,271,272,297,298,299,312,313,314,317,],[92,92,-86,-87,-88,-89,-90,-91,92,-103,-104,92,-138,-139,92,-136,-137,-94,-92,-93,-97,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-109,-110,92,92,92,92,92,92,92,-111,92,-107,-108,92,92,92,-174,-105,92,-100,92,-102,-101,92,92,-106,]),'VOID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[93,93,-86,-87,-88,-89,-90,-91,93,-103,-104,93,-138,-139,93,-136,-137,93,93,-94,-92,-93,-97,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-109,-110,93,93,93,93,93,93,93,93,93,-111,93,-107,-108,93,93,93,93,93,93,-174,-105,93,93,-100,93,-102,93,-101,93,93,-106,]),'BOOL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[94,94,-86,-87,-88,-89,-90,-91,94,-103,-104,94,-138,-139,94,-136,-137,94,94,-94,-92,-93,-97,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-109,-110,94,94,94,94,94,94,94,94,94,-111,94,-107,-108,94,94,94,94,94,94,-174,-105,94,94,-100,94,-102,94,-101,94,94,-106,]),'I8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[95,95,-86,-87,-88,-89,-90,-91,95,-103,-104,95,-138,-139,95,-136,-137,95,95,-94,-92,-93,-97,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-109,-110,95,95,95,95,95,95,95,95,95,-111,95,-107,-108,95,95,95,95,95,95,-174,-105,95,95,-100,95,-102,95,-101,95,95,-106,]),'U8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[96,96,-86,-87,-88,-89,-90,-91,96,-103,-104,96,-138,-139,96,-136,-137,96,96,-94,-92,-93,-97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-109,-110,96,96,96,96,96,96,96,96,96,-111,96,-107,-108,96,96,96,96,96,96,-174,-105,96,96,-100,96,-102,96,-101,96,96,-106,]),'I16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[97,97,-86,-87,-88,-89,-90,-91,97,-103,-104,97,-138,-139,97,-136,-137,97,97,-94,-92,-93,-97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-109,-110,97,97,97,97,97,97,97,97,97,-111,97,-107,-108,97,97,97,97,97,97,-174,-105,97,97,-100,97,-102,97,-101,97,97,-106,]),'U16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[98,98,-86,-87,-88,-89,-90,-91,98,-103,-104,98,-138,-139,98,-136,-137,98,98,-94,-92,-93,-97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-109,-110,98,98,98,98,98,98,98,98,98,-111,98,-107,-108,98,98,98,98,98,98,-174,-105,98,98,-100,98,-102,98,-101,98,98,-106,]),'I32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[99,99,-86,-87,-88,-89,-90,-91,99,-103,-104,99,-138,-139,99,-136,-137,99,99,-94,-92,-93,-97,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-109,-110,99,99,99,99,99,99,99,99,99,-111,99,-107,-108,99,99,99,99,99,99,-174,-105,99,99,-100,99,-102,99,-101,99,99,-106,]),'U32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[100,100,-86,-87,-88,-89,-90,-91,100,-103,-104,100,-138,-139,100,-136,-137,100,100,-94,-92,-93,-97,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-109,-110,100,100,100,100,100,100,100,100,100,-111,100,-107,-108,100,100,100,100,100,100,-174,-105,100,100,-100,100,-102,100,-101,100,100,-106,]),'I64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[101,101,-86,-87,-88,-89,-90,-91,101,-103,-104,101,-138,-139,101,-136,-137,101,101,-94,-92,-93,-97,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-109,-110,101,101,101,101,101,101,101,101,101,-111,101,-107,-108,101,101,101,101,101,101,-174,-105,101,101,-100,101,-102,101,-101,101,101,-106,]),'U64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[102,102,-86,-87,-88,-89,-90,-91,102,-103,-104,102,-138,-139,102,-136,-137,102,102,-94,-92,-93,-97,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-109,-110,102,102,102,102,102,102,102,102,102,-111,102,-107,-108,102,102,102,102,102,102,-174,-105,102,102,-100,102,-102,102,-101,102,102,-106,]),'F16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[103,103,-86,-87,-88,-89,-90,-91,103,-103,-104,103,-138,-139,103,-136,-137,103,103,-94,-92,-93,-97,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-109,-110,103,103,103,103,103,103,103,103,103,-111,103,-107,-108,103,103,103,103,103,103,-174,-105,103,103,-100,103,-102,103,-101,103,103,-106,]),'F32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[104,104,-86,-87,-88,-89,-90,-91,104,-103,-104,104,-138,-139,104,-136,-137,104,104,-94,-92,-93,-97,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-109,-110,104,104,104,104,104,104,104,104,104,-111,104,-107,-108,104,104,104,104,104,104,-174,-105,104,104,-100,104,-102,104,-101,104,104,-106,]),'F64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[105,105,-86,-87,-88,-89,-90,-91,105,-103,-104,105,-138,-139,105,-136,-137,105,105,-94,-92,-93,-97,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-109,-110,105,105,105,105,105,105,105,105,105,-111,105,-107,-108,105,105,105,105,105,105,-174,-105,105,105,-100,105,-102,105,-101,105,105,-106,]),'INTERFACEID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,218,234,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[106,106,-86,-87,-88,-89,-90,-91,106,-103,-104,106,-138,-139,106,-136,-137,106,106,-94,-92,-93,-97,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-109,-110,106,106,106,106,106,106,106,106,106,-111,106,-107,-108,106,106,106,106,106,106,106,106,-174,-105,106,106,-100,106,-102,106,-101,106,106,-106,]),'STRUCTID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,218,234,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[107,107,-86,-87,-88,-89,-90,-91,107,-103,-104,107,-138,-139,107,-136,-137,107,107,-94,-92,-93,-97,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-109,-110,107,107,107,107,107,107,107,107,107,-111,107,-107,-108,107,107,107,107,107,107,107,107,-174,-105,107,107,-100,107,-102,107,-101,107,107,-106,]),'GENERICID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[108,108,-86,-87,-88,-89,-90,-91,108,-103,-104,108,-138,-139,108,-136,-137,108,108,-94,-92,-93,-97,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-109,-110,108,108,108,108,108,108,108,108,108,-111,108,-107,-108,108,108,108,108,108,108,-174,-105,108,108,-100,108,-102,108,-101,108,108,-106,]),'TYPEALIASID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,72,73,116,121,124,126,127,128,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,159,164,168,170,175,182,202,204,205,206,211,237,239,243,255,269,270,271,272,280,297,298,299,307,312,313,314,317,],[109,109,-86,-87,-88,-89,-90,-91,109,-103,-104,109,-138,-139,109,-136,-137,109,109,-94,-92,-93,-97,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-109,-110,109,109,109,109,109,109,109,109,109,-111,109,-107,-108,109,109,109,109,109,109,-174,-105,109,109,-100,109,-102,109,-101,109,109,-106,]),'LESS':([26,30,32,33,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,116,121,122,123,124,126,127,128,129,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,158,159,163,164,166,168,169,170,171,172,175,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,210,211,212,213,224,232,237,238,239,241,243,246,251,252,255,257,269,270,271,272,273,277,279,280,281,296,297,298,299,300,305,307,312,313,314,315,317,320,],[62,62,-52,-56,62,-86,-87,-88,-89,-90,-91,62,148,-103,-104,62,-112,-113,-114,-115,-138,-139,62,-140,-141,-142,-143,-144,-145,-146,-147,-136,-137,-148,-149,-150,-151,-152,-153,62,-50,168,-22,-23,-24,-25,-26,-27,-28,-172,-173,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,170,170,-44,-45,62,62,62,62,-94,-92,-93,-97,62,148,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-109,-110,62,62,62,211,62,-135,62,-49,62,-42,62,-164,-43,62,148,-154,62,148,-117,-118,-119,-120,148,148,148,-124,-125,-126,148,148,148,148,-131,-132,-133,-134,-111,148,62,-107,-108,148,62,148,-155,-170,148,62,148,62,-161,62,-156,-158,-46,62,-174,62,-174,-105,62,148,-163,-71,62,-75,62,-100,62,-102,148,-74,62,-101,62,62,-171,-106,-162,]),'COMMA':([27,29,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,117,124,161,162,163,166,169,171,172,174,176,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,210,213,217,219,224,226,228,230,232,238,241,245,246,248,249,250,251,252,257,261,273,277,278,279,281,282,305,315,320,],[113,113,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-19,-94,215,-174,-135,-49,-42,-164,-43,113,-18,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,243,-155,-82,-84,-170,255,259,-174,-17,-157,-161,255,-156,215,-83,-85,-158,-46,-174,-78,243,-163,255,-71,-75,259,-74,-171,-162,]),'COLON':([28,32,111,120,122,162,178,230,247,283,],[116,-52,-57,-58,-174,218,234,116,-79,307,]),'ASSIGN':([28,31,48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,115,117,124,130,163,166,169,171,172,176,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,252,257,273,277,279,281,300,305,315,320,],[-174,121,132,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,175,-19,-94,132,-135,-49,-42,-164,-43,-18,132,-154,132,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,132,132,132,-155,-170,132,132,-161,-156,-158,-46,-174,132,-163,-71,-75,132,-74,-171,-162,]),'ELSE':([37,38,39,40,41,42,49,50,124,126,127,128,151,152,202,270,271,297,299,312,317,],[-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,298,-105,-100,-102,-101,-106,]),'MUL':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[135,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,135,-135,135,-154,135,135,135,-119,-120,135,135,135,-124,135,135,135,135,135,135,135,135,135,135,135,135,135,-155,-170,135,135,-161,-156,-158,135,135,-171,-162,]),'DIV':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[136,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,136,-135,136,-154,136,136,136,-119,-120,136,136,136,-124,136,136,136,136,136,136,136,136,136,136,136,136,136,-155,-170,136,136,-161,-156,-158,136,136,-171,-162,]),'AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[137,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,137,-135,137,-154,137,-117,-118,-119,-120,-121,137,137,-124,-125,-126,137,137,-129,-130,-131,-132,-133,-134,137,137,137,-155,-170,137,137,-161,-156,-158,137,137,-171,-162,]),'OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[138,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,138,-135,138,-154,138,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,138,138,-129,-130,-131,-132,-133,-134,138,138,138,-155,-170,138,138,-161,-156,-158,138,138,-171,-162,]),'XOR':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[139,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,139,-135,139,-154,139,-117,-118,-119,-120,-121,139,-123,-124,-125,-126,139,139,-129,-130,-131,-132,-133,-134,139,139,139,-155,-170,139,139,-161,-156,-158,139,139,-171,-162,]),'MOD':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[140,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,140,-135,140,-154,140,140,140,-119,-120,140,140,140,-124,140,140,140,140,140,140,140,140,140,140,140,140,140,-155,-170,140,140,-161,-156,-158,140,140,-171,-162,]),'LSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[141,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,141,-135,141,-154,141,-117,-118,-119,-120,141,141,141,-124,-125,-126,141,141,141,141,141,141,141,141,141,141,141,-155,-170,141,141,-161,-156,-158,141,141,-171,-162,]),'RSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[142,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,142,-135,142,-154,142,-117,-118,-119,-120,142,142,142,-124,-125,-126,142,142,142,142,142,142,142,142,142,142,142,-155,-170,142,142,-161,-156,-158,142,142,-171,-162,]),'LOGICAL_OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[143,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,143,-135,143,-154,143,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,143,143,143,-155,-170,143,143,-161,-156,-158,143,143,-171,-162,]),'LOGICAL_AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[144,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,144,-135,144,-154,144,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,144,-128,-129,-130,-131,-132,-133,-134,144,144,144,-155,-170,144,144,-161,-156,-158,144,144,-171,-162,]),'NOT_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[145,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,145,-135,145,-154,145,-117,-118,-119,-120,145,145,145,-124,-125,-126,145,145,-129,-130,-131,-132,-133,-134,145,145,145,-155,-170,145,145,-161,-156,-158,145,145,-171,-162,]),'EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[146,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,146,-135,146,-154,146,-117,-118,-119,-120,146,146,146,-124,-125,-126,146,146,-129,-130,-131,-132,-133,-134,146,146,146,-155,-170,146,146,-161,-156,-158,146,146,-171,-162,]),'LESS_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[147,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,147,-135,147,-154,147,-117,-118,-119,-120,147,147,147,-124,-125,-126,147,147,147,147,-131,-132,-133,-134,147,147,147,-155,-170,147,147,-161,-156,-158,147,147,-171,-162,]),'GREATER_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,130,163,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,224,232,238,241,246,251,273,300,315,320,],[149,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,149,-135,149,-154,149,-117,-118,-119,-120,149,149,149,-124,-125,-126,149,149,149,149,-131,-132,-133,-134,149,149,149,-155,-170,149,149,-161,-156,-158,149,149,-171,-162,]),'GREATER':([48,56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,124,130,161,162,163,166,169,171,172,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,210,212,213,214,216,217,219,224,225,226,232,238,241,245,246,248,249,250,251,252,254,256,257,273,274,275,277,278,279,281,300,304,305,315,320,],[150,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-94,150,-174,-174,-135,-49,-42,-164,-43,150,-154,150,-117,-118,-119,-120,150,150,150,-124,-125,-126,150,150,150,150,-131,-132,-133,-134,150,150,150,-155,247,-81,-82,-84,-170,253,-174,150,150,-161,-174,-156,-174,-83,-85,-158,-46,277,-166,-174,150,302,-80,-163,-174,-71,-75,150,-165,-74,-171,-162,]),'RPAREN':([56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,117,124,130,131,157,163,164,166,169,171,172,173,176,180,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,207,208,209,210,213,220,224,227,228,229,230,238,241,242,244,246,251,252,257,258,260,261,273,277,279,281,282,300,301,303,305,306,314,315,318,320,],[-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-19,-94,181,182,-174,-135,-174,-49,-42,-164,-43,-174,-18,237,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,239,241,-159,-160,-174,-155,251,-170,257,-174,-73,-174,-157,-161,-167,-169,-156,-158,-46,-174,-72,-77,-78,-174,-163,-71,-75,-174,313,-168,315,-74,-76,-174,-171,320,-162,]),'GENERICMARK':([56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,163,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,213,224,238,241,246,251,315,320,],[-112,-113,-114,158,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,158,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-155,-170,-157,-161,-156,-158,-171,-162,]),'LBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,124,131,163,166,169,171,172,176,177,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,213,224,225,226,238,241,245,246,251,252,257,277,278,279,281,296,305,315,316,320,],[-112,-113,-114,159,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,165,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,-94,165,159,-49,-42,-164,-43,165,165,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-155,-170,165,165,-157,-161,165,-156,-158,-46,-174,-163,165,-71,-75,165,165,-171,165,-162,]),'DOT':([56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,163,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,213,224,238,241,246,251,315,320,],[-112,-113,-114,160,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,160,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-155,-170,-157,-161,-156,-158,-171,-162,]),'RBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,74,75,76,77,78,79,124,163,165,181,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,212,213,221,222,223,224,238,241,246,251,315,320,],[-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-94,-135,-174,-154,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,246,-155,252,-47,-48,-170,-157,-161,-156,-158,-171,-162,]),'REF':([80,82,84,85,86,87,88,89,90,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,131,166,169,171,172,176,177,225,226,245,252,257,277,278,279,281,296,305,316,],[166,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-174,-174,-44,-45,166,-49,-42,-164,-43,166,166,166,166,166,-46,-174,-163,166,-71,-75,166,166,166,]),'ASSIGNTYPE':([257,],[280,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,262,285,],[4,4,4,288,288,]),'empty':([0,3,4,26,27,28,29,30,35,47,53,63,81,106,107,116,121,122,123,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,161,162,164,165,168,170,173,174,175,178,182,204,210,211,226,228,230,236,237,239,243,245,248,255,257,262,265,269,270,272,273,278,280,282,285,296,298,307,313,314,],[5,5,5,36,114,117,114,120,36,120,154,120,120,171,171,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,154,209,120,216,219,209,223,120,120,229,114,120,235,120,154,244,120,256,260,117,266,154,154,120,256,216,120,281,286,266,120,299,120,244,256,120,260,286,120,154,120,154,209,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,156,237,239,298,313,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,156,237,239,298,313,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,236,262,265,285,],[9,9,9,267,290,267,290,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,167,237,239,290,291,298,313,],[25,38,38,224,38,38,25,310,38,38,]),'declarator':([13,14,113,],[27,29,174,]),'statement_nest':([26,35,],[34,125,]),'statement':([26,35,237,239,298,313,],[35,35,270,271,312,317,]),'decl_statement':([26,35,156,237,239,298,313,],[37,37,206,37,37,37,37,]),'expression_statement':([26,35,156,237,239,298,313,],[39,39,205,39,39,39,39,]),'if_statement':([26,35,237,239,298,313,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,237,239,298,313,],[41,41,41,41,41,41,]),'jump_statement':([26,35,237,239,298,313,],[42,42,42,42,42,42,]),'expression_opt':([26,35,53,156,204,237,239,298,313,],[45,45,153,45,240,45,45,45,45,]),'expression':([26,35,47,53,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[48,48,130,48,180,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,203,48,210,212,210,232,238,48,48,48,273,300,48,48,210,]),'while_clause':([26,35,237,239,298,313,],[49,49,49,49,49,49,]),'for_clause':([26,35,237,239,298,313,],[50,50,50,50,50,50,]),'assign_expr':([26,35,47,53,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'binary_expr':([26,35,47,53,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_expr':([26,35,47,53,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'primary_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[59,59,59,59,163,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unary_operation':([26,35,47,53,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'call_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'index_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'cast_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'new_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'member_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'lambda_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'io_expr':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'type_spec':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[80,80,131,80,80,176,177,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,225,226,80,80,80,245,80,80,80,278,296,80,305,80,316,80,80,]),'function_sign':([26,30,35,47,53,63,81,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,296,298,307,313,314,],[82,119,82,82,82,82,167,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,311,82,82,82,82,]),'in_out':([26,35,47,53,63,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,175,182,204,237,239,243,272,298,313,314,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'simple_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'complex_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,218,234,237,239,243,255,269,272,280,298,307,313,314,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,250,263,85,85,85,85,85,85,85,85,85,85,85,]),'generic_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'alias_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'array_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'reference_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'function_type':([26,35,47,53,63,116,121,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,298,307,313,314,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'generics_type_list_opt':([26,30,35,47,53,63,81,116,121,122,123,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,296,298,307,313,314,],[110,110,110,110,110,110,110,110,110,178,179,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'generics_type_list':([26,30,35,47,53,63,81,116,121,122,123,129,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,155,156,157,159,164,168,170,175,182,204,211,237,239,243,255,269,272,280,296,298,307,313,314,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'declarator_nest':([27,29,174,],[112,118,231,]),'type_spec_colon_opt':([28,230,],[115,261,]),'new_struct':([32,],[122,]),'new_interface':([33,],[123,]),'generics_type':([62,215,],[161,248,]),'generics_specialization_list_opt':([106,107,],[169,172,]),'for_init_statement':([156,],[204,]),'parameter_list_opt':([157,164,314,],[207,220,318,]),'parameter_list':([157,164,314,],[208,208,208,]),'generics_type_comma_nest':([161,248,],[214,275,]),'generics_type_range_colon_opt':([162,],[217,]),'int_literal_opt':([165,],[221,]),'parameter_decl_list_opt':([173,],[227,]),'parameter_decl':([173,259,],[228,282,]),'complex_type_colon_opt':([178,],[233,]),'expression_comma_nest':([210,273,],[242,301,]),'generics_type_range':([218,],[249,]),'type_spec_comma_nest':([226,245,278,],[254,274,304,]),'parameter_decl_comma_nest':([228,282,],[258,306,]),'interface_member_decl_nest':([236,265,],[264,293,]),'interface_member_decl':([236,265,],[265,265,]),'type_function_decl':([236,262,265,285,],[268,291,268,291,]),'type_spec_assigntype_opt':([257,],[279,]),'member_decl_nest':([262,285,],[284,309,]),'member_decl':([262,285,],[285,285,]),'member_declarator':([262,285,],[287,287,]),'type_function_def':([262,285,],[289,289,]),'statement_else_opt':([270,],[297,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',17),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',22),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',23),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',24),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',32),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',33),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',34),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',35),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',40),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',41),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',42),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',46),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',51),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',55),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',56),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',63),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',67),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',71),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',72),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',79),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',83),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',90),
  ('type_spec -> alias_type','type_spec',1,'p_type_spec','parser.py',91),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',92),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',93),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',94),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',107),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',108),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',109),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',110),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',114),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',115),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',119),
  ('alias_type -> TYPEALIASID','alias_type',1,'p_alias_type','parser.py',123),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',127),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',131),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',132),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',139),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',143),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',147),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',152),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',158),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',159),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',166),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',171),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',176),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',177),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',185),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',186),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',194),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',195),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',202),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',203),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',204),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',208),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',212),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',213),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',222),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',226),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',230),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',235),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',236),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',243),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',244),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',251),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',252),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',259),
  ('generics_type_list -> LESS generics_type generics_type_comma_nest GREATER','generics_type_list',4,'p_generics_type_list','parser.py',266),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',270),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',271),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',279),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',284),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',285),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',293),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',301),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',302),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',303),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',304),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',305),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',306),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',310),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',311),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',315),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',319),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',320),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',327),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',331),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',332),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',339),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',343),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',344),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',351),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',352),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',356),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',360),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',364),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',365),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',369),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',370),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',371),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',384),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',385),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',386),
  ('expression -> primary_expr','expression',1,'p_expression','parser.py',387),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',391),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',397),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',398),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',399),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',400),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',401),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',402),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',403),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',404),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',405),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',406),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',407),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',408),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',409),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',410),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',411),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',412),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',413),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',414),
  ('unary_expr -> unary_operation primary_expr','unary_expr',2,'p_unary_expr','parser.py',422),
  ('unary_operation -> NOT','unary_operation',1,'p_unary_opration_opt','parser.py',427),
  ('unary_operation -> LOGICAL_NOT','unary_operation',1,'p_unary_opration_opt','parser.py',428),
  ('unary_operation -> PLUS','unary_operation',1,'p_unary_opration_opt','parser.py',429),
  ('unary_operation -> MINUS','unary_operation',1,'p_unary_opration_opt','parser.py',430),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',435),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',436),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',437),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',438),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',439),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',440),
  ('primary_expr -> lambda_expr','primary_expr',1,'p_primary_expr','parser.py',441),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',442),
  ('operand -> INT','operand',1,'p_operand','parser.py',446),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',447),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',448),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',449),
  ('operand -> STRING','operand',1,'p_operand','parser.py',450),
  ('operand -> ID','operand',1,'p_operand','parser.py',451),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',452),
  ('member_expr -> primary_expr DOT ID','member_expr',3,'p_member_expr','parser.py',463),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',467),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',471),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',475),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',479),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',480),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',487),
  ('call_expr -> primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPAREN','call_expr',9,'p_call_expr','parser.py',488),
  ('generics_specialization_list_opt -> LESS type_spec type_spec_comma_nest GREATER','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',496),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',497),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',504),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',505),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',512),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',516),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',517),
  ('lambda_expr -> FUNC function_sign block_statement','lambda_expr',3,'p_lambda_expr','parser.py',524),
  ('io_expr -> in_out LESS type_spec GREATER LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',528),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',532),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',533),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',538),
]
