
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GENERICMARK GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT STRUCTID TYPE TYPEALIASID U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | alias_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDalias_type : TYPEALIASIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEnew_struct :complex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_optparameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LESS generics_type generics_type_comma_nest GREATERgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_expr\n                  | primary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation primary_expr unary_operation : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUSprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | ref_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | lambda_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : primary_expr DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETref_expr : REF LPAREN expression RPARENcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LESS type_spec type_spec_comma_nest GREATER\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptylambda_expr : FUNC function_sign block_statementio_expr : in_out LESS type_spec GREATER LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,126,],[-176,0,-1,-176,-176,-4,-2,-3,-5,-6,-7,-8,-21,-94,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,158,205,241,243,275,276,302,303,304,317,318,322,],[13,13,13,-5,-6,-7,-8,-21,13,13,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,13,-111,13,13,-176,-105,-100,13,-102,-101,13,-106,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,158,205,241,243,275,276,302,303,304,317,318,322,],[14,14,14,-5,-6,-7,-8,-21,14,14,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,14,-111,14,14,-176,-105,-100,14,-102,-101,14,-106,]),'FUNC':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,240,241,243,247,267,270,275,276,277,290,292,293,294,299,300,302,303,304,315,317,318,319,322,324,],[15,15,15,-5,-6,-7,-8,-21,83,83,-86,-87,-88,-89,-90,-91,83,-103,-104,83,-138,-139,83,-136,-137,-94,-92,-93,-97,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-109,-110,83,83,83,83,83,83,83,83,-111,83,-107,-108,274,83,83,83,274,274,-176,-105,83,274,-63,-64,-65,-67,-68,-100,83,-102,-66,-101,83,83,-106,-70,]),'TYPE':([0,3,4,21,22,23,24,25,126,],[16,16,16,-5,-6,-7,-8,-21,-94,]),'STRUCT':([0,3,4,21,22,23,24,25,126,],[17,17,17,-5,-6,-7,-8,-21,-94,]),'INTERFACE':([0,3,4,21,22,23,24,25,126,],[18,18,18,-5,-6,-7,-8,-21,-94,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,116,120,121,126,128,129,130,153,154,155,156,158,165,168,172,174,175,177,180,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,216,228,235,236,241,242,243,244,245,250,255,256,257,262,272,273,275,276,282,284,286,297,302,303,304,310,313,316,317,318,320,321,322,325,],[21,22,23,24,-9,-10,-11,-176,-176,-176,-176,-99,-86,-87,-88,-89,-90,-91,128,129,130,-98,-103,-104,153,154,-176,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-13,-15,-16,-20,-94,-92,-93,-97,-109,-110,205,-99,-176,-135,-49,-42,-166,-43,-176,-12,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-111,-176,-107,-108,-156,-172,-14,-17,-176,-159,-176,277,-163,-157,-160,-46,-158,-176,299,300,-176,-105,-165,-71,-75,-55,-100,-176,-102,-74,-51,-69,-101,-176,-173,324,-106,-164,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,49,50,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,122,124,125,126,128,129,130,153,154,168,170,172,174,175,181,182,205,237,239,241,243,251,256,262,268,275,276,282,284,286,295,296,302,303,304,310,316,317,318,322,],[26,26,-52,-56,26,-86,-87,-88,-89,-90,-91,-103,-104,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-57,-20,-58,-176,-176,-94,-92,-93,-97,-109,-110,-49,26,-42,-166,-43,-176,240,-111,267,-54,26,26,-79,-46,-176,-53,-176,-105,-165,-71,-75,26,26,-100,26,-102,-74,-69,-101,26,-106,]),'ID':([13,14,15,16,17,18,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,62,63,73,74,115,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,162,166,169,176,178,185,205,207,208,209,218,241,243,247,264,267,274,275,276,277,290,292,293,294,302,303,304,315,317,318,319,322,324,],[28,28,30,31,32,33,-21,80,80,-86,-87,-88,-89,-90,-91,80,-103,-104,80,-138,-139,164,80,-136,-137,28,-94,-92,-93,-97,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-109,-110,80,80,80,80,216,80,80,234,80,80,-111,80,-107,-108,164,80,80,80,234,288,30,-176,-105,80,288,-63,-64,-65,-100,80,-102,-66,-101,80,80,-106,-70,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,49,50,126,127,128,129,130,153,154,205,240,267,269,270,271,275,276,289,290,291,292,293,294,298,299,300,302,304,314,315,317,322,324,],[-21,-176,126,-176,-96,-86,-87,-88,-89,-90,-91,-103,-104,-94,-95,-92,-93,-97,-109,-110,-111,-176,-176,297,-176,-62,-176,-105,313,-176,-60,-63,-64,-65,-61,-67,-68,-100,-102,-59,-66,-101,-106,-70,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,47,49,50,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,122,123,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,161,165,166,168,169,171,172,173,174,175,178,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,212,214,216,228,241,242,243,245,247,250,251,255,256,257,258,260,262,274,275,276,277,282,284,285,286,301,302,303,304,307,310,312,317,318,319,320,322,325,],[47,-176,47,-58,-86,-87,-88,-89,-90,-91,131,47,-103,-104,47,157,158,-112,-113,-114,159,-138,-139,47,-140,-141,-142,-143,-144,-145,-146,-147,-148,-136,-137,-149,-150,-151,-152,-153,-154,166,169,-176,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,176,-57,-176,-58,-176,-94,-92,-93,-97,47,166,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-109,-110,-58,47,47,47,47,159,47,-49,47,-176,-42,-176,-166,-43,47,-155,47,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-111,47,-107,-108,-58,-176,-156,-172,47,-159,47,-163,47,-157,-79,-160,-46,-158,281,-176,-176,-176,-176,-105,47,-165,-71,-176,-75,-176,-100,47,-102,319,-74,-176,-101,47,47,-173,-106,-164,]),'IF':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[46,46,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,46,46,-176,-105,-100,46,-102,-101,46,-106,]),'BREAK':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[51,51,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,51,51,-176,-105,-100,51,-102,-101,51,-106,]),'CONTINUE':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[52,52,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,52,52,-176,-105,-100,52,-102,-101,52,-106,]),'RETURN':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[53,53,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,53,53,-176,-105,-100,53,-102,-101,53,-106,]),'WHILE':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[54,54,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,54,54,-176,-105,-100,54,-102,-101,54,-106,]),'FOR':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,302,303,304,317,318,322,],[55,55,-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,55,55,-176,-105,-100,55,-102,-101,55,-106,]),'NOT':([26,35,37,38,39,40,41,42,47,49,50,53,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[73,73,-86,-87,-88,-89,-90,-91,73,-103,-104,73,-94,-92,-93,-97,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-109,-110,73,73,73,73,73,73,73,73,-111,73,-107,-108,73,73,73,-176,-105,73,-100,73,-102,-101,73,73,-106,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,47,49,50,53,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[74,74,-86,-87,-88,-89,-90,-91,74,-103,-104,74,-94,-92,-93,-97,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-109,-110,74,74,74,74,74,74,74,74,-111,74,-107,-108,74,74,74,-176,-105,74,-100,74,-102,-101,74,74,-106,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,165,166,169,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,216,227,228,236,241,242,243,245,247,250,255,257,275,276,277,278,302,303,304,305,317,318,319,320,322,325,],[60,60,-86,-87,-88,-89,-90,-91,60,135,-103,-104,60,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,-92,-93,-97,60,135,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-109,-110,60,60,60,60,-135,60,60,60,135,-155,60,135,-117,-118,-119,-120,135,135,135,-124,135,135,135,135,135,135,135,135,135,135,-111,135,60,-107,-108,135,135,-156,135,-172,135,60,135,60,-163,60,-157,-160,-158,-176,-105,60,135,-100,60,-102,135,-101,60,60,-173,-106,-164,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,165,166,169,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,216,227,228,236,241,242,243,245,247,250,255,257,275,276,277,278,302,303,304,305,317,318,319,320,322,325,],[61,61,-86,-87,-88,-89,-90,-91,61,136,-103,-104,61,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,-92,-93,-97,61,136,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-109,-110,61,61,61,61,-135,61,61,61,136,-155,61,136,-117,-118,-119,-120,136,136,136,-124,136,136,136,136,136,136,136,136,136,136,-111,136,61,-107,-108,136,136,-156,136,-172,136,61,136,61,-163,61,-157,-160,-158,-176,-105,61,136,-100,61,-102,136,-101,61,61,-173,-106,-164,]),'INT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,167,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[75,75,-86,-87,-88,-89,-90,-91,75,-103,-104,75,-138,-139,75,-136,-137,-94,-92,-93,-97,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-109,-110,75,75,75,75,75,225,75,75,75,-111,75,-107,-108,75,75,75,-176,-105,75,-100,75,-102,-101,75,75,-106,]),'HEXADECIMAL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[76,76,-86,-87,-88,-89,-90,-91,76,-103,-104,76,-138,-139,76,-136,-137,-94,-92,-93,-97,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-109,-110,76,76,76,76,76,76,76,76,-111,76,-107,-108,76,76,76,-176,-105,76,-100,76,-102,-101,76,76,-106,]),'FLOAT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[77,77,-86,-87,-88,-89,-90,-91,77,-103,-104,77,-138,-139,77,-136,-137,-94,-92,-93,-97,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-109,-110,77,77,77,77,77,77,77,77,-111,77,-107,-108,77,77,77,-176,-105,77,-100,77,-102,-101,77,77,-106,]),'DOUBLE':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[78,78,-86,-87,-88,-89,-90,-91,78,-103,-104,78,-138,-139,78,-136,-137,-94,-92,-93,-97,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-109,-110,78,78,78,78,78,78,78,78,-111,78,-107,-108,78,78,78,-176,-105,78,-100,78,-102,-101,78,78,-106,]),'STRING':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,281,302,303,304,317,318,319,322,],[79,79,-86,-87,-88,-89,-90,-91,79,-103,-104,79,-138,-139,79,-136,-137,-94,-92,-93,-97,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-109,-110,79,79,79,79,79,79,79,79,-111,79,-107,-108,79,79,79,-176,-105,79,308,-100,79,-102,-101,79,79,-106,]),'REF':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,81,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,168,169,172,174,175,178,179,180,185,205,207,208,209,229,230,241,243,247,249,256,262,275,276,277,282,283,284,286,301,302,303,304,310,317,318,319,321,322,],[82,82,-86,-87,-88,-89,-90,-91,82,-103,-104,82,-138,-139,82,-136,-137,168,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-94,-92,-93,-97,82,168,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-109,-110,82,82,82,82,82,-49,82,-42,-166,-43,82,168,168,82,-111,82,-107,-108,168,168,82,82,82,168,-46,-176,-176,-105,82,-165,168,-71,-75,168,-100,82,-102,168,-101,82,82,168,-106,]),'IN':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[93,93,-86,-87,-88,-89,-90,-91,93,-103,-104,93,-138,-139,93,-136,-137,-94,-92,-93,-97,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-109,-110,93,93,93,93,93,93,93,93,-111,93,-107,-108,93,93,93,-176,-105,93,-100,93,-102,-101,93,93,-106,]),'OUT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,302,303,304,317,318,319,322,],[94,94,-86,-87,-88,-89,-90,-91,94,-103,-104,94,-138,-139,94,-136,-137,-94,-92,-93,-97,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-109,-110,94,94,94,94,94,94,94,94,-111,94,-107,-108,94,94,94,-176,-105,94,-100,94,-102,-101,94,94,-106,]),'VOID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[95,95,-86,-87,-88,-89,-90,-91,95,-103,-104,95,-138,-139,95,-136,-137,95,95,-94,-92,-93,-97,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-109,-110,95,95,95,95,95,95,95,95,95,95,-111,95,-107,-108,95,95,95,95,95,95,-176,-105,95,95,-100,95,-102,95,-101,95,95,-106,]),'BOOL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[96,96,-86,-87,-88,-89,-90,-91,96,-103,-104,96,-138,-139,96,-136,-137,96,96,-94,-92,-93,-97,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-109,-110,96,96,96,96,96,96,96,96,96,96,-111,96,-107,-108,96,96,96,96,96,96,-176,-105,96,96,-100,96,-102,96,-101,96,96,-106,]),'I8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[97,97,-86,-87,-88,-89,-90,-91,97,-103,-104,97,-138,-139,97,-136,-137,97,97,-94,-92,-93,-97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-109,-110,97,97,97,97,97,97,97,97,97,97,-111,97,-107,-108,97,97,97,97,97,97,-176,-105,97,97,-100,97,-102,97,-101,97,97,-106,]),'U8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[98,98,-86,-87,-88,-89,-90,-91,98,-103,-104,98,-138,-139,98,-136,-137,98,98,-94,-92,-93,-97,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-109,-110,98,98,98,98,98,98,98,98,98,98,-111,98,-107,-108,98,98,98,98,98,98,-176,-105,98,98,-100,98,-102,98,-101,98,98,-106,]),'I16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[99,99,-86,-87,-88,-89,-90,-91,99,-103,-104,99,-138,-139,99,-136,-137,99,99,-94,-92,-93,-97,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-109,-110,99,99,99,99,99,99,99,99,99,99,-111,99,-107,-108,99,99,99,99,99,99,-176,-105,99,99,-100,99,-102,99,-101,99,99,-106,]),'U16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[100,100,-86,-87,-88,-89,-90,-91,100,-103,-104,100,-138,-139,100,-136,-137,100,100,-94,-92,-93,-97,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-109,-110,100,100,100,100,100,100,100,100,100,100,-111,100,-107,-108,100,100,100,100,100,100,-176,-105,100,100,-100,100,-102,100,-101,100,100,-106,]),'I32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[101,101,-86,-87,-88,-89,-90,-91,101,-103,-104,101,-138,-139,101,-136,-137,101,101,-94,-92,-93,-97,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-109,-110,101,101,101,101,101,101,101,101,101,101,-111,101,-107,-108,101,101,101,101,101,101,-176,-105,101,101,-100,101,-102,101,-101,101,101,-106,]),'U32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[102,102,-86,-87,-88,-89,-90,-91,102,-103,-104,102,-138,-139,102,-136,-137,102,102,-94,-92,-93,-97,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-109,-110,102,102,102,102,102,102,102,102,102,102,-111,102,-107,-108,102,102,102,102,102,102,-176,-105,102,102,-100,102,-102,102,-101,102,102,-106,]),'I64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[103,103,-86,-87,-88,-89,-90,-91,103,-103,-104,103,-138,-139,103,-136,-137,103,103,-94,-92,-93,-97,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-109,-110,103,103,103,103,103,103,103,103,103,103,-111,103,-107,-108,103,103,103,103,103,103,-176,-105,103,103,-100,103,-102,103,-101,103,103,-106,]),'U64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[104,104,-86,-87,-88,-89,-90,-91,104,-103,-104,104,-138,-139,104,-136,-137,104,104,-94,-92,-93,-97,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-109,-110,104,104,104,104,104,104,104,104,104,104,-111,104,-107,-108,104,104,104,104,104,104,-176,-105,104,104,-100,104,-102,104,-101,104,104,-106,]),'F16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[105,105,-86,-87,-88,-89,-90,-91,105,-103,-104,105,-138,-139,105,-136,-137,105,105,-94,-92,-93,-97,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-109,-110,105,105,105,105,105,105,105,105,105,105,-111,105,-107,-108,105,105,105,105,105,105,-176,-105,105,105,-100,105,-102,105,-101,105,105,-106,]),'F32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[106,106,-86,-87,-88,-89,-90,-91,106,-103,-104,106,-138,-139,106,-136,-137,106,106,-94,-92,-93,-97,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-109,-110,106,106,106,106,106,106,106,106,106,106,-111,106,-107,-108,106,106,106,106,106,106,-176,-105,106,106,-100,106,-102,106,-101,106,106,-106,]),'F64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[107,107,-86,-87,-88,-89,-90,-91,107,-103,-104,107,-138,-139,107,-136,-137,107,107,-94,-92,-93,-97,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-109,-110,107,107,107,107,107,107,107,107,107,107,-111,107,-107,-108,107,107,107,107,107,107,-176,-105,107,107,-100,107,-102,107,-101,107,107,-106,]),'INTERFACEID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,221,238,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[108,108,-86,-87,-88,-89,-90,-91,108,-103,-104,108,-138,-139,108,-136,-137,108,108,-94,-92,-93,-97,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-109,-110,108,108,108,108,108,108,108,108,108,108,-111,108,-107,-108,108,108,108,108,108,108,108,108,-176,-105,108,108,-100,108,-102,108,-101,108,108,-106,]),'STRUCTID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,221,238,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[109,109,-86,-87,-88,-89,-90,-91,109,-103,-104,109,-138,-139,109,-136,-137,109,109,-94,-92,-93,-97,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-109,-110,109,109,109,109,109,109,109,109,109,109,-111,109,-107,-108,109,109,109,109,109,109,109,109,-176,-105,109,109,-100,109,-102,109,-101,109,109,-106,]),'GENERICID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[110,110,-86,-87,-88,-89,-90,-91,110,-103,-104,110,-138,-139,110,-136,-137,110,110,-94,-92,-93,-97,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-109,-110,110,110,110,110,110,110,110,110,110,110,-111,110,-107,-108,110,110,110,110,110,110,-176,-105,110,110,-100,110,-102,110,-101,110,110,-106,]),'TYPEALIASID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,302,303,304,312,317,318,319,322,],[111,111,-86,-87,-88,-89,-90,-91,111,-103,-104,111,-138,-139,111,-136,-137,111,111,-94,-92,-93,-97,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-109,-110,111,111,111,111,111,111,111,111,111,111,-111,111,-107,-108,111,111,111,111,111,111,-176,-105,111,111,-100,111,-102,111,-101,111,111,-106,]),'LESS':([26,30,32,33,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,123,124,125,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,161,165,166,168,169,171,172,173,174,175,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,215,216,227,228,236,241,242,243,245,247,250,255,256,257,260,262,274,275,276,277,278,282,284,285,286,301,302,303,304,305,310,312,317,318,319,320,322,325,],[62,62,-52,-56,62,-86,-87,-88,-89,-90,-91,62,150,-103,-104,62,-112,-113,-114,-115,-138,-139,62,-140,-141,-142,-143,-144,-145,-146,-147,-148,-136,-137,-149,-150,-151,-152,-153,-154,62,-50,171,-22,-23,-24,-25,-26,-27,-28,-174,-175,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,173,173,-44,-45,62,62,62,62,-94,-92,-93,-97,62,150,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-109,-110,62,62,62,214,62,-135,62,-49,62,62,-42,62,-166,-43,62,150,-155,62,150,-117,-118,-119,-120,150,150,150,-124,-125,-126,150,150,150,150,-131,-132,-133,-134,-111,150,62,-107,-108,150,62,150,-156,150,-172,150,62,150,62,-163,62,-157,-160,-46,-158,62,-176,62,-176,-105,62,150,-165,-71,62,-75,62,-100,62,-102,150,-74,62,-101,62,62,-173,-106,-164,]),'COMMA':([27,29,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,126,163,164,165,168,172,174,175,177,179,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,213,216,220,222,228,230,232,234,236,242,245,249,250,252,253,254,255,256,257,262,266,278,282,283,284,286,287,310,320,325,],[115,115,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-19,-94,218,-176,-135,-49,-42,-166,-43,115,-18,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,247,-156,-82,-84,-172,260,264,-176,-17,-159,-163,260,-157,218,-83,-85,-160,-46,-158,-176,-78,247,-165,260,-71,-75,264,-74,-173,-164,]),'COLON':([28,32,113,122,124,164,181,234,251,288,],[118,-52,-57,-58,-176,221,238,118,-79,312,]),'ASSIGN':([28,31,48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,119,126,132,165,168,172,174,175,179,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,256,257,262,278,282,284,286,305,310,320,325,],[-176,123,134,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,178,-19,-94,134,-135,-49,-42,-166,-43,-18,134,-155,134,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,134,134,134,-156,134,-172,134,134,-163,-157,-160,-46,-158,-176,134,-165,-71,-75,134,-74,-173,-164,]),'ELSE':([37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,275,276,302,304,317,322,],[-86,-87,-88,-89,-90,-91,-103,-104,-94,-92,-93,-97,-109,-110,-111,303,-105,-100,-102,-101,-106,]),'MUL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[137,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,137,-135,137,-155,137,137,137,-119,-120,137,137,137,-124,137,137,137,137,137,137,137,137,137,137,137,137,137,-156,137,-172,137,137,-163,-157,-160,-158,137,137,-173,-164,]),'DIV':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[138,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,138,-135,138,-155,138,138,138,-119,-120,138,138,138,-124,138,138,138,138,138,138,138,138,138,138,138,138,138,-156,138,-172,138,138,-163,-157,-160,-158,138,138,-173,-164,]),'AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[139,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,139,-135,139,-155,139,-117,-118,-119,-120,-121,139,139,-124,-125,-126,139,139,-129,-130,-131,-132,-133,-134,139,139,139,-156,139,-172,139,139,-163,-157,-160,-158,139,139,-173,-164,]),'OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[140,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,140,-135,140,-155,140,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,140,140,-129,-130,-131,-132,-133,-134,140,140,140,-156,140,-172,140,140,-163,-157,-160,-158,140,140,-173,-164,]),'XOR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[141,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,141,-135,141,-155,141,-117,-118,-119,-120,-121,141,-123,-124,-125,-126,141,141,-129,-130,-131,-132,-133,-134,141,141,141,-156,141,-172,141,141,-163,-157,-160,-158,141,141,-173,-164,]),'MOD':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[142,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,142,-135,142,-155,142,142,142,-119,-120,142,142,142,-124,142,142,142,142,142,142,142,142,142,142,142,142,142,-156,142,-172,142,142,-163,-157,-160,-158,142,142,-173,-164,]),'LSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[143,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,143,-135,143,-155,143,-117,-118,-119,-120,143,143,143,-124,-125,-126,143,143,143,143,143,143,143,143,143,143,143,-156,143,-172,143,143,-163,-157,-160,-158,143,143,-173,-164,]),'RSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[144,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,144,-135,144,-155,144,-117,-118,-119,-120,144,144,144,-124,-125,-126,144,144,144,144,144,144,144,144,144,144,144,-156,144,-172,144,144,-163,-157,-160,-158,144,144,-173,-164,]),'LOGICAL_OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[145,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,145,-135,145,-155,145,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,145,145,145,-156,145,-172,145,145,-163,-157,-160,-158,145,145,-173,-164,]),'LOGICAL_AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[146,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,146,-135,146,-155,146,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,146,-128,-129,-130,-131,-132,-133,-134,146,146,146,-156,146,-172,146,146,-163,-157,-160,-158,146,146,-173,-164,]),'NOT_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[147,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,147,-135,147,-155,147,-117,-118,-119,-120,147,147,147,-124,-125,-126,147,147,-129,-130,-131,-132,-133,-134,147,147,147,-156,147,-172,147,147,-163,-157,-160,-158,147,147,-173,-164,]),'EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[148,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,148,-135,148,-155,148,-117,-118,-119,-120,148,148,148,-124,-125,-126,148,148,-129,-130,-131,-132,-133,-134,148,148,148,-156,148,-172,148,148,-163,-157,-160,-158,148,148,-173,-164,]),'LESS_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[149,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,149,-135,149,-155,149,-117,-118,-119,-120,149,149,149,-124,-125,-126,149,149,149,149,-131,-132,-133,-134,149,149,149,-156,149,-172,149,149,-163,-157,-160,-158,149,149,-173,-164,]),'GREATER_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,305,320,325,],[151,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,151,-135,151,-155,151,-117,-118,-119,-120,151,151,151,-124,-125,-126,151,151,151,151,-131,-132,-133,-134,151,151,151,-156,151,-172,151,151,-163,-157,-160,-158,151,151,-173,-164,]),'GREATER':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,132,163,164,165,168,172,174,175,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,217,219,220,222,227,228,229,230,236,242,245,249,250,252,253,254,255,256,257,259,261,262,278,279,280,282,283,284,286,305,309,310,320,325,],[152,-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-94,152,-176,-176,-135,-49,-42,-166,-43,152,-155,152,-117,-118,-119,-120,152,152,152,-124,-125,-126,152,152,152,152,-131,-132,-133,-134,152,152,152,-156,251,-81,-82,-84,152,-172,258,-176,152,152,-163,-176,-157,-176,-83,-85,-160,-46,-158,282,-168,-176,152,307,-80,-165,-176,-71,-75,152,-167,-74,-173,-164,]),'RPAREN':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,126,132,133,159,165,166,168,172,174,175,176,179,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,210,211,212,213,216,223,227,228,231,232,233,234,242,245,246,248,250,255,256,257,262,263,265,266,278,282,284,286,287,305,306,308,310,311,319,320,323,325,],[-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-19,-94,184,185,-176,-135,-176,-49,-42,-166,-43,-176,-18,241,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,243,245,-161,-162,-176,-156,255,257,-172,262,-176,-73,-176,-159,-163,-169,-171,-157,-160,-46,-158,-176,-72,-77,-78,-176,-165,-71,-75,-176,318,-170,320,-74,-76,-176,-173,325,-164,]),'GENERICMARK':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,242,245,250,255,257,320,325,],[-112,-113,-114,160,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,160,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-156,-172,-159,-163,-157,-160,-158,-173,-164,]),'LBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,133,165,168,172,174,175,179,180,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,229,230,242,245,249,250,255,256,257,262,282,283,284,286,301,310,320,321,325,],[-112,-113,-114,161,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,167,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-176,-176,-44,-45,-94,167,161,-49,-42,-166,-43,167,167,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-156,-172,167,167,-159,-163,167,-157,-160,-46,-158,-176,-165,167,-71,-75,167,167,-173,167,-164,]),'DOT':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,242,245,250,255,257,320,325,],[-112,-113,-114,162,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,162,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-156,-172,-159,-163,-157,-160,-158,-173,-164,]),'RBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,167,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,215,216,224,225,226,228,242,245,250,255,257,320,325,],[-112,-113,-114,-115,-140,-141,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-94,-135,-176,-155,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,250,-156,256,-47,-48,-172,-159,-163,-157,-160,-158,-173,-164,]),'ASSIGNTYPE':([262,],[285,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,267,290,],[4,4,4,293,293,]),'empty':([0,3,4,26,27,28,29,30,35,47,53,63,83,108,109,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,163,164,166,167,169,171,173,176,177,178,181,185,207,213,214,230,232,234,240,241,243,247,249,252,260,262,267,270,274,275,277,278,283,285,287,290,301,303,312,318,319,],[5,5,5,36,116,119,116,122,36,122,156,122,122,174,174,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,156,212,122,219,222,212,226,122,122,122,233,116,122,239,122,156,248,122,261,265,119,271,156,156,122,261,219,122,286,291,271,122,304,122,248,261,122,265,291,122,156,122,156,212,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,158,241,243,303,318,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,158,241,243,303,318,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,240,267,270,290,],[9,9,9,272,295,272,295,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,170,241,243,295,296,303,318,],[25,38,38,228,38,38,25,315,38,38,]),'declarator':([13,14,115,],[27,29,177,]),'statement_nest':([26,35,],[34,127,]),'statement':([26,35,241,243,303,318,],[35,35,275,276,317,322,]),'decl_statement':([26,35,158,241,243,303,318,],[37,37,209,37,37,37,37,]),'expression_statement':([26,35,158,241,243,303,318,],[39,39,208,39,39,39,39,]),'if_statement':([26,35,241,243,303,318,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,241,243,303,318,],[41,41,41,41,41,41,]),'jump_statement':([26,35,241,243,303,318,],[42,42,42,42,42,42,]),'expression_opt':([26,35,53,158,207,241,243,303,318,],[45,45,155,45,244,45,45,45,45,]),'expression':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[48,48,132,48,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,48,213,215,213,227,236,242,48,48,48,278,305,48,48,213,]),'while_clause':([26,35,241,243,303,318,],[49,49,49,49,49,49,]),'for_clause':([26,35,241,243,303,318,],[50,50,50,50,50,50,]),'assign_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'binary_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'primary_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[59,59,59,59,165,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unary_operation':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'call_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'index_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ref_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cast_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'new_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'member_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'lambda_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'io_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'type_spec':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[81,81,133,81,81,179,180,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,229,230,81,81,81,249,81,81,81,283,301,81,310,81,321,81,81,]),'function_sign':([26,30,35,47,53,63,83,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,301,303,312,318,319,],[84,121,84,84,84,84,170,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,316,84,84,84,84,]),'in_out':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,303,318,319,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'simple_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'complex_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,221,238,241,243,247,260,274,277,285,303,312,318,319,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,254,268,87,87,87,87,87,87,87,87,87,87,87,]),'generic_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'alias_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'array_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'reference_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'function_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,303,312,318,319,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'generics_type_list_opt':([26,30,35,47,53,63,83,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,301,303,312,318,319,],[112,112,112,112,112,112,112,112,112,181,182,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'generics_type_list':([26,30,35,47,53,63,83,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,301,303,312,318,319,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'declarator_nest':([27,29,177,],[114,120,235,]),'type_spec_colon_opt':([28,234,],[117,266,]),'new_struct':([32,],[124,]),'new_interface':([33,],[125,]),'generics_type':([62,218,],[163,252,]),'generics_specialization_list_opt':([108,109,],[172,175,]),'for_init_statement':([158,],[207,]),'parameter_list_opt':([159,166,319,],[210,223,323,]),'parameter_list':([159,166,319,],[211,211,211,]),'generics_type_comma_nest':([163,252,],[217,280,]),'generics_type_range_colon_opt':([164,],[220,]),'int_literal_opt':([167,],[224,]),'parameter_decl_list_opt':([176,],[231,]),'parameter_decl':([176,264,],[232,287,]),'complex_type_colon_opt':([181,],[237,]),'expression_comma_nest':([213,278,],[246,306,]),'generics_type_range':([221,],[253,]),'type_spec_comma_nest':([230,249,283,],[259,279,309,]),'parameter_decl_comma_nest':([232,287,],[263,311,]),'interface_member_decl_nest':([240,270,],[269,298,]),'interface_member_decl':([240,270,],[270,270,]),'type_function_decl':([240,267,270,290,],[273,296,273,296,]),'type_spec_assigntype_opt':([262,],[284,]),'member_decl_nest':([267,290,],[289,314,]),'member_decl':([267,290,],[290,290,]),'member_declarator':([267,290,],[292,292,]),'type_function_def':([267,290,],[294,294,]),'statement_else_opt':([275,],[302,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',17),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',22),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',23),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',24),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',32),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',33),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',34),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',35),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',40),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',41),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',42),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',46),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',51),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',55),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',56),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',63),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',67),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',71),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',72),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',79),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',83),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',90),
  ('type_spec -> alias_type','type_spec',1,'p_type_spec','parser.py',91),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',92),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',93),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',94),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',107),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',108),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',109),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',110),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',114),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',115),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',119),
  ('alias_type -> TYPEALIASID','alias_type',1,'p_alias_type','parser.py',123),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',127),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',131),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',132),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',139),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',143),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',147),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',152),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',158),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',159),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',166),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',171),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',176),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',177),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',185),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',186),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',194),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',195),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',202),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',203),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',204),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',208),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',212),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',213),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',222),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',226),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',230),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',235),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',236),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',243),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',244),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',251),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',252),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',259),
  ('generics_type_list -> LESS generics_type generics_type_comma_nest GREATER','generics_type_list',4,'p_generics_type_list','parser.py',266),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',270),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',271),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',279),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',284),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',285),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',293),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',301),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',302),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',303),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',304),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',305),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',306),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',310),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',311),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',315),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',319),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',320),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',327),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',331),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',332),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',339),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',343),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',344),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',351),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',352),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',356),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',360),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',364),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',365),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',369),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',370),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',371),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',384),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',385),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',386),
  ('expression -> primary_expr','expression',1,'p_expression','parser.py',387),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',391),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',397),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',398),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',399),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',400),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',401),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',402),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',403),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',404),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',405),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',406),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',407),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',408),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',409),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',410),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',411),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',412),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',413),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',414),
  ('unary_expr -> unary_operation primary_expr','unary_expr',2,'p_unary_expr','parser.py',419),
  ('unary_operation -> NOT','unary_operation',1,'p_unary_opration_opt','parser.py',424),
  ('unary_operation -> LOGICAL_NOT','unary_operation',1,'p_unary_opration_opt','parser.py',425),
  ('unary_operation -> PLUS','unary_operation',1,'p_unary_opration_opt','parser.py',426),
  ('unary_operation -> MINUS','unary_operation',1,'p_unary_opration_opt','parser.py',427),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',432),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',433),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',434),
  ('primary_expr -> ref_expr','primary_expr',1,'p_primary_expr','parser.py',435),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',436),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',437),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',438),
  ('primary_expr -> lambda_expr','primary_expr',1,'p_primary_expr','parser.py',439),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',440),
  ('operand -> INT','operand',1,'p_operand','parser.py',444),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',445),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',446),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',447),
  ('operand -> STRING','operand',1,'p_operand','parser.py',448),
  ('operand -> ID','operand',1,'p_operand','parser.py',449),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',450),
  ('member_expr -> primary_expr DOT ID','member_expr',3,'p_member_expr','parser.py',461),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',465),
  ('ref_expr -> REF LPAREN expression RPAREN','ref_expr',4,'p_ref_expr','parser.py',469),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',473),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',477),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',481),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',482),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',489),
  ('call_expr -> primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPAREN','call_expr',9,'p_call_expr','parser.py',490),
  ('generics_specialization_list_opt -> LESS type_spec type_spec_comma_nest GREATER','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',498),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',499),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',506),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',507),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',514),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',518),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',519),
  ('lambda_expr -> FUNC function_sign block_statement','lambda_expr',3,'p_lambda_expr','parser.py',526),
  ('io_expr -> in_out LESS type_spec GREATER LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',530),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',534),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',535),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',540),
]
