
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICS GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE LANGRBRACKET LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RANGRBRACKET RBRACE RBRACKET REF RETURN RPAREN RSHIFT SAMPLER SEMICOLON STRING STRUCT TYPE U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : ID generics_specialization_list_optgeneric_type : IDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACEcomplex_type_colon_opt : COLON complex_type\n                              | emptyinterface_decl : INTERFACE ID generics_type_list_opt LBRACE interface_member_decl_nest RBRACEgenerics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl SEMICOLON interface_member_decl_nest\n                                  | emptymember_decl : member_declarator SEMICOLON\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : member_declarator\n                             | function_decl\n                             | type_function_decltype_function_decl : FUNC type_spec function_signmember_declarator : ID type_spec_colon_optfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt parameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKETgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation_opt primary_expr unary_operation_opt : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUS\n                           | emptyprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : ID DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptyio_expr : in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,78,],[-167,0,-1,-167,-167,-4,-2,-3,-5,-6,-7,-8,-21,-90,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,181,222,223,261,262,289,290,291,301,302,307,],[13,13,13,-5,-6,-7,-8,-21,13,13,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,13,-107,13,13,-167,-101,-96,13,-98,-97,13,-102,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,108,181,222,223,261,262,289,290,291,301,302,307,],[14,14,14,-5,-6,-7,-8,-21,14,14,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,14,-107,14,14,-167,-101,-96,14,-98,-97,14,-102,]),'FUNC':([0,3,4,21,22,23,24,25,78,159,211,249,252,253,258,283,284,],[15,15,15,-5,-6,-7,-8,-21,-90,221,221,221,-59,-60,221,-58,-61,]),'TYPE':([0,3,4,21,22,23,24,25,78,],[16,16,16,-5,-6,-7,-8,-21,-90,]),'STRUCT':([0,3,4,21,22,23,24,25,78,],[17,17,17,-5,-6,-7,-8,-21,-90,]),'INTERFACE':([0,3,4,21,22,23,24,25,78,],[18,18,18,-5,-6,-7,-8,-21,-90,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,52,55,56,57,63,65,68,69,70,78,80,81,82,103,104,105,106,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,155,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,189,191,197,199,200,214,216,218,219,220,222,223,224,228,229,239,251,256,257,261,262,265,269,270,274,276,278,281,288,289,290,291,293,294,298,301,302,307,308,],[21,22,23,24,-9,-10,-11,-167,-167,-167,-167,-95,-82,-83,-84,-85,-86,-87,80,81,82,-94,-99,-100,103,104,-167,-108,-109,-110,-13,-15,-19,-16,-20,-90,-88,-89,-93,-105,-106,181,-95,-167,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-167,-18,-42,-12,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-107,-167,-103,-104,-158,-41,-46,-14,-17,-167,258,-62,-63,-64,-167,-167,263,-150,-149,-167,283,-66,-51,-167,-101,-151,-152,-153,-43,-67,-71,-48,-65,-96,-167,-98,-156,-157,-70,-97,-167,-102,-164,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,48,49,70,72,73,76,77,78,80,81,82,103,104,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,156,158,181,189,191,197,212,213,222,223,239,244,254,255,261,262,274,276,278,288,289,290,291,294,298,301,302,307,],[26,26,-167,-167,26,-82,-83,-84,-85,-86,-87,-99,-100,-20,-52,-53,-167,159,-90,-88,-89,-93,-105,-106,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-42,211,-50,-107,-158,-41,-46,-49,-167,26,26,-167,-75,26,26,-167,-101,-43,-67,-71,-65,-96,26,-98,-157,-70,-97,26,-102,]),'ID':([13,14,15,16,17,18,25,26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,64,67,74,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,152,157,159,161,181,183,184,185,187,188,190,194,195,198,206,209,211,221,222,223,225,230,233,241,249,252,253,258,261,262,263,267,272,277,283,284,286,289,290,291,301,302,307,],[28,28,30,31,32,33,-21,-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,122,-131,-132,28,151,154,151,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,151,-167,204,213,214,-135,-107,-167,-103,-104,-167,151,228,-135,-167,151,154,213,214,259,-167,-167,-167,-167,-135,204,214,-59,-60,214,-167,-101,-167,151,-167,151,-58,-61,300,-96,-167,-98,-97,-167,-102,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,48,49,78,79,80,81,82,103,104,159,181,211,215,217,248,249,250,252,253,258,261,262,282,283,284,285,289,291,301,307,],[-21,-167,78,-167,-92,-82,-83,-84,-85,-86,-87,-99,-100,-90,-91,-88,-89,-93,-105,-106,-167,-107,-167,257,-57,281,-167,-55,-59,-60,-167,-167,-101,-54,-58,-61,-56,-96,-98,-97,-102,]),'INT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,196,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,117,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,236,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'HEXADECIMAL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,118,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'FLOAT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,119,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'DOUBLE':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,120,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'STRING':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,297,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,121,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,305,-97,-167,-102,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,48,49,52,53,54,55,56,57,58,59,60,61,62,67,71,72,73,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,186,187,188,189,191,194,195,197,198,221,222,223,225,228,229,230,233,239,244,259,260,261,262,263,265,267,269,270,272,274,275,276,277,278,286,287,289,290,291,293,294,298,301,302,307,308,],[-167,-167,-167,-135,-82,-83,-84,-85,-86,-87,83,-99,-100,-167,107,108,-108,-109,-110,-133,-134,123,-131,-132,-167,152,-52,-53,-167,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-42,-167,195,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-167,-42,-135,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-107,-167,-103,-104,225,-167,-167,-158,-41,-53,-167,-46,-167,-167,-167,-167,-167,-150,-149,-167,-135,-167,-75,-42,-167,-167,-101,-167,-151,-167,-152,-153,-167,-43,297,-67,-167,-71,-167,-53,-96,-167,-98,-156,-157,-70,-97,-167,-102,-164,]),'IN':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,132,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'OUT':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,194,195,222,223,225,230,233,261,262,263,272,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,133,-131,-132,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,-167,-167,-135,-107,-167,-103,-104,-167,-135,-167,-167,-167,-167,-167,-135,-167,-101,-167,-167,-96,-167,-98,-97,-167,-102,]),'VOID':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,134,-131,-132,134,134,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,134,-167,-135,-107,-167,-103,-104,-167,134,-135,-167,134,134,-167,-167,-167,-167,-135,-167,-101,-167,134,-167,134,134,-96,-167,-98,-97,-167,-102,]),'BOOL':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,135,-131,-132,135,135,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,135,-167,-135,-107,-167,-103,-104,-167,135,-135,-167,135,135,-167,-167,-167,-167,-135,-167,-101,-167,135,-167,135,135,-96,-167,-98,-97,-167,-102,]),'I8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,136,-131,-132,136,136,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,136,-167,-135,-107,-167,-103,-104,-167,136,-135,-167,136,136,-167,-167,-167,-167,-135,-167,-101,-167,136,-167,136,136,-96,-167,-98,-97,-167,-102,]),'U8':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,137,-131,-132,137,137,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,137,-167,-135,-107,-167,-103,-104,-167,137,-135,-167,137,137,-167,-167,-167,-167,-135,-167,-101,-167,137,-167,137,137,-96,-167,-98,-97,-167,-102,]),'I16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,138,-131,-132,138,138,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,138,-167,-135,-107,-167,-103,-104,-167,138,-135,-167,138,138,-167,-167,-167,-167,-135,-167,-101,-167,138,-167,138,138,-96,-167,-98,-97,-167,-102,]),'U16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,139,-131,-132,139,139,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,139,-167,-135,-107,-167,-103,-104,-167,139,-135,-167,139,139,-167,-167,-167,-167,-135,-167,-101,-167,139,-167,139,139,-96,-167,-98,-97,-167,-102,]),'I32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,140,-131,-132,140,140,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,140,-167,-135,-107,-167,-103,-104,-167,140,-135,-167,140,140,-167,-167,-167,-167,-135,-167,-101,-167,140,-167,140,140,-96,-167,-98,-97,-167,-102,]),'U32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,141,-131,-132,141,141,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,141,-167,-135,-107,-167,-103,-104,-167,141,-135,-167,141,141,-167,-167,-167,-167,-135,-167,-101,-167,141,-167,141,141,-96,-167,-98,-97,-167,-102,]),'I64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,142,-131,-132,142,142,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,142,-167,-135,-107,-167,-103,-104,-167,142,-135,-167,142,142,-167,-167,-167,-167,-135,-167,-101,-167,142,-167,142,142,-96,-167,-98,-97,-167,-102,]),'U64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,143,-131,-132,143,143,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,143,-167,-135,-107,-167,-103,-104,-167,143,-135,-167,143,143,-167,-167,-167,-167,-135,-167,-101,-167,143,-167,143,143,-96,-167,-98,-97,-167,-102,]),'F16':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,144,-131,-132,144,144,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,144,-167,-135,-107,-167,-103,-104,-167,144,-135,-167,144,144,-167,-167,-167,-167,-135,-167,-101,-167,144,-167,144,144,-96,-167,-98,-97,-167,-102,]),'F32':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,145,-131,-132,145,145,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,145,-167,-135,-107,-167,-103,-104,-167,145,-135,-167,145,145,-167,-167,-167,-167,-135,-167,-101,-167,145,-167,145,145,-96,-167,-98,-97,-167,-102,]),'F64':([26,35,36,37,38,39,40,41,42,48,49,52,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,123,149,161,181,183,184,185,187,188,194,195,198,221,222,223,225,230,233,261,262,263,267,272,277,286,289,290,291,301,302,307,],[-167,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-133,-134,146,-131,-132,146,146,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,146,-167,-135,-107,-167,-103,-104,-167,146,-135,-167,146,146,-167,-167,-167,-167,-135,-167,-101,-167,146,-167,146,146,-96,-167,-98,-97,-167,-102,]),'LANGRBRACKET':([26,30,32,33,35,36,37,38,39,40,41,42,48,49,52,55,56,57,58,59,60,61,62,67,75,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,151,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,185,187,188,189,191,194,195,197,198,213,221,222,223,225,228,229,230,233,239,259,260,261,262,263,265,267,269,270,272,274,276,277,278,286,287,289,290,291,293,294,298,300,301,302,307,308,],[-167,74,74,74,-167,-135,-82,-83,-84,-85,-86,-87,-99,-100,-167,-108,-109,-110,-133,-134,74,-131,-132,74,74,-90,-88,-89,-93,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-167,-105,-106,-135,-167,-167,188,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,188,74,198,-22,-23,-24,-25,-26,-27,-165,-166,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-167,188,-135,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-107,-167,-103,-104,-167,74,-158,-41,-135,-167,-46,74,188,74,-167,-167,-167,-150,-149,-167,-135,-167,286,74,-167,-101,-167,-151,74,-152,-153,-167,-43,-67,74,-71,74,-158,-96,-167,-98,-156,-157,-70,188,-97,-167,-102,-164,]),'IF':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[46,46,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,46,46,-167,-101,-96,46,-98,-97,46,-102,]),'BREAK':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[50,50,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,50,50,-167,-101,-96,50,-98,-97,50,-102,]),'CONTINUE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[51,51,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,51,51,-167,-101,-96,51,-98,-97,51,-102,]),'RETURN':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[52,52,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,52,52,-167,-101,-96,52,-98,-97,52,-102,]),'WHILE':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[53,53,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,53,53,-167,-101,-96,53,-98,-97,53,-102,]),'FOR':([26,35,37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,222,223,261,262,289,290,291,301,302,307,],[54,54,-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,54,54,-167,-101,-96,54,-98,-97,54,-102,]),'NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,149,181,183,184,185,187,195,222,223,225,230,261,262,263,272,289,290,291,301,302,307,],[61,61,-82,-83,-84,-85,-86,-87,-99,-100,61,-90,-88,-89,-93,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-105,-106,61,61,61,61,-107,61,-103,-104,61,61,61,61,61,61,-167,-101,61,61,-96,61,-98,-97,61,-102,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,48,49,52,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,123,149,181,183,184,185,187,195,222,223,225,230,261,262,263,272,289,290,291,301,302,307,],[62,62,-82,-83,-84,-85,-86,-87,-99,-100,62,-90,-88,-89,-93,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-105,-106,62,62,62,62,-107,62,-103,-104,62,62,62,62,62,62,-167,-101,62,62,-96,62,-98,-97,62,-102,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,192,195,200,222,223,225,226,228,229,230,234,261,262,263,265,269,270,272,289,290,291,292,293,296,301,302,307,308,],[58,58,-82,-83,-84,-85,-86,-87,85,-99,-100,58,-108,-109,-110,-90,-88,-89,-93,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-105,-106,58,58,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,58,58,85,85,-112,-113,-114,-115,85,85,85,-119,85,85,85,85,85,85,85,85,85,85,-107,85,58,-103,-104,58,85,58,85,58,58,58,85,-150,-149,58,85,-167,-101,58,-151,85,-153,58,-96,58,-98,85,-156,85,-97,58,-102,-164,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,52,55,56,57,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,187,192,195,200,222,223,225,226,228,229,230,234,261,262,263,265,269,270,272,289,290,291,292,293,296,301,302,307,308,],[59,59,-82,-83,-84,-85,-86,-87,86,-99,-100,59,-108,-109,-110,-90,-88,-89,-93,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-105,-106,59,59,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,59,59,86,86,-112,-113,-114,-115,86,86,86,-119,86,86,86,86,86,86,86,86,86,86,-107,86,59,-103,-104,59,86,59,86,59,59,59,86,-150,-149,59,86,-167,-101,59,-151,86,-153,59,-96,59,-98,86,-156,86,-97,59,-102,-164,]),'COMMA':([27,29,55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,150,151,153,154,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,189,191,197,200,202,204,208,210,213,227,228,229,234,239,243,245,246,247,265,269,270,274,276,278,279,293,294,295,296,298,300,306,308,],[64,64,-108,-109,-110,-19,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,64,-18,-42,206,-167,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-158,-41,-46,-17,241,-167,-78,-80,-167,267,-150,-149,272,-167,-74,206,-79,-81,-151,-152,-153,-43,-67,-71,241,-156,-157,267,272,-70,-42,-80,-164,]),'COLON':([28,32,72,73,76,154,204,214,244,300,],[67,-167,-52,-53,157,209,67,67,-75,209,]),'ASSIGN':([28,31,47,55,56,57,66,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,189,191,192,197,200,226,228,229,234,239,265,269,270,274,276,278,292,293,294,296,298,308,],[-167,75,84,-108,-109,-110,149,-19,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-18,-42,84,84,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,84,-158,-41,84,-46,84,84,-150,-149,84,-167,-151,84,-153,-43,-67,-71,84,-156,-157,84,-70,-164,]),'ELSE':([37,38,39,40,41,42,48,49,78,80,81,82,103,104,181,261,262,289,291,301,307,],[-82,-83,-84,-85,-86,-87,-99,-100,-90,-88,-89,-93,-105,-106,-107,290,-101,-96,-98,-97,-102,]),'MUL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[87,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,87,87,87,87,-114,-115,87,87,87,-119,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-150,-149,87,-151,87,-153,87,-156,87,-164,]),'DIV':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[88,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,88,88,88,88,-114,-115,88,88,88,-119,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-150,-149,88,-151,88,-153,88,-156,88,-164,]),'AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[89,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,89,89,-112,-113,-114,-115,-116,89,89,-119,-120,-121,89,89,-124,-125,-126,-127,-128,-129,89,89,89,89,-150,-149,89,-151,89,-153,89,-156,89,-164,]),'OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[90,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,90,90,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,90,90,-124,-125,-126,-127,-128,-129,90,90,90,90,-150,-149,90,-151,90,-153,90,-156,90,-164,]),'XOR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[91,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,91,91,-112,-113,-114,-115,-116,91,-118,-119,-120,-121,91,91,-124,-125,-126,-127,-128,-129,91,91,91,91,-150,-149,91,-151,91,-153,91,-156,91,-164,]),'MOD':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[92,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,92,92,92,92,-114,-115,92,92,92,-119,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-150,-149,92,-151,92,-153,92,-156,92,-164,]),'LSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[93,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,93,93,-112,-113,-114,-115,93,93,93,-119,-120,-121,93,93,93,93,93,93,93,93,93,93,93,93,-150,-149,93,-151,93,-153,93,-156,93,-164,]),'RSHIFT':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[94,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,94,94,-112,-113,-114,-115,94,94,94,-119,-120,-121,94,94,94,94,94,94,94,94,94,94,94,94,-150,-149,94,-151,94,-153,94,-156,94,-164,]),'LOGICAL_OR':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[95,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,95,95,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,95,95,95,95,-150,-149,95,-151,95,-153,95,-156,95,-164,]),'LOGICAL_AND':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[96,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,96,96,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,96,-123,-124,-125,-126,-127,-128,-129,96,96,96,96,-150,-149,96,-151,96,-153,96,-156,96,-164,]),'NOT_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[97,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,97,97,-112,-113,-114,-115,97,97,97,-119,-120,-121,97,97,-124,-125,-126,-127,-128,-129,97,97,97,97,-150,-149,97,-151,97,-153,97,-156,97,-164,]),'EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[98,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,98,98,-112,-113,-114,-115,98,98,98,-119,-120,-121,98,98,-124,-125,-126,-127,-128,-129,98,98,98,98,-150,-149,98,-151,98,-153,98,-156,98,-164,]),'LESS_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[99,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,99,99,-112,-113,-114,-115,99,99,99,-119,-120,-121,99,99,99,99,-126,-127,-128,-129,99,99,99,99,-150,-149,99,-151,99,-153,99,-156,99,-164,]),'LESS':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[100,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,100,100,-112,-113,-114,-115,100,100,100,-119,-120,-121,100,100,100,100,-126,-127,-128,-129,100,100,100,100,-150,-149,100,-151,100,-153,100,-156,100,-164,]),'GREATER_EQUAL':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[101,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,101,101,-112,-113,-114,-115,101,101,101,-119,-120,-121,101,101,101,101,-126,-127,-128,-129,101,101,101,101,-150,-149,101,-151,101,-153,101,-156,101,-164,]),'GREATER':([47,55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,192,200,226,228,229,234,265,269,270,292,293,296,308,],[102,-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,102,102,-112,-113,-114,-115,102,102,102,-119,-120,-121,102,102,102,102,-126,-127,-128,-129,102,102,102,102,-150,-149,102,-151,102,-153,102,-156,102,-164,]),'RPAREN':([55,56,57,68,109,110,111,112,113,114,115,116,117,118,119,120,121,122,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,152,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,189,191,192,193,195,197,201,202,203,204,225,228,229,231,232,233,234,239,240,242,243,264,265,269,270,271,273,274,276,278,279,292,293,294,296,298,299,304,305,308,],[-108,-109,-110,-19,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-18,-42,-167,222,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,223,-158,-41,229,230,-167,-46,239,-167,-69,-167,-167,-150,-149,270,-154,-155,-167,-167,-68,-73,-74,293,-151,-152,-153,-161,-163,-43,-67,-71,-167,302,-156,-157,-167,-70,-72,-162,308,-164,]),'LBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,155,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,189,191,193,197,227,228,229,238,239,259,260,265,269,270,274,276,278,287,293,294,295,298,300,306,308,],[-108,-109,-110,187,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-42,196,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,196,-42,196,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-158,-41,196,-46,196,-150,-149,196,-167,-42,196,-151,-152,-153,-43,-67,-71,-158,-156,-157,196,196,-42,-158,-164,]),'RBRACKET':([55,56,57,109,110,111,112,113,114,115,116,117,118,119,120,121,122,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,196,226,228,229,235,236,237,265,269,270,293,308,],[-108,-109,-110,-130,-136,-137,-138,-139,-140,-141,-142,-143,-144,-145,-146,-147,-148,-111,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-167,265,-150,-149,274,-44,-45,-151,-152,-153,-156,-164,]),'DOT':([122,],[190,]),'REF':([122,124,126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,150,151,155,189,191,193,197,227,238,239,259,260,274,276,278,287,294,295,298,300,306,],[-42,197,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,197,-42,197,-158,-41,197,-46,197,197,-167,-42,197,-43,-67,-71,-158,-157,197,197,-42,-158,]),'RANGRBRACKET':([126,127,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,151,153,154,189,191,197,205,207,208,210,213,227,238,239,245,246,247,266,268,274,276,278,280,294,295,298,300,303,306,],[-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-47,-42,-167,-167,-158,-41,-46,244,-77,-78,-80,-167,-167,275,-167,-167,-79,-81,294,-160,-43,-67,-71,-76,-157,-167,-70,-42,-159,-80,]),'ASSIGNTYPE':([239,],[277,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,211,249,],[4,4,4,252,252,]),'empty':([0,3,4,26,27,28,29,30,32,33,35,52,60,67,75,76,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,109,122,123,148,149,151,152,153,154,159,183,187,188,195,196,198,202,204,211,213,214,221,222,223,225,227,230,234,239,245,249,258,259,260,261,263,267,272,277,279,286,290,295,296,300,302,],[5,5,5,36,65,68,65,73,73,73,36,106,73,73,73,158,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,106,189,189,194,65,161,189,203,207,210,217,106,161,73,233,237,73,242,68,250,189,68,73,106,106,233,268,161,273,278,207,250,217,287,73,291,161,73,161,73,242,73,106,268,273,306,106,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,108,222,223,290,302,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,108,222,223,290,302,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,159,211,249,258,],[9,9,9,219,254,254,219,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,222,223,254,255,290,302,],[25,38,38,38,38,25,284,38,38,]),'declarator':([13,14,64,],[27,29,148,]),'statement_nest':([26,35,],[34,79,]),'statement':([26,35,222,223,290,302,],[35,35,261,262,301,307,]),'decl_statement':([26,35,108,222,223,290,302,],[37,37,185,37,37,37,37,]),'expression_statement':([26,35,108,222,223,290,302,],[39,39,184,39,39,39,39,]),'if_statement':([26,35,222,223,290,302,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,222,223,290,302,],[41,41,41,41,41,41,]),'jump_statement':([26,35,222,223,290,302,],[42,42,42,42,42,42,]),'expression_opt':([26,35,52,108,183,222,223,290,302,],[45,45,105,45,224,45,45,45,45,]),'expression':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,149,183,187,195,222,223,225,230,263,272,290,302,],[47,47,47,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,47,192,200,47,226,234,47,47,234,269,292,296,47,47,]),'while_clause':([26,35,222,223,290,302,],[48,48,48,48,48,48,]),'for_clause':([26,35,222,223,290,302,],[49,49,49,49,49,49,]),'assign_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,149,183,187,195,222,223,225,230,263,272,290,302,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'binary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,149,183,187,195,222,223,225,230,263,272,290,302,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'unary_expr':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,149,183,187,195,222,223,225,230,263,272,290,302,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_operation_opt':([26,35,52,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,108,123,149,183,187,195,222,223,225,230,263,272,290,302,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'declarator_nest':([27,29,148,],[63,69,199,]),'type_spec_colon_opt':([28,204,214,],[66,243,256,]),'function_sign':([30,60,67,75,123,188,198,221,259,260,267,277,286,],[70,147,147,147,147,147,147,147,70,288,147,147,147,]),'generics_type_list_opt':([30,32,33,60,67,75,123,188,198,221,259,260,267,277,286,],[71,76,77,71,71,71,71,71,71,71,71,71,71,71,71,]),'generics_type_list':([30,32,33,60,67,75,123,188,198,221,259,260,267,277,286,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'primary_expr':([60,],[109,]),'operand':([60,],[110,]),'call_expr':([60,],[111,]),'index_expr':([60,],[112,]),'cast_expr':([60,],[113,]),'new_expr':([60,],[114,]),'member_expr':([60,],[115,]),'io_expr':([60,],[116,]),'type_spec':([60,67,75,123,188,198,221,267,277,286,],[124,150,155,193,227,238,260,295,298,227,]),'in_out':([60,],[125,]),'simple_type':([60,67,75,123,188,198,221,267,277,286,],[126,126,126,126,126,126,126,126,126,126,]),'complex_type':([60,67,75,123,157,188,198,209,221,267,277,286,],[127,127,127,127,212,127,127,247,127,127,127,127,]),'generic_type':([60,67,75,123,188,198,221,267,277,286,],[128,128,128,128,128,128,128,128,128,128,]),'array_type':([60,67,75,123,188,198,221,267,277,286,],[129,129,129,129,129,129,129,129,129,129,]),'reference_type':([60,67,75,123,188,198,221,267,277,286,],[130,130,130,130,130,130,130,130,130,130,]),'function_type':([60,67,75,123,188,198,221,267,277,286,],[131,131,131,131,131,131,131,131,131,131,]),'generics_type':([74,206,286,],[153,245,153,]),'complex_type_colon_opt':([76,],[156,]),'for_init_statement':([108,],[183,]),'generics_specialization_list_opt':([109,122,151,213,259,300,],[186,191,191,191,191,191,]),'parameter_decl_list_opt':([152,],[201,]),'parameter_decl':([152,241,],[202,279,]),'generics_type_comma_nest':([153,245,],[205,280,]),'generics_type_range_colon_opt':([154,300,],[208,208,]),'interface_member_decl_nest':([159,258,],[215,285,]),'interface_member_decl':([159,258,],[216,216,]),'member_declarator':([159,211,249,258,],[218,251,251,218,]),'type_function_decl':([159,211,249,258,],[220,255,255,220,]),'parameter_list_opt':([195,225,],[231,264,]),'parameter_list':([195,225,],[232,232,]),'int_literal_opt':([196,],[235,]),'parameter_decl_comma_nest':([202,279,],[240,299,]),'generics_type_range':([209,],[246,]),'member_decl_nest':([211,249,],[248,282,]),'member_decl':([211,249,],[249,249,]),'type_function_def':([211,249,],[253,253,]),'type_spec_comma_nest':([227,295,],[266,303,]),'expression_comma_nest':([234,296,],[271,304,]),'type_spec_assigntype_opt':([239,],[276,]),'statement_else_opt':([261,],[289,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',11),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',18),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',19),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',20),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',26),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',27),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',34),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',35),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',42),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',48),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',54),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',55),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',60),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',65),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',71),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',72),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_functio_decl','parser.py',76),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',82),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',90),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',91),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',92),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',93),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',106),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',107),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',108),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',109),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',110),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',111),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',112),
  ('complex_type -> ID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',118),
  ('generic_type -> ID','generic_type',1,'p_generic_type','parser.py',123),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',128),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',133),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',134),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',140),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',145),
  ('struct_decl -> STRUCT ID generics_type_list_opt complex_type_colon_opt LBRACE member_decl_nest RBRACE','struct_decl',7,'p_struct_decl','parser.py',150),
  ('complex_type_colon_opt -> COLON complex_type','complex_type_colon_opt',2,'p_complex_type_colon_opt','parser.py',156),
  ('complex_type_colon_opt -> empty','complex_type_colon_opt',1,'p_complex_type_colon_opt','parser.py',157),
  ('interface_decl -> INTERFACE ID generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',6,'p_interface_decl','parser.py',161),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',167),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',168),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',174),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',175),
  ('interface_member_decl_nest -> interface_member_decl SEMICOLON interface_member_decl_nest','interface_member_decl_nest',3,'p_interface_member_decl_nest','parser.py',181),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',182),
  ('member_decl -> member_declarator SEMICOLON','member_decl',2,'p_member_decl','parser.py',188),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',189),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',190),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',194),
  ('interface_member_decl -> member_declarator','interface_member_decl',1,'p_interface_member_decl','parser.py',200),
  ('interface_member_decl -> function_decl','interface_member_decl',1,'p_interface_member_decl','parser.py',201),
  ('interface_member_decl -> type_function_decl','interface_member_decl',1,'p_interface_member_decl','parser.py',202),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',206),
  ('member_declarator -> ID type_spec_colon_opt','member_declarator',2,'p_member_declarator','parser.py',210),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',216),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',221),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',222),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',228),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',229),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',241),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',242),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',249),
  ('generics_type_list -> LANGRBRACKET generics_type generics_type_comma_nest RANGRBRACKET','generics_type_list',4,'p_generics_type_list','parser.py',258),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',263),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',264),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',270),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',275),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',276),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',282),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',291),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',292),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',293),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',294),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',295),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',296),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',301),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',302),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',307),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',312),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',313),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',319),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',323),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',324),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',329),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',333),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',334),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',340),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',341),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',345),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',349),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',353),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',354),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',358),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',359),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',360),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',368),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',369),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',370),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',374),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',379),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',380),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',381),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',382),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',383),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',384),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',385),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',386),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',387),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',388),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',389),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',390),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',391),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',392),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',393),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',394),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',395),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',396),
  ('unary_expr -> unary_operation_opt primary_expr','unary_expr',2,'p_unary_expr','parser.py',402),
  ('unary_operation_opt -> NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',407),
  ('unary_operation_opt -> LOGICAL_NOT','unary_operation_opt',1,'p_unary_opration_opt','parser.py',408),
  ('unary_operation_opt -> PLUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',409),
  ('unary_operation_opt -> MINUS','unary_operation_opt',1,'p_unary_opration_opt','parser.py',410),
  ('unary_operation_opt -> empty','unary_operation_opt',1,'p_unary_opration_opt','parser.py',411),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',415),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',416),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',417),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',418),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',419),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',420),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',421),
  ('operand -> INT','operand',1,'p_operand','parser.py',425),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',426),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',427),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',428),
  ('operand -> STRING','operand',1,'p_operand','parser.py',429),
  ('operand -> ID','operand',1,'p_operand','parser.py',430),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',431),
  ('member_expr -> ID DOT ID','member_expr',3,'p_member_expr','parser.py',435),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',439),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',443),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',447),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',451),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',452),
  ('call_expr -> primary_expr generics_specialization_list_opt LPAREN parameter_list_opt RPAREN','call_expr',5,'p_call_expr','parser.py',456),
  ('generics_specialization_list_opt -> LANGRBRACKET type_spec type_spec_comma_nest RANGRBRACKET','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',461),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',462),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',470),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',471),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',475),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',479),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',480),
  ('io_expr -> in_out LANGRBRACKET type_spec RANGRBRACKET LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',484),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',487),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',488),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',492),
]
