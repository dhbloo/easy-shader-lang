
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALNOT_EQUALleftLESSLESS_EQUALGREATERGREATER_EQUALleftLSHIFTRSHIFTleftPLUSMINUSleftMULDIVMODrightUMINUSUPLUSLOGICAL_NOTNOTAND ASSIGN ASSIGNTYPE BOOL BREAK COLON COMMA COMMENT CONST CONTINUE DIV DOT DOUBLE ELSE EQUAL F16 F32 F64 FLOAT FOR FUNC GENERICID GENERICMARK GREATER GREATER_EQUAL HEXADECIMAL I16 I32 I64 I8 ID IF IN INT INTERFACE INTERFACEID LBRACE LBRACKET LESS LESS_EQUAL LET LOGICAL_AND LOGICAL_NOT LOGICAL_OR LPAREN LSHIFT MINUS MOD MUL NOT NOT_EQUAL OR OUT PLUS RBRACE RBRACKET REF RETURN RPAREN RSHIFT SEMICOLON STRING STRUCT STRUCTID TYPE TYPEALIASID U16 U32 U64 U8 VOID WHILE XORstart : translation_unittranslation_unit : block_decl translation_unit\n                        | function_def translation_unit\n                        | emptyblock_decl : type_decl SEMICOLON\n                  | variable_decl SEMICOLON\n                  | constant_decl SEMICOLON\n                  | function_decl SEMICOLONtype_decl : type_alias_decl\n                 | struct_decl\n                 | interface_decltype_alias_decl : TYPE ID ASSIGN type_specvariable_decl : LET declarator declarator_nestdeclarator_nest : COMMA declarator declarator_nest\n                       | emptyconstant_decl : CONST declarator declarator_nestdeclarator : ID type_spec_colon_opt ASSIGN expressiontype_spec_colon_opt : COLON type_spec\n                           | emptyfunction_decl : FUNC ID function_sign function_def : function_decl block_statementtype_spec : simple_type\n                 | complex_type\n                 | generic_type\n                 | alias_type\n                 | array_type\n                 | reference_type\n                 | function_typesimple_type : VOID\n                   | BOOL\n                   | I8\n                   | U8\n                   | I16\n                   | U16\n                   | I32\n                   | U32\n                   | I64\n                   | U64\n                   | F16\n                   | F32\n                   | F64complex_type : INTERFACEID generics_specialization_list_opt\n                    | STRUCTID generics_specialization_list_optgeneric_type : GENERICIDalias_type : TYPEALIASIDarray_type : type_spec LBRACKET int_literal_opt RBRACKETint_literal_opt : INT\n                       | emptyreference_type : type_spec REFfunction_type : function_signstruct_decl : STRUCT ID new_struct generics_type_list_opt base_type_list_opt LBRACE member_decl_nest RBRACEnew_struct :base_type_list_opt : COLON complex_type complex_type_nest\n                          | emptycomplex_type_nest : COMMA complex_type complex_type_nest\n                         | emptyinterface_decl : INTERFACE ID new_interface generics_type_list_opt LBRACE  interface_member_decl_nest RBRACEnew_interface :generics_type_list_opt : generics_type_list\n                              | emptymember_decl_nest : member_decl member_decl_nest\n                        | emptyinterface_member_decl_nest : interface_member_decl interface_member_decl_nest\n                                  | emptymember_decl : member_declarator\n                   | function_def\n                   | type_function_deftype_function_def : type_function_decl block_statementinterface_member_decl : function_decl SEMICOLON\n                             | type_function_decl SEMICOLONtype_function_decl : FUNC type_spec function_signmember_declarator : ID COLON type_spec SEMICOLONfunction_sign : generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_optparameter_decl_list_opt : parameter_decl parameter_decl_comma_nest\n                               | emptytype_spec_assigntype_opt : ASSIGNTYPE type_spec\n                                | emptyparameter_decl_comma_nest : COMMA parameter_decl parameter_decl_comma_nest\n                                 | emptyparameter_decl : ID type_spec_colon_optgenerics_type_list : LESS generics_type generics_type_comma_nest GREATERgenerics_type_comma_nest : COMMA generics_type generics_type_comma_nest\n                                | emptygenerics_type : ID generics_type_range_colon_optgenerics_type_range_colon_opt : COLON generics_type_range\n                                     | emptygenerics_type_range : complex_typestatement : decl_statement\n                 | block_statement\n                 | expression_statement\n                 | if_statement\n                 | iteration_statement\n                 | jump_statementdecl_statement : variable_decl SEMICOLON\n                      | constant_decl SEMICOLONblock_statement : LBRACE statement_nest RBRACEstatement_nest : statement statement_nest\n                      | emptyexpression_statement : expression_opt SEMICOLONexpression_opt : expression\n                      | emptyif_statement : IF LPAREN expression RPAREN statement statement_else_optstatement_else_opt : ELSE statement\n                          | emptyiteration_statement : while_clause\n                             | for_clausewhile_clause : WHILE LPAREN expression RPAREN statementfor_clause : FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statementfor_init_statement : expression_statement\n                          | decl_statementjump_statement : BREAK SEMICOLON\n                      | CONTINUE SEMICOLON\n                      | RETURN expression_opt SEMICOLONexpression : assign_expr\n                  | binary_expr\n                  | unary_expr\n                  | primary_exprassign_expr : expression ASSIGN expressionbinary_expr : expression PLUS expression\n                   | expression MINUS expression\n                   | expression MUL expression\n                   | expression DIV expression\n                   | expression AND expression\n                   | expression OR expression\n                   | expression XOR expression\n                   | expression MOD expression\n                   | expression LSHIFT expression\n                   | expression RSHIFT expression\n                   | expression LOGICAL_OR expression\n                   | expression LOGICAL_AND expression\n                   | expression NOT_EQUAL expression\n                   | expression EQUAL expression\n                   | expression LESS_EQUAL expression\n                   | expression LESS expression\n                   | expression GREATER_EQUAL expression\n                   | expression GREATER expressionunary_expr : unary_operation primary_expr unary_operation : NOT\n                           | LOGICAL_NOT\n                           | PLUS %prec UPLUS\n                           | MINUS %prec UMINUSprimary_expr : operand\n                    | call_expr\n                    | index_expr\n                    | ref_expr\n                    | cast_expr\n                    | new_expr\n                    | member_expr\n                    | lambda_expr\n                    | io_exproperand : INT\n               | HEXADECIMAL\n               | FLOAT\n               | DOUBLE\n               | STRING\n               | ID\n               | LPAREN expression RPARENmember_expr : primary_expr DOT IDindex_expr : primary_expr LBRACKET expression RBRACKETref_expr : REF LPAREN expression RPARENcast_expr : LPAREN type_spec RPAREN expressionnew_expr : type_spec LPAREN parameter_list_opt RPARENparameter_list_opt : parameter_list\n                          | emptycall_expr : primary_expr LPAREN parameter_list_opt RPAREN\n                 | primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPARENgenerics_specialization_list_opt : LESS type_spec type_spec_comma_nest GREATER\n                                        | emptytype_spec_comma_nest : COMMA type_spec type_spec_comma_nest\n                            | emptyparameter_list : expression expression_comma_nestexpression_comma_nest : COMMA expression expression_comma_nest\n                             | emptylambda_expr : FUNC function_sign block_statementio_expr : in_out LESS type_spec GREATER LPAREN STRING RPARENin_out : IN\n              | OUTempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,19,20,21,22,23,24,25,126,],[-178,0,-1,-178,-178,-4,-2,-3,-5,-6,-7,-8,-21,-96,]),'LET':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,158,205,241,243,275,276,305,306,307,321,322,327,],[13,13,13,-5,-6,-7,-8,-21,13,13,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,13,-113,13,13,-178,-107,-102,13,-104,-103,13,-108,]),'CONST':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,158,205,241,243,275,276,305,306,307,321,322,327,],[14,14,14,-5,-6,-7,-8,-21,14,14,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,14,-113,14,14,-178,-107,-102,14,-104,-103,14,-108,]),'FUNC':([0,3,4,21,22,23,24,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,240,241,243,247,267,270,275,276,277,290,292,293,294,302,303,305,306,307,318,321,322,323,327,329,],[15,15,15,-5,-6,-7,-8,-21,83,83,-88,-89,-90,-91,-92,-93,83,-105,-106,83,-140,-141,83,-138,-139,-96,-94,-95,-99,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-111,-112,83,83,83,83,83,83,83,83,-113,83,-109,-110,274,83,83,83,274,274,-178,-107,83,274,-65,-66,-67,-69,-70,-102,83,-104,-68,-103,83,83,-108,-72,]),'TYPE':([0,3,4,21,22,23,24,25,126,],[16,16,16,-5,-6,-7,-8,-21,-96,]),'STRUCT':([0,3,4,21,22,23,24,25,126,],[17,17,17,-5,-6,-7,-8,-21,-96,]),'INTERFACE':([0,3,4,21,22,23,24,25,126,],[18,18,18,-5,-6,-7,-8,-21,-96,]),'SEMICOLON':([6,7,8,9,10,11,12,26,27,29,35,36,37,38,39,40,41,42,43,44,45,48,49,50,51,52,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,114,116,120,121,126,128,129,130,153,154,155,156,158,165,168,172,174,175,177,180,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,216,228,235,236,241,242,243,244,245,250,255,256,257,262,272,273,275,276,282,284,286,300,305,306,307,313,316,320,321,322,324,325,327,330,],[21,22,23,24,-9,-10,-11,-178,-178,-178,-178,-101,-88,-89,-90,-91,-92,-93,128,129,130,-100,-105,-106,153,154,-178,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-13,-15,-16,-20,-96,-94,-95,-99,-111,-112,205,-101,-178,-137,-49,-42,-168,-43,-178,-12,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-113,-178,-109,-110,-158,-174,-14,-17,-178,-161,-178,277,-165,-159,-162,-46,-160,-178,302,303,-178,-107,-167,-73,-77,-57,-102,-178,-104,-76,-51,-71,-103,-178,-175,329,-108,-166,]),'LBRACE':([9,26,32,33,35,37,38,39,40,41,42,49,50,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,121,122,124,125,126,128,129,130,153,154,168,170,172,174,175,181,182,205,237,239,241,243,251,256,262,268,275,276,282,284,286,295,296,297,299,305,306,307,313,319,320,321,322,326,327,],[26,26,-52,-58,26,-88,-89,-90,-91,-92,-93,-105,-106,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-59,-20,-60,-178,-178,-96,-94,-95,-99,-111,-112,-49,26,-42,-168,-43,-178,240,-113,267,-54,26,26,-81,-46,-178,-178,-178,-107,-167,-73,-77,26,26,-53,-56,-102,26,-104,-76,-178,-71,-103,26,-55,-108,]),'ID':([13,14,15,16,17,18,25,26,35,37,38,39,40,41,42,47,49,50,53,60,61,62,63,73,74,115,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,162,166,169,176,178,185,205,207,208,209,218,241,243,247,264,267,274,275,276,277,290,292,293,294,305,306,307,318,321,322,323,327,329,],[28,28,30,31,32,33,-21,80,80,-88,-89,-90,-91,-92,-93,80,-105,-106,80,-140,-141,164,80,-138,-139,28,-96,-94,-95,-99,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-111,-112,80,80,80,80,216,80,80,234,80,80,-113,80,-109,-110,164,80,80,80,234,288,30,-178,-107,80,288,-65,-66,-67,-102,80,-104,-68,-103,80,80,-108,-72,]),'RBRACE':([25,26,34,35,36,37,38,39,40,41,42,49,50,126,127,128,129,130,153,154,205,240,267,269,270,271,275,276,289,290,291,292,293,294,301,302,303,305,307,317,318,321,327,329,],[-21,-178,126,-178,-98,-88,-89,-90,-91,-92,-93,-105,-106,-96,-97,-94,-95,-99,-111,-112,-113,-178,-178,300,-178,-64,-178,-107,316,-178,-62,-65,-66,-67,-63,-69,-70,-102,-104,-61,-68,-103,-108,-72,]),'LPAREN':([26,30,35,36,37,38,39,40,41,42,46,47,49,50,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,118,122,123,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,159,161,165,166,168,169,171,172,173,174,175,178,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,207,208,209,212,214,216,228,241,242,243,245,247,250,251,255,256,257,258,260,262,274,275,276,277,282,284,285,286,304,305,306,307,310,313,315,321,322,323,324,327,330,],[47,-178,47,-60,-88,-89,-90,-91,-92,-93,131,47,-105,-106,47,157,158,-114,-115,-116,159,-140,-141,47,-142,-143,-144,-145,-146,-147,-148,-149,-150,-138,-139,-151,-152,-153,-154,-155,-156,166,169,-178,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,176,-59,-178,-60,-178,-96,-94,-95,-99,47,166,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-111,-112,-60,47,47,47,47,159,47,-49,47,-178,-42,-178,-168,-43,47,-157,47,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-113,47,-109,-110,-60,-178,-158,-174,47,-161,47,-165,47,-159,-81,-162,-46,-160,281,-178,-178,-178,-178,-107,47,-167,-73,-178,-77,-178,-102,47,-104,323,-76,-178,-103,47,47,-175,-108,-166,]),'IF':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[46,46,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,46,46,-178,-107,-102,46,-104,-103,46,-108,]),'BREAK':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[51,51,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,51,51,-178,-107,-102,51,-104,-103,51,-108,]),'CONTINUE':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[52,52,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,52,52,-178,-107,-102,52,-104,-103,52,-108,]),'RETURN':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[53,53,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,53,53,-178,-107,-102,53,-104,-103,53,-108,]),'WHILE':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[54,54,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,54,54,-178,-107,-102,54,-104,-103,54,-108,]),'FOR':([26,35,37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,241,243,275,276,305,306,307,321,322,327,],[55,55,-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,55,55,-178,-107,-102,55,-104,-103,55,-108,]),'NOT':([26,35,37,38,39,40,41,42,47,49,50,53,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[73,73,-88,-89,-90,-91,-92,-93,73,-105,-106,73,-96,-94,-95,-99,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-111,-112,73,73,73,73,73,73,73,73,-113,73,-109,-110,73,73,73,-178,-107,73,-102,73,-104,-103,73,73,-108,]),'LOGICAL_NOT':([26,35,37,38,39,40,41,42,47,49,50,53,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[74,74,-88,-89,-90,-91,-92,-93,74,-105,-106,74,-96,-94,-95,-99,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-111,-112,74,74,74,74,74,74,74,74,-113,74,-109,-110,74,74,74,-178,-107,74,-102,74,-104,-103,74,74,-108,]),'PLUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,165,166,169,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,216,227,228,236,241,242,243,245,247,250,255,257,275,276,277,278,305,306,307,308,321,322,323,324,327,330,],[60,60,-88,-89,-90,-91,-92,-93,60,135,-105,-106,60,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,-94,-95,-99,60,135,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-111,-112,60,60,60,60,-137,60,60,60,135,-157,60,135,-119,-120,-121,-122,135,135,135,-126,135,135,135,135,135,135,135,135,135,135,-113,135,60,-109,-110,135,135,-158,135,-174,135,60,135,60,-165,60,-159,-162,-160,-178,-107,60,135,-102,60,-104,135,-103,60,60,-175,-108,-166,]),'MINUS':([26,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,165,166,169,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,215,216,227,228,236,241,242,243,245,247,250,255,257,275,276,277,278,305,306,307,308,321,322,323,324,327,330,],[61,61,-88,-89,-90,-91,-92,-93,61,136,-105,-106,61,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,-94,-95,-99,61,136,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-111,-112,61,61,61,61,-137,61,61,61,136,-157,61,136,-119,-120,-121,-122,136,136,136,-126,136,136,136,136,136,136,136,136,136,136,-113,136,61,-109,-110,136,136,-158,136,-174,136,61,136,61,-165,61,-159,-162,-160,-178,-107,61,136,-102,61,-104,136,-103,61,61,-175,-108,-166,]),'INT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,167,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[75,75,-88,-89,-90,-91,-92,-93,75,-105,-106,75,-140,-141,75,-138,-139,-96,-94,-95,-99,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-111,-112,75,75,75,75,75,225,75,75,75,-113,75,-109,-110,75,75,75,-178,-107,75,-102,75,-104,-103,75,75,-108,]),'HEXADECIMAL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[76,76,-88,-89,-90,-91,-92,-93,76,-105,-106,76,-140,-141,76,-138,-139,-96,-94,-95,-99,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-111,-112,76,76,76,76,76,76,76,76,-113,76,-109,-110,76,76,76,-178,-107,76,-102,76,-104,-103,76,76,-108,]),'FLOAT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[77,77,-88,-89,-90,-91,-92,-93,77,-105,-106,77,-140,-141,77,-138,-139,-96,-94,-95,-99,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-111,-112,77,77,77,77,77,77,77,77,-113,77,-109,-110,77,77,77,-178,-107,77,-102,77,-104,-103,77,77,-108,]),'DOUBLE':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[78,78,-88,-89,-90,-91,-92,-93,78,-105,-106,78,-140,-141,78,-138,-139,-96,-94,-95,-99,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-111,-112,78,78,78,78,78,78,78,78,-113,78,-109,-110,78,78,78,-178,-107,78,-102,78,-104,-103,78,78,-108,]),'STRING':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,281,305,306,307,321,322,323,327,],[79,79,-88,-89,-90,-91,-92,-93,79,-105,-106,79,-140,-141,79,-138,-139,-96,-94,-95,-99,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-111,-112,79,79,79,79,79,79,79,79,-113,79,-109,-110,79,79,79,-178,-107,79,311,-102,79,-104,-103,79,79,-108,]),'REF':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,81,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,168,169,172,174,175,178,179,180,185,205,207,208,209,229,230,241,243,247,249,256,262,275,276,277,282,283,284,286,304,305,306,307,313,321,322,323,325,327,],[82,82,-88,-89,-90,-91,-92,-93,82,-105,-106,82,-140,-141,82,-138,-139,168,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-96,-94,-95,-99,82,168,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-111,-112,82,82,82,82,82,-49,82,-42,-168,-43,82,168,168,82,-113,82,-109,-110,168,168,82,82,82,168,-46,-178,-178,-107,82,-167,168,-73,-77,168,-102,82,-104,168,-103,82,82,168,-108,]),'IN':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[93,93,-88,-89,-90,-91,-92,-93,93,-105,-106,93,-140,-141,93,-138,-139,-96,-94,-95,-99,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-111,-112,93,93,93,93,93,93,93,93,-113,93,-109,-110,93,93,93,-178,-107,93,-102,93,-104,-103,93,93,-108,]),'OUT':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,178,185,205,207,208,209,241,243,247,275,276,277,305,306,307,321,322,323,327,],[94,94,-88,-89,-90,-91,-92,-93,94,-105,-106,94,-140,-141,94,-138,-139,-96,-94,-95,-99,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-111,-112,94,94,94,94,94,94,94,94,-113,94,-109,-110,94,94,94,-178,-107,94,-102,94,-104,-103,94,94,-108,]),'VOID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[95,95,-88,-89,-90,-91,-92,-93,95,-105,-106,95,-140,-141,95,-138,-139,95,95,-96,-94,-95,-99,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-111,-112,95,95,95,95,95,95,95,95,95,95,-113,95,-109,-110,95,95,95,95,95,95,-178,-107,95,95,-102,95,-104,95,-103,95,95,-108,]),'BOOL':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[96,96,-88,-89,-90,-91,-92,-93,96,-105,-106,96,-140,-141,96,-138,-139,96,96,-96,-94,-95,-99,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-111,-112,96,96,96,96,96,96,96,96,96,96,-113,96,-109,-110,96,96,96,96,96,96,-178,-107,96,96,-102,96,-104,96,-103,96,96,-108,]),'I8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[97,97,-88,-89,-90,-91,-92,-93,97,-105,-106,97,-140,-141,97,-138,-139,97,97,-96,-94,-95,-99,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-111,-112,97,97,97,97,97,97,97,97,97,97,-113,97,-109,-110,97,97,97,97,97,97,-178,-107,97,97,-102,97,-104,97,-103,97,97,-108,]),'U8':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[98,98,-88,-89,-90,-91,-92,-93,98,-105,-106,98,-140,-141,98,-138,-139,98,98,-96,-94,-95,-99,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-111,-112,98,98,98,98,98,98,98,98,98,98,-113,98,-109,-110,98,98,98,98,98,98,-178,-107,98,98,-102,98,-104,98,-103,98,98,-108,]),'I16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[99,99,-88,-89,-90,-91,-92,-93,99,-105,-106,99,-140,-141,99,-138,-139,99,99,-96,-94,-95,-99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-111,-112,99,99,99,99,99,99,99,99,99,99,-113,99,-109,-110,99,99,99,99,99,99,-178,-107,99,99,-102,99,-104,99,-103,99,99,-108,]),'U16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[100,100,-88,-89,-90,-91,-92,-93,100,-105,-106,100,-140,-141,100,-138,-139,100,100,-96,-94,-95,-99,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-111,-112,100,100,100,100,100,100,100,100,100,100,-113,100,-109,-110,100,100,100,100,100,100,-178,-107,100,100,-102,100,-104,100,-103,100,100,-108,]),'I32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[101,101,-88,-89,-90,-91,-92,-93,101,-105,-106,101,-140,-141,101,-138,-139,101,101,-96,-94,-95,-99,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-111,-112,101,101,101,101,101,101,101,101,101,101,-113,101,-109,-110,101,101,101,101,101,101,-178,-107,101,101,-102,101,-104,101,-103,101,101,-108,]),'U32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[102,102,-88,-89,-90,-91,-92,-93,102,-105,-106,102,-140,-141,102,-138,-139,102,102,-96,-94,-95,-99,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-111,-112,102,102,102,102,102,102,102,102,102,102,-113,102,-109,-110,102,102,102,102,102,102,-178,-107,102,102,-102,102,-104,102,-103,102,102,-108,]),'I64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[103,103,-88,-89,-90,-91,-92,-93,103,-105,-106,103,-140,-141,103,-138,-139,103,103,-96,-94,-95,-99,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-111,-112,103,103,103,103,103,103,103,103,103,103,-113,103,-109,-110,103,103,103,103,103,103,-178,-107,103,103,-102,103,-104,103,-103,103,103,-108,]),'U64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[104,104,-88,-89,-90,-91,-92,-93,104,-105,-106,104,-140,-141,104,-138,-139,104,104,-96,-94,-95,-99,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,-111,-112,104,104,104,104,104,104,104,104,104,104,-113,104,-109,-110,104,104,104,104,104,104,-178,-107,104,104,-102,104,-104,104,-103,104,104,-108,]),'F16':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[105,105,-88,-89,-90,-91,-92,-93,105,-105,-106,105,-140,-141,105,-138,-139,105,105,-96,-94,-95,-99,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,-111,-112,105,105,105,105,105,105,105,105,105,105,-113,105,-109,-110,105,105,105,105,105,105,-178,-107,105,105,-102,105,-104,105,-103,105,105,-108,]),'F32':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[106,106,-88,-89,-90,-91,-92,-93,106,-105,-106,106,-140,-141,106,-138,-139,106,106,-96,-94,-95,-99,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-111,-112,106,106,106,106,106,106,106,106,106,106,-113,106,-109,-110,106,106,106,106,106,106,-178,-107,106,106,-102,106,-104,106,-103,106,106,-108,]),'F64':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[107,107,-88,-89,-90,-91,-92,-93,107,-105,-106,107,-140,-141,107,-138,-139,107,107,-96,-94,-95,-99,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,-111,-112,107,107,107,107,107,107,107,107,107,107,-113,107,-109,-110,107,107,107,107,107,107,-178,-107,107,107,-102,107,-104,107,-103,107,107,-108,]),'INTERFACEID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,221,238,241,243,247,260,274,275,276,277,285,298,305,306,307,315,321,322,323,327,],[108,108,-88,-89,-90,-91,-92,-93,108,-105,-106,108,-140,-141,108,-138,-139,108,108,-96,-94,-95,-99,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-111,-112,108,108,108,108,108,108,108,108,108,108,-113,108,-109,-110,108,108,108,108,108,108,108,108,-178,-107,108,108,108,-102,108,-104,108,-103,108,108,-108,]),'STRUCTID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,221,238,241,243,247,260,274,275,276,277,285,298,305,306,307,315,321,322,323,327,],[109,109,-88,-89,-90,-91,-92,-93,109,-105,-106,109,-140,-141,109,-138,-139,109,109,-96,-94,-95,-99,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-111,-112,109,109,109,109,109,109,109,109,109,109,-113,109,-109,-110,109,109,109,109,109,109,109,109,-178,-107,109,109,109,-102,109,-104,109,-103,109,109,-108,]),'GENERICID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[110,110,-88,-89,-90,-91,-92,-93,110,-105,-106,110,-140,-141,110,-138,-139,110,110,-96,-94,-95,-99,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,-111,-112,110,110,110,110,110,110,110,110,110,110,-113,110,-109,-110,110,110,110,110,110,110,-178,-107,110,110,-102,110,-104,110,-103,110,110,-108,]),'TYPEALIASID':([26,35,37,38,39,40,41,42,47,49,50,53,60,61,63,73,74,118,123,126,128,129,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,161,166,169,171,173,178,185,205,207,208,209,214,241,243,247,260,274,275,276,277,285,305,306,307,315,321,322,323,327,],[111,111,-88,-89,-90,-91,-92,-93,111,-105,-106,111,-140,-141,111,-138,-139,111,111,-96,-94,-95,-99,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,-111,-112,111,111,111,111,111,111,111,111,111,111,-113,111,-109,-110,111,111,111,111,111,111,-178,-107,111,111,-102,111,-104,111,-103,111,111,-108,]),'LESS':([26,30,32,33,35,37,38,39,40,41,42,47,48,49,50,53,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,123,124,125,126,128,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,157,158,159,160,161,165,166,168,169,171,172,173,174,175,178,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,213,214,215,216,227,228,236,241,242,243,245,247,250,255,256,257,260,262,274,275,276,277,278,282,284,285,286,304,305,306,307,308,313,315,321,322,323,324,327,330,],[62,62,-52,-58,62,-88,-89,-90,-91,-92,-93,62,150,-105,-106,62,-114,-115,-116,-117,-140,-141,62,-142,-143,-144,-145,-146,-147,-148,-149,-150,-138,-139,-151,-152,-153,-154,-155,-156,62,-50,171,-22,-23,-24,-25,-26,-27,-28,-176,-177,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,173,173,-44,-45,62,62,62,62,-96,-94,-95,-99,62,150,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-111,-112,62,62,62,214,62,-137,62,-49,62,62,-42,62,-168,-43,62,150,-157,62,150,-119,-120,-121,-122,150,150,150,-126,-127,-128,150,150,150,150,-133,-134,-135,-136,-113,150,62,-109,-110,150,62,150,-158,150,-174,150,62,150,62,-165,62,-159,-162,-46,-160,62,-178,62,-178,-107,62,150,-167,-73,62,-77,62,-102,62,-104,150,-76,62,-103,62,62,-175,-108,-166,]),'COMMA':([27,29,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,126,163,164,165,168,172,174,175,177,179,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,213,216,220,222,228,230,232,234,236,242,245,249,250,252,253,254,255,256,257,262,266,268,278,282,283,284,286,287,313,319,324,330,],[115,115,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-19,-96,218,-178,-137,-49,-42,-168,-43,115,-18,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,247,-158,-84,-86,-174,260,264,-178,-17,-161,-165,260,-159,218,-85,-87,-162,-46,-160,-178,-80,298,247,-167,260,-73,-77,264,-76,298,-175,-166,]),'COLON':([28,32,113,122,124,164,181,234,251,288,],[118,-52,-59,-60,-178,221,238,118,-81,315,]),'ASSIGN':([28,31,48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,117,119,126,132,165,168,172,174,175,179,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,256,257,262,278,282,284,286,308,313,324,330,],[-178,123,134,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,178,-19,-96,134,-137,-49,-42,-168,-43,-18,134,-157,134,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,134,134,134,-158,134,-174,134,134,-165,-159,-162,-46,-160,-178,134,-167,-73,-77,134,-76,-175,-166,]),'ELSE':([37,38,39,40,41,42,49,50,126,128,129,130,153,154,205,275,276,305,307,321,327,],[-88,-89,-90,-91,-92,-93,-105,-106,-96,-94,-95,-99,-111,-112,-113,306,-107,-102,-104,-103,-108,]),'MUL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[137,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,137,-137,137,-157,137,137,137,-121,-122,137,137,137,-126,137,137,137,137,137,137,137,137,137,137,137,137,137,-158,137,-174,137,137,-165,-159,-162,-160,137,137,-175,-166,]),'DIV':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[138,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,138,-137,138,-157,138,138,138,-121,-122,138,138,138,-126,138,138,138,138,138,138,138,138,138,138,138,138,138,-158,138,-174,138,138,-165,-159,-162,-160,138,138,-175,-166,]),'AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[139,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,139,-137,139,-157,139,-119,-120,-121,-122,-123,139,139,-126,-127,-128,139,139,-131,-132,-133,-134,-135,-136,139,139,139,-158,139,-174,139,139,-165,-159,-162,-160,139,139,-175,-166,]),'OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[140,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,140,-137,140,-157,140,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,140,140,-131,-132,-133,-134,-135,-136,140,140,140,-158,140,-174,140,140,-165,-159,-162,-160,140,140,-175,-166,]),'XOR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[141,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,141,-137,141,-157,141,-119,-120,-121,-122,-123,141,-125,-126,-127,-128,141,141,-131,-132,-133,-134,-135,-136,141,141,141,-158,141,-174,141,141,-165,-159,-162,-160,141,141,-175,-166,]),'MOD':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[142,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,142,-137,142,-157,142,142,142,-121,-122,142,142,142,-126,142,142,142,142,142,142,142,142,142,142,142,142,142,-158,142,-174,142,142,-165,-159,-162,-160,142,142,-175,-166,]),'LSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[143,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,143,-137,143,-157,143,-119,-120,-121,-122,143,143,143,-126,-127,-128,143,143,143,143,143,143,143,143,143,143,143,-158,143,-174,143,143,-165,-159,-162,-160,143,143,-175,-166,]),'RSHIFT':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[144,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,144,-137,144,-157,144,-119,-120,-121,-122,144,144,144,-126,-127,-128,144,144,144,144,144,144,144,144,144,144,144,-158,144,-174,144,144,-165,-159,-162,-160,144,144,-175,-166,]),'LOGICAL_OR':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[145,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,145,-137,145,-157,145,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,145,145,145,-158,145,-174,145,145,-165,-159,-162,-160,145,145,-175,-166,]),'LOGICAL_AND':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[146,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,146,-137,146,-157,146,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,146,-130,-131,-132,-133,-134,-135,-136,146,146,146,-158,146,-174,146,146,-165,-159,-162,-160,146,146,-175,-166,]),'NOT_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[147,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,147,-137,147,-157,147,-119,-120,-121,-122,147,147,147,-126,-127,-128,147,147,-131,-132,-133,-134,-135,-136,147,147,147,-158,147,-174,147,147,-165,-159,-162,-160,147,147,-175,-166,]),'EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[148,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,148,-137,148,-157,148,-119,-120,-121,-122,148,148,148,-126,-127,-128,148,148,-131,-132,-133,-134,-135,-136,148,148,148,-158,148,-174,148,148,-165,-159,-162,-160,148,148,-175,-166,]),'LESS_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[149,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,149,-137,149,-157,149,-119,-120,-121,-122,149,149,149,-126,-127,-128,149,149,149,149,-133,-134,-135,-136,149,149,149,-158,149,-174,149,149,-165,-159,-162,-160,149,149,-175,-166,]),'GREATER_EQUAL':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,132,165,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,227,228,236,242,245,250,255,257,278,308,324,330,],[151,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,151,-137,151,-157,151,-119,-120,-121,-122,151,151,151,-126,-127,-128,151,151,151,151,-133,-134,-135,-136,151,151,151,-158,151,-174,151,151,-165,-159,-162,-160,151,151,-175,-166,]),'GREATER':([48,56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,132,163,164,165,168,172,174,175,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,213,215,216,217,219,220,222,227,228,229,230,236,242,245,249,250,252,253,254,255,256,257,259,261,262,278,279,280,282,283,284,286,308,312,313,324,330,],[152,-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-96,152,-178,-178,-137,-49,-42,-168,-43,152,-157,152,-119,-120,-121,-122,152,152,152,-126,-127,-128,152,152,152,152,-133,-134,-135,-136,152,152,152,-158,251,-83,-84,-86,152,-174,258,-178,152,152,-165,-178,-159,-178,-85,-87,-162,-46,-160,282,-170,-178,152,310,-82,-167,-178,-73,-77,152,-169,-76,-175,-166,]),'RPAREN':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,119,126,132,133,159,165,166,168,172,174,175,176,179,183,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,210,211,212,213,216,223,227,228,231,232,233,234,242,245,246,248,250,255,256,257,262,263,265,266,278,282,284,286,287,308,309,311,313,314,323,324,328,330,],[-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-19,-96,184,185,-178,-137,-178,-49,-42,-168,-43,-178,-18,241,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,243,245,-163,-164,-178,-158,255,257,-174,262,-178,-75,-178,-161,-165,-171,-173,-159,-162,-46,-160,-178,-74,-79,-80,-178,-167,-73,-77,-178,322,-172,324,-76,-78,-178,-175,330,-166,]),'GENERICMARK':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,242,245,250,255,257,324,330,],[-114,-115,-116,160,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,160,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-158,-174,-161,-165,-159,-162,-160,-175,-166,]),'LBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,81,84,86,87,88,89,90,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,133,165,168,172,174,175,179,180,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,229,230,242,245,249,250,255,256,257,262,282,283,284,286,304,313,324,325,330,],[-114,-115,-116,161,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,167,-50,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-178,-178,-44,-45,-96,167,161,-49,-42,-168,-43,167,167,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-158,-174,167,167,-161,-165,167,-159,-162,-46,-160,-178,-167,167,-73,-77,167,167,-175,167,-166,]),'DOT':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,216,228,242,245,250,255,257,324,330,],[-114,-115,-116,162,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,162,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-158,-174,-161,-165,-159,-162,-160,-175,-166,]),'RBRACKET':([56,57,58,59,64,65,66,67,68,69,70,71,72,75,76,77,78,79,80,126,165,167,184,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,215,216,224,225,226,228,242,245,250,255,257,324,330,],[-114,-115,-116,-117,-142,-143,-144,-145,-146,-147,-148,-149,-150,-151,-152,-153,-154,-155,-156,-96,-137,-178,-157,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,250,-158,256,-47,-48,-174,-161,-165,-159,-162,-160,-175,-166,]),'ASSIGNTYPE':([262,],[285,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'translation_unit':([0,3,4,],[2,19,20,]),'block_decl':([0,3,4,],[3,3,3,]),'function_def':([0,3,4,267,290,],[4,4,4,293,293,]),'empty':([0,3,4,26,27,28,29,30,35,47,53,63,83,108,109,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,163,164,166,167,169,171,173,176,177,178,181,185,207,213,214,230,232,234,240,241,243,247,249,252,260,262,267,268,270,274,275,277,278,283,285,287,290,304,306,315,319,322,323,],[5,5,5,36,116,119,116,122,36,122,156,122,122,174,174,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,156,212,122,219,222,212,226,122,122,122,233,116,122,239,122,156,248,122,261,265,119,271,156,156,122,261,219,122,286,291,299,271,122,307,122,248,261,122,265,291,122,156,122,299,156,212,]),'type_decl':([0,3,4,],[6,6,6,]),'variable_decl':([0,3,4,26,35,158,241,243,306,322,],[7,7,7,43,43,43,43,43,43,43,]),'constant_decl':([0,3,4,26,35,158,241,243,306,322,],[8,8,8,44,44,44,44,44,44,44,]),'function_decl':([0,3,4,240,267,270,290,],[9,9,9,272,295,272,295,]),'type_alias_decl':([0,3,4,],[10,10,10,]),'struct_decl':([0,3,4,],[11,11,11,]),'interface_decl':([0,3,4,],[12,12,12,]),'block_statement':([9,26,35,170,241,243,295,296,306,322,],[25,38,38,228,38,38,25,318,38,38,]),'declarator':([13,14,115,],[27,29,177,]),'statement_nest':([26,35,],[34,127,]),'statement':([26,35,241,243,306,322,],[35,35,275,276,321,327,]),'decl_statement':([26,35,158,241,243,306,322,],[37,37,209,37,37,37,37,]),'expression_statement':([26,35,158,241,243,306,322,],[39,39,208,39,39,39,39,]),'if_statement':([26,35,241,243,306,322,],[40,40,40,40,40,40,]),'iteration_statement':([26,35,241,243,306,322,],[41,41,41,41,41,41,]),'jump_statement':([26,35,241,243,306,322,],[42,42,42,42,42,42,]),'expression_opt':([26,35,53,158,207,241,243,306,322,],[45,45,155,45,244,45,45,45,45,]),'expression':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[48,48,132,48,183,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,206,48,213,215,213,227,236,242,48,48,48,278,308,48,48,213,]),'while_clause':([26,35,241,243,306,322,],[49,49,49,49,49,49,]),'for_clause':([26,35,241,243,306,322,],[50,50,50,50,50,50,]),'assign_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'binary_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'unary_expr':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'primary_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[59,59,59,59,165,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'unary_operation':([26,35,47,53,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'operand':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'call_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'index_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'ref_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'cast_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'new_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'member_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'lambda_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'io_expr':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'type_spec':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[81,81,133,81,81,179,180,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,229,230,81,81,81,249,81,81,81,283,304,81,313,81,325,81,81,]),'function_sign':([26,30,35,47,53,63,83,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,304,306,315,322,323,],[84,121,84,84,84,84,170,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,320,84,84,84,84,]),'in_out':([26,35,47,53,63,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,178,185,207,241,243,247,277,306,322,323,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'simple_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'complex_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,221,238,241,243,247,260,274,277,285,298,306,315,322,323,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,254,268,87,87,87,87,87,87,87,319,87,87,87,87,]),'generic_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'alias_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'array_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'reference_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'function_type':([26,35,47,53,63,118,123,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,306,315,322,323,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'generics_type_list_opt':([26,30,35,47,53,63,83,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,304,306,315,322,323,],[112,112,112,112,112,112,112,112,112,181,182,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'generics_type_list':([26,30,35,47,53,63,83,118,123,124,125,131,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,161,166,169,171,173,178,185,207,214,241,243,247,260,274,277,285,304,306,315,322,323,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'declarator_nest':([27,29,177,],[114,120,235,]),'type_spec_colon_opt':([28,234,],[117,266,]),'new_struct':([32,],[124,]),'new_interface':([33,],[125,]),'generics_type':([62,218,],[163,252,]),'generics_specialization_list_opt':([108,109,],[172,175,]),'for_init_statement':([158,],[207,]),'parameter_list_opt':([159,166,323,],[210,223,328,]),'parameter_list':([159,166,323,],[211,211,211,]),'generics_type_comma_nest':([163,252,],[217,280,]),'generics_type_range_colon_opt':([164,],[220,]),'int_literal_opt':([167,],[224,]),'parameter_decl_list_opt':([176,],[231,]),'parameter_decl':([176,264,],[232,287,]),'base_type_list_opt':([181,],[237,]),'expression_comma_nest':([213,278,],[246,309,]),'generics_type_range':([221,],[253,]),'type_spec_comma_nest':([230,249,283,],[259,279,312,]),'parameter_decl_comma_nest':([232,287,],[263,314,]),'interface_member_decl_nest':([240,270,],[269,301,]),'interface_member_decl':([240,270,],[270,270,]),'type_function_decl':([240,267,270,290,],[273,296,273,296,]),'type_spec_assigntype_opt':([262,],[284,]),'member_decl_nest':([267,290,],[289,317,]),'member_decl':([267,290,],[290,290,]),'member_declarator':([267,290,],[292,292,]),'type_function_def':([267,290,],[294,294,]),'complex_type_nest':([268,319,],[297,326,]),'statement_else_opt':([275,],[305,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> translation_unit','start',1,'p_expression_translationUnit','parser.py',13),
  ('translation_unit -> block_decl translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',18),
  ('translation_unit -> function_def translation_unit','translation_unit',2,'p_translationUnit_nest','parser.py',19),
  ('translation_unit -> empty','translation_unit',1,'p_translationUnit_nest','parser.py',20),
  ('block_decl -> type_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',28),
  ('block_decl -> variable_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',29),
  ('block_decl -> constant_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',30),
  ('block_decl -> function_decl SEMICOLON','block_decl',2,'p_block_decl','parser.py',31),
  ('type_decl -> type_alias_decl','type_decl',1,'p_type_decl','parser.py',36),
  ('type_decl -> struct_decl','type_decl',1,'p_type_decl','parser.py',37),
  ('type_decl -> interface_decl','type_decl',1,'p_type_decl','parser.py',38),
  ('type_alias_decl -> TYPE ID ASSIGN type_spec','type_alias_decl',4,'p_type_alias_decl','parser.py',42),
  ('variable_decl -> LET declarator declarator_nest','variable_decl',3,'p_variable_decl','parser.py',47),
  ('declarator_nest -> COMMA declarator declarator_nest','declarator_nest',3,'p_declarator_nest','parser.py',51),
  ('declarator_nest -> empty','declarator_nest',1,'p_declarator_nest','parser.py',52),
  ('constant_decl -> CONST declarator declarator_nest','constant_decl',3,'p_constant_decl','parser.py',59),
  ('declarator -> ID type_spec_colon_opt ASSIGN expression','declarator',4,'p_declarator','parser.py',63),
  ('type_spec_colon_opt -> COLON type_spec','type_spec_colon_opt',2,'p_type_spec_colon_opt','parser.py',67),
  ('type_spec_colon_opt -> empty','type_spec_colon_opt',1,'p_type_spec_colon_opt','parser.py',68),
  ('function_decl -> FUNC ID function_sign','function_decl',3,'p_function_decl','parser.py',75),
  ('function_def -> function_decl block_statement','function_def',2,'p_function_def','parser.py',79),
  ('type_spec -> simple_type','type_spec',1,'p_type_spec','parser.py',84),
  ('type_spec -> complex_type','type_spec',1,'p_type_spec','parser.py',85),
  ('type_spec -> generic_type','type_spec',1,'p_type_spec','parser.py',86),
  ('type_spec -> alias_type','type_spec',1,'p_type_spec','parser.py',87),
  ('type_spec -> array_type','type_spec',1,'p_type_spec','parser.py',88),
  ('type_spec -> reference_type','type_spec',1,'p_type_spec','parser.py',89),
  ('type_spec -> function_type','type_spec',1,'p_type_spec','parser.py',90),
  ('simple_type -> VOID','simple_type',1,'p_simple_type','parser.py',94),
  ('simple_type -> BOOL','simple_type',1,'p_simple_type','parser.py',95),
  ('simple_type -> I8','simple_type',1,'p_simple_type','parser.py',96),
  ('simple_type -> U8','simple_type',1,'p_simple_type','parser.py',97),
  ('simple_type -> I16','simple_type',1,'p_simple_type','parser.py',98),
  ('simple_type -> U16','simple_type',1,'p_simple_type','parser.py',99),
  ('simple_type -> I32','simple_type',1,'p_simple_type','parser.py',100),
  ('simple_type -> U32','simple_type',1,'p_simple_type','parser.py',101),
  ('simple_type -> I64','simple_type',1,'p_simple_type','parser.py',102),
  ('simple_type -> U64','simple_type',1,'p_simple_type','parser.py',103),
  ('simple_type -> F16','simple_type',1,'p_simple_type','parser.py',104),
  ('simple_type -> F32','simple_type',1,'p_simple_type','parser.py',105),
  ('simple_type -> F64','simple_type',1,'p_simple_type','parser.py',106),
  ('complex_type -> INTERFACEID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',110),
  ('complex_type -> STRUCTID generics_specialization_list_opt','complex_type',2,'p_complex_type','parser.py',111),
  ('generic_type -> GENERICID','generic_type',1,'p_generic_type','parser.py',119),
  ('alias_type -> TYPEALIASID','alias_type',1,'p_alias_type','parser.py',123),
  ('array_type -> type_spec LBRACKET int_literal_opt RBRACKET','array_type',4,'p_array_type','parser.py',127),
  ('int_literal_opt -> INT','int_literal_opt',1,'p_int_literal_opt','parser.py',131),
  ('int_literal_opt -> empty','int_literal_opt',1,'p_int_literal_opt','parser.py',132),
  ('reference_type -> type_spec REF','reference_type',2,'p_reference_type','parser.py',139),
  ('function_type -> function_sign','function_type',1,'p_function_type','parser.py',143),
  ('struct_decl -> STRUCT ID new_struct generics_type_list_opt base_type_list_opt LBRACE member_decl_nest RBRACE','struct_decl',8,'p_struct_decl','parser.py',147),
  ('new_struct -> <empty>','new_struct',0,'p_new_struct','parser.py',153),
  ('base_type_list_opt -> COLON complex_type complex_type_nest','base_type_list_opt',3,'p_base_type_list_opt','parser.py',158),
  ('base_type_list_opt -> empty','base_type_list_opt',1,'p_base_type_list_opt','parser.py',159),
  ('complex_type_nest -> COMMA complex_type complex_type_nest','complex_type_nest',3,'p_complex_type_nest','parser.py',166),
  ('complex_type_nest -> empty','complex_type_nest',1,'p_complex_type_nest','parser.py',167),
  ('interface_decl -> INTERFACE ID new_interface generics_type_list_opt LBRACE interface_member_decl_nest RBRACE','interface_decl',7,'p_interface_decl','parser.py',182),
  ('new_interface -> <empty>','new_interface',0,'p_new_interface','parser.py',187),
  ('generics_type_list_opt -> generics_type_list','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',192),
  ('generics_type_list_opt -> empty','generics_type_list_opt',1,'p_generics_type_list_opt','parser.py',193),
  ('member_decl_nest -> member_decl member_decl_nest','member_decl_nest',2,'p_member_decl_nest','parser.py',201),
  ('member_decl_nest -> empty','member_decl_nest',1,'p_member_decl_nest','parser.py',202),
  ('interface_member_decl_nest -> interface_member_decl interface_member_decl_nest','interface_member_decl_nest',2,'p_interface_member_decl_nest','parser.py',210),
  ('interface_member_decl_nest -> empty','interface_member_decl_nest',1,'p_interface_member_decl_nest','parser.py',211),
  ('member_decl -> member_declarator','member_decl',1,'p_member_decl','parser.py',218),
  ('member_decl -> function_def','member_decl',1,'p_member_decl','parser.py',219),
  ('member_decl -> type_function_def','member_decl',1,'p_member_decl','parser.py',220),
  ('type_function_def -> type_function_decl block_statement','type_function_def',2,'p_type_function_def','parser.py',226),
  ('interface_member_decl -> function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',230),
  ('interface_member_decl -> type_function_decl SEMICOLON','interface_member_decl',2,'p_interface_member_decl','parser.py',231),
  ('type_function_decl -> FUNC type_spec function_sign','type_function_decl',3,'p_type_function_decl','parser.py',240),
  ('member_declarator -> ID COLON type_spec SEMICOLON','member_declarator',4,'p_member_declarator','parser.py',244),
  ('function_sign -> generics_type_list_opt LPAREN parameter_decl_list_opt RPAREN type_spec_assigntype_opt','function_sign',5,'p_function_sign','parser.py',248),
  ('parameter_decl_list_opt -> parameter_decl parameter_decl_comma_nest','parameter_decl_list_opt',2,'p_parameter_decl_list_opt','parser.py',253),
  ('parameter_decl_list_opt -> empty','parameter_decl_list_opt',1,'p_parameter_decl_list_opt','parser.py',254),
  ('type_spec_assigntype_opt -> ASSIGNTYPE type_spec','type_spec_assigntype_opt',2,'p_type_spec_assigntype_opt','parser.py',261),
  ('type_spec_assigntype_opt -> empty','type_spec_assigntype_opt',1,'p_type_spec_assigntype_opt','parser.py',262),
  ('parameter_decl_comma_nest -> COMMA parameter_decl parameter_decl_comma_nest','parameter_decl_comma_nest',3,'p_parameter_decl_comma_opt','parser.py',269),
  ('parameter_decl_comma_nest -> empty','parameter_decl_comma_nest',1,'p_parameter_decl_comma_opt','parser.py',270),
  ('parameter_decl -> ID type_spec_colon_opt','parameter_decl',2,'p_parameter_decl','parser.py',277),
  ('generics_type_list -> LESS generics_type generics_type_comma_nest GREATER','generics_type_list',4,'p_generics_type_list','parser.py',284),
  ('generics_type_comma_nest -> COMMA generics_type generics_type_comma_nest','generics_type_comma_nest',3,'p_generics_type_comma_nest','parser.py',288),
  ('generics_type_comma_nest -> empty','generics_type_comma_nest',1,'p_generics_type_comma_nest','parser.py',289),
  ('generics_type -> ID generics_type_range_colon_opt','generics_type',2,'p_generics_type','parser.py',297),
  ('generics_type_range_colon_opt -> COLON generics_type_range','generics_type_range_colon_opt',2,'p_generics_type_range_colon_opt','parser.py',302),
  ('generics_type_range_colon_opt -> empty','generics_type_range_colon_opt',1,'p_generics_type_range_colon_opt','parser.py',303),
  ('generics_type_range -> complex_type','generics_type_range',1,'p_generics_type_range','parser.py',311),
  ('statement -> decl_statement','statement',1,'p_statement','parser.py',319),
  ('statement -> block_statement','statement',1,'p_statement','parser.py',320),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',321),
  ('statement -> if_statement','statement',1,'p_statement','parser.py',322),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',323),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',324),
  ('decl_statement -> variable_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',328),
  ('decl_statement -> constant_decl SEMICOLON','decl_statement',2,'p_decl_statement','parser.py',329),
  ('block_statement -> LBRACE statement_nest RBRACE','block_statement',3,'p_block_statement','parser.py',333),
  ('statement_nest -> statement statement_nest','statement_nest',2,'p_statement_nest','parser.py',337),
  ('statement_nest -> empty','statement_nest',1,'p_statement_nest','parser.py',338),
  ('expression_statement -> expression_opt SEMICOLON','expression_statement',2,'p_expression_statement','parser.py',345),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','parser.py',349),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','parser.py',350),
  ('if_statement -> IF LPAREN expression RPAREN statement statement_else_opt','if_statement',6,'p_if_statement','parser.py',357),
  ('statement_else_opt -> ELSE statement','statement_else_opt',2,'p_statement_else_opt','parser.py',361),
  ('statement_else_opt -> empty','statement_else_opt',1,'p_statement_else_opt','parser.py',362),
  ('iteration_statement -> while_clause','iteration_statement',1,'p_iteration_statement','parser.py',369),
  ('iteration_statement -> for_clause','iteration_statement',1,'p_iteration_statement','parser.py',370),
  ('while_clause -> WHILE LPAREN expression RPAREN statement','while_clause',5,'p_while_clause','parser.py',374),
  ('for_clause -> FOR LPAREN for_init_statement expression_opt SEMICOLON expression RPAREN statement','for_clause',8,'p_for_clause','parser.py',378),
  ('for_init_statement -> expression_statement','for_init_statement',1,'p_forInit_statement','parser.py',382),
  ('for_init_statement -> decl_statement','for_init_statement',1,'p_forInit_statement','parser.py',383),
  ('jump_statement -> BREAK SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',387),
  ('jump_statement -> CONTINUE SEMICOLON','jump_statement',2,'p_jump_statement','parser.py',388),
  ('jump_statement -> RETURN expression_opt SEMICOLON','jump_statement',3,'p_jump_statement','parser.py',389),
  ('expression -> assign_expr','expression',1,'p_expression','parser.py',402),
  ('expression -> binary_expr','expression',1,'p_expression','parser.py',403),
  ('expression -> unary_expr','expression',1,'p_expression','parser.py',404),
  ('expression -> primary_expr','expression',1,'p_expression','parser.py',405),
  ('assign_expr -> expression ASSIGN expression','assign_expr',3,'p_assign_expr','parser.py',409),
  ('binary_expr -> expression PLUS expression','binary_expr',3,'p_binary_expr','parser.py',415),
  ('binary_expr -> expression MINUS expression','binary_expr',3,'p_binary_expr','parser.py',416),
  ('binary_expr -> expression MUL expression','binary_expr',3,'p_binary_expr','parser.py',417),
  ('binary_expr -> expression DIV expression','binary_expr',3,'p_binary_expr','parser.py',418),
  ('binary_expr -> expression AND expression','binary_expr',3,'p_binary_expr','parser.py',419),
  ('binary_expr -> expression OR expression','binary_expr',3,'p_binary_expr','parser.py',420),
  ('binary_expr -> expression XOR expression','binary_expr',3,'p_binary_expr','parser.py',421),
  ('binary_expr -> expression MOD expression','binary_expr',3,'p_binary_expr','parser.py',422),
  ('binary_expr -> expression LSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',423),
  ('binary_expr -> expression RSHIFT expression','binary_expr',3,'p_binary_expr','parser.py',424),
  ('binary_expr -> expression LOGICAL_OR expression','binary_expr',3,'p_binary_expr','parser.py',425),
  ('binary_expr -> expression LOGICAL_AND expression','binary_expr',3,'p_binary_expr','parser.py',426),
  ('binary_expr -> expression NOT_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',427),
  ('binary_expr -> expression EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',428),
  ('binary_expr -> expression LESS_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',429),
  ('binary_expr -> expression LESS expression','binary_expr',3,'p_binary_expr','parser.py',430),
  ('binary_expr -> expression GREATER_EQUAL expression','binary_expr',3,'p_binary_expr','parser.py',431),
  ('binary_expr -> expression GREATER expression','binary_expr',3,'p_binary_expr','parser.py',432),
  ('unary_expr -> unary_operation primary_expr','unary_expr',2,'p_unary_expr','parser.py',437),
  ('unary_operation -> NOT','unary_operation',1,'p_unary_opration_opt','parser.py',442),
  ('unary_operation -> LOGICAL_NOT','unary_operation',1,'p_unary_opration_opt','parser.py',443),
  ('unary_operation -> PLUS','unary_operation',1,'p_unary_opration_opt','parser.py',444),
  ('unary_operation -> MINUS','unary_operation',1,'p_unary_opration_opt','parser.py',445),
  ('primary_expr -> operand','primary_expr',1,'p_primary_expr','parser.py',450),
  ('primary_expr -> call_expr','primary_expr',1,'p_primary_expr','parser.py',451),
  ('primary_expr -> index_expr','primary_expr',1,'p_primary_expr','parser.py',452),
  ('primary_expr -> ref_expr','primary_expr',1,'p_primary_expr','parser.py',453),
  ('primary_expr -> cast_expr','primary_expr',1,'p_primary_expr','parser.py',454),
  ('primary_expr -> new_expr','primary_expr',1,'p_primary_expr','parser.py',455),
  ('primary_expr -> member_expr','primary_expr',1,'p_primary_expr','parser.py',456),
  ('primary_expr -> lambda_expr','primary_expr',1,'p_primary_expr','parser.py',457),
  ('primary_expr -> io_expr','primary_expr',1,'p_primary_expr','parser.py',458),
  ('operand -> INT','operand',1,'p_operand','parser.py',462),
  ('operand -> HEXADECIMAL','operand',1,'p_operand','parser.py',463),
  ('operand -> FLOAT','operand',1,'p_operand','parser.py',464),
  ('operand -> DOUBLE','operand',1,'p_operand','parser.py',465),
  ('operand -> STRING','operand',1,'p_operand','parser.py',466),
  ('operand -> ID','operand',1,'p_operand','parser.py',467),
  ('operand -> LPAREN expression RPAREN','operand',3,'p_operand','parser.py',468),
  ('member_expr -> primary_expr DOT ID','member_expr',3,'p_member_expr','parser.py',479),
  ('index_expr -> primary_expr LBRACKET expression RBRACKET','index_expr',4,'p_index_expr','parser.py',483),
  ('ref_expr -> REF LPAREN expression RPAREN','ref_expr',4,'p_ref_expr','parser.py',487),
  ('cast_expr -> LPAREN type_spec RPAREN expression','cast_expr',4,'p_cast_expr','parser.py',491),
  ('new_expr -> type_spec LPAREN parameter_list_opt RPAREN','new_expr',4,'p_new_expr','parser.py',495),
  ('parameter_list_opt -> parameter_list','parameter_list_opt',1,'p_parameter_list_opt','parser.py',499),
  ('parameter_list_opt -> empty','parameter_list_opt',1,'p_parameter_list_opt','parser.py',500),
  ('call_expr -> primary_expr LPAREN parameter_list_opt RPAREN','call_expr',4,'p_call_expr','parser.py',507),
  ('call_expr -> primary_expr GENERICMARK LESS type_spec type_spec_comma_nest GREATER LPAREN parameter_list_opt RPAREN','call_expr',9,'p_call_expr','parser.py',508),
  ('generics_specialization_list_opt -> LESS type_spec type_spec_comma_nest GREATER','generics_specialization_list_opt',4,'p_generics_specialization_list_opt','parser.py',516),
  ('generics_specialization_list_opt -> empty','generics_specialization_list_opt',1,'p_generics_specialization_list_opt','parser.py',517),
  ('type_spec_comma_nest -> COMMA type_spec type_spec_comma_nest','type_spec_comma_nest',3,'p_type_spec_comma_nest','parser.py',524),
  ('type_spec_comma_nest -> empty','type_spec_comma_nest',1,'p_type_spec_comma_nest','parser.py',525),
  ('parameter_list -> expression expression_comma_nest','parameter_list',2,'p_parameter_list','parser.py',532),
  ('expression_comma_nest -> COMMA expression expression_comma_nest','expression_comma_nest',3,'p_expression_comma_nest','parser.py',536),
  ('expression_comma_nest -> empty','expression_comma_nest',1,'p_expression_comma_nest','parser.py',537),
  ('lambda_expr -> FUNC function_sign block_statement','lambda_expr',3,'p_lambda_expr','parser.py',544),
  ('io_expr -> in_out LESS type_spec GREATER LPAREN STRING RPAREN','io_expr',7,'p_io_expr','parser.py',549),
  ('in_out -> IN','in_out',1,'p_in_out','parser.py',553),
  ('in_out -> OUT','in_out',1,'p_in_out','parser.py',554),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',559),
]
