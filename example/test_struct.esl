struct Position {
    x : f32;
    y : f32;
    z : f32;

    func length_square(self : Position ref) -> f32 {
        return x * x + y * y + z * z;
    }
};



# struct A <Q> {
#     x : Q;
#     func ff<U>(self, y : U) -> Q {
#         return self.x + (Q)y;
#     }
# };
# 
# struct F {
#     a : i32;
#     b : f32;
#     func call(self, x : A<i32>, y:A<i32>) {
#         return x + y + self.a + (i32)self.b;
#     }
# };
# 
# interface Geometry {};
# interface Drawable {};
# 
# struct Sphere<T> : Geometry, Drawable {};
